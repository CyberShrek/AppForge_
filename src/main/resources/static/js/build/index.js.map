{"version":3,"file":"index.js","sources":["../../../../../../../typescript/utils/resolver.ts","../../../../../../../typescript/fragments/abstract/Fragment.ts","../../../../../../../typescript/utils/modal.ts","../../../../../../../typescript/fragments/header/Header.ts","../../../../../../../typescript/utils/DOMWizard.ts","../../../../../../../typescript/fragments/abstract/InputFragment.ts","../../../../../../../typescript/fragments/inputs/Button.ts","../../../../../../../typescript/utils/misc.ts","../../../../../../../typescript/fragments/inputs/DateInput.ts","../../../../../../../typescript/fragments/mainForm/fields/Field.ts","../../../../../../../typescript/fragments/mainForm/fields/DateField.ts","../../../../../../../typescript/fragments/inputs/Checkbox.ts","../../../../../../../typescript/fragments/mainForm/fields/CheckboxField.ts","../../../../../../../typescript/fragments/inputs/Select.ts","../../../../../../../typescript/utils/api/options/endpointOptions.ts","../../../../../../../typescript/fragments/mainForm/fields/select/SelectField.ts","../../../../../../../typescript/fragments/mainForm/fields/select/BankField.ts","../../../../../../../typescript/utils/api/options/serviceBank.ts","../../../../../../../typescript/fragments/mainForm/fields/select/CarriersField.ts","../../../../../../../typescript/fragments/mainForm/fields/select/CountriesField.ts","../../../../../../../typescript/fragments/mainForm/fields/select/RoadsField.ts","../../../../../../../typescript/fragments/mainForm/fields/select/StationsField.ts","../../../../../../../typescript/fragments/mainForm/MainForm.ts","../../../../../../../typescript/utils/api/validation.ts","../../../../../../../typescript/fragments/abstract/ExistedFragment.ts","../../../../../../../typescript/fragments/misc/Loader.ts","../../../../../../../typescript/fragments/report/Head.ts","../../../../../../../typescript/fragments/inputs/Text.ts","../../../../../../../typescript/fragments/report/content/Table.ts","../../../../../../node_modules/@kurkle/color/dist/color.esm.js","../../../../../../node_modules/chart.js/dist/chunks/helpers.segment.js","../../../../../../node_modules/chart.js/dist/chart.js","../../../../../../../typescript/fragments/report/content/Chart.ts","../../../../../../../typescript/fragments/report/Body.ts","../../../../../../../typescript/utils/api/reportsAPI.ts","../../../../../../../typescript/fragments/report/ReportSlot.ts","../../../../../../../typescript/fragments/Application.ts","../../../../../../../typescript/index.ts"],"sourcesContent":["export function resolveCSS(name: string){\r\n    const source = `./css/${name}.css`\r\n    const headElement = document.querySelector(\"head\")\r\n    if(headElement.querySelector(`link[href=\"${source}\"]`) === null) {\r\n        const styleEl = document.createElement(\"link\")\r\n        styleEl.setAttribute(\"rel\", \"stylesheet\")\r\n        styleEl.setAttribute(\"href\", source)\r\n        headElement.appendChild(styleEl)\r\n    }\r\n}","export abstract class Fragment {\r\n\r\n    private coreElement: HTMLElement\r\n    private insertCallback: (() => void)|void\r\n\r\n    protected set core(element: HTMLElement){\r\n        if(!this.coreElement){\r\n            this.coreElement = element\r\n            this.insertCallback = !!this.insertCallback ? this.insertCallback() : null\r\n        }\r\n        else throw new Error(\"The core cannot be reassigned\")\r\n    }\r\n    get core(): typeof this.coreElement{\r\n        return this.coreElement\r\n    }\r\n\r\n    protected constructor(location: FragmentLocation) {\r\n        this.insertCallback = () => {\r\n            if(!!location.position)\r\n                location.target.insertAdjacentElement(location.position, this.coreElement)\r\n            else\r\n                location.target.replaceWith(this.coreElement)\r\n        }\r\n    }\r\n\r\n    set class(className: string){\r\n        this.core.className = className\r\n    }\r\n    get class(): string{\r\n        return this.core.className\r\n    }\r\n    addClass   =(className: string) => this.core.classList.add(className)\r\n    removeClass=(className: string) => this.core.classList.remove(className)\r\n    toggleClass=(className: string) => this.core.classList.toggle(className)\r\n\r\n    hide(){\r\n        this.core.style.display = \"none\"\r\n    }\r\n\r\n    show(){\r\n        this.core.style.display = \"\"\r\n    }\r\n\r\n    remove(){\r\n        this.core.remove()\r\n    }\r\n}","import swal, {SweetAlertResult} from \"sweetalert2\"\r\nimport {type SweetAlertOptions, type SweetAlertPosition} from \"sweetalert2\"\r\nimport {resolveCSS} from \"./resolver\"\r\n\r\nresolveCSS(\"third-party/sweetalert2\")\r\n\r\nlet mouseEvent: MouseEvent\r\ndocument.addEventListener(\"mousemove\", event => mouseEvent = event)\r\n\r\nexport function popupMessage(title?: string, text?: string){\r\n    popupSweetModal({title, text})\r\n}\r\n\r\nexport function popupList(title?: string, list?: { icon: string, text: string }[], footer?: string){\r\n    popupSweetModal({\r\n        title,\r\n        html:`<ul>${list.map(item => `<li style='list-style-type: \"${item.icon}\\t\"'>${item.text}</li>`).join(\"\")}</ul>`,\r\n        footer\r\n    })\r\n}\r\n\r\nexport function popupTimeoutAction(text?: string, confirmButtonText?: string, onConfirm?: () => void, radioOptions?: {[key: string]: string}){\r\n    popupSweetModal({\r\n        text, confirmButtonText,\r\n        input: radioOptions ? \"radio\" : undefined,\r\n        inputOptions: radioOptions ? radioOptions : undefined,\r\n        showConfirmButton: true,\r\n        timer: 3000,\r\n        timerProgressBar: true,\r\n        backdrop: false\r\n    }).then(result => {\r\n        if(result.isConfirmed)\r\n            onConfirm()\r\n    })\r\n}\r\n\r\nexport function popupError(title?: string, text?: string){\r\n    popupSweetModal({title, text, icon: \"error\"})\r\n}\r\n\r\nexport function popupHttpDataError(html?: string, footer?: string){\r\n    popupSweetModal({\r\n        title: \"–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö\",\r\n        icon: \"error\", html, footer\r\n    })\r\n}\r\n\r\nfunction popupSweetModal(options: SweetAlertOptions): Promise<SweetAlertResult>{\r\n    const position = getSweetMousePosition()\r\n    return swal.fire({\r\n        confirmButtonColor: \"var(--primary-color)\",\r\n        position,\r\n        showClass: {popup: 'animate__animated '+getAnimationShowClass(position)},\r\n        hideClass: {popup: 'animate__animated animate__zoomOut'},\r\n        showCloseButton: true,\r\n        allowEnterKey: false,\r\n        showConfirmButton: false,\r\n        ...options\r\n    })\r\n}\r\n\r\nfunction getSweetMousePosition(): SweetAlertPosition{\r\n    if(!mouseEvent) return \"center\"\r\n\r\n    const { clientX, clientY } = mouseEvent,\r\n        screenWidth = window.innerWidth || document.documentElement.clientWidth || document.body.clientWidth,\r\n        screenHeight = window.innerHeight || document.documentElement.clientHeight || document.body.clientHeight,\r\n        horizontalPosition = clientX <= screenWidth / 3 ? 'left' : clientX >= (screenWidth / 3) * 2 ? 'right' : 'center',\r\n        verticalPosition = clientY <= screenHeight / 3 ? 'top' : clientY >= (screenHeight / 3) * 2 ? 'bottom' : 'center',\r\n        position = `${verticalPosition}-${horizontalPosition}`\r\n\r\n    return position === \"top-center\" ? \"top\" : position === \"bottom-center\" ? \"bottom\" : position as SweetAlertPosition\r\n}\r\n\r\nfunction getAnimationShowClass(position: SweetAlertPosition): string{\r\n    switch (position) {\r\n        case \"top-left\"     : return \"animate__fadeInTopLeft\"\r\n        case \"top\"          : return \"animate__fadeInDown\"\r\n        case \"top-right\"    : return \"animate__fadeInTopRight\"\r\n        case \"center-left\"  : return \"animate__fadeInLeft\"\r\n        case \"center\"       : return \"animate__fadeIn\"\r\n        case \"center-right\" : return \"animate__fadeInRight\"\r\n        case \"bottom-left\"  : return \"animate__fadeInBottomLeft\"\r\n        case \"bottom\"       : return \"animate__fadeInUp\"\r\n        case \"bottom-right\" : return \"animate__fadeInBottomRight\"\r\n        default             : return \"\"\r\n    }\r\n}","import {resolveCSS} from \"../../utils/resolver\"\r\nimport {popupList, popupTimeoutAction} from \"../../utils/modal\"\r\nimport {Fragment} from \"../abstract/Fragment\"\r\n\r\nexport default class Header extends Fragment{\r\n\r\n    constructor(location: FragmentLocation) {\r\n        super(location)\r\n        this.core = location.target\r\n        resolveCSS(\"header\")\r\n        this.activateResetButton()\r\n        this.activateInfoButton()\r\n        this.activateHelpButton()\r\n    }\r\n\r\n    private activateResetButton(){\r\n        this.activateButton(\"reset\", () => location.reload())\r\n    }\r\n\r\n    private activateInfoButton(){\r\n        this.activateButton(\"info\", button => {\r\n            console.log(button)\r\n            popupList(\r\n                \"–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è\",\r\n                [\r\n                    {icon: \"üõà\", text: \"–í–µ—Ä—Å–∏—è –ø—Ä–æ–≥—Ä–∞–º–º—ã: \" + button.getAttribute(\"version\")},\r\n                    {icon: \"üóì\", text: \"–î–∞—Ç–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è: \"  + button.getAttribute(\"update-date\")},\r\n                    {icon: \"üë§\", text: \"–¢–µ—Ö–Ω–æ–ª–æ–≥: \"         + button.getAttribute(\"technologist-name\")}\r\n                ]\r\n                , button.getAttribute(\"footer\")\r\n                )})\r\n    }\r\n\r\n    private activateHelpButton(){\r\n        this.activateButton(\"help\", button => {\r\n            popupTimeoutAction(\r\n                \"–†—É–∫–æ–≤–æ–¥—Å—Ç–≤–æ\",\r\n                \"–°–∫–∞—á–∞—Ç—å –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—é\",\r\n                () => downloadUserManual(button.getAttribute(\"instruction-path\"))\r\n            )\r\n        })\r\n    }\r\n\r\n    private activateButton(buttonClassName: string, onClick: (clickedButton?: HTMLButtonElement) => void){\r\n        const buttonElement: HTMLButtonElement = this.core.querySelector(\"button.\"+buttonClassName)\r\n        buttonElement.addEventListener(\"click\", event => onClick(buttonElement))\r\n    }\r\n}\r\n\r\nfunction downloadUserManual(href){\r\n    const link = document.createElement('a')\r\n    link.href = href\r\n    link.target = '_blank'\r\n    document.body.appendChild(link)\r\n    link.click()\r\n    document.body.removeChild(link)\r\n}","// Returns created element with specific tag name and attributes\r\nexport function createElement<T extends HTMLElement>(tagName: string, textContent: string = \"\", ...attributes: Attribute[]): T{\r\n    const element = document.createElement(tagName) as T\r\n    if(textContent) element.textContent = textContent\r\n    attributes?.forEach(attribute =>\r\n        element.setAttribute(\r\n            Object.keys(attribute)[0],\r\n            String(Object.values(attribute)[0])\r\n        )\r\n    )\r\n    return element\r\n}\r\n\r\nexport function createDivElement(...attributes: Attribute[]): HTMLDivElement{\r\n    return createElement(\"div\", \"\", ...attributes)\r\n}\r\n\r\nexport function createButtonElement(textContent: string = \"\", ...attributes: Attribute[]): HTMLButtonElement{\r\n    return createElement(\"button\", textContent, ...attributes)\r\n}\r\n\r\nexport function createInputElement(type: string, ...attributes: Attribute[]): HTMLInputElement{\r\n    return createElement(\"input\", \"\", {type}, ...attributes)\r\n}\r\n\r\nexport function createLabelElement(textContent: string = \"\", ...attributes: Attribute[]): HTMLLabelElement{\r\n    return createElement(\"label\", textContent, ...attributes)\r\n}\r\n\r\nexport function createImageElement(src: string = \"\", alt: string = \"not found\", ...attributes: Attribute[]): HTMLImageElement{\r\n    return createElement(\"img\", \"\", {src}, ...attributes)\r\n}\r\n\r\nexport function createCanvasElement(...attributes: Attribute[]): HTMLCanvasElement{\r\n    return createElement(\"canvas\", \"\", ...attributes)\r\n}\r\n\r\n\r\n// Removes all child elements\r\nexport function emptyElement(element: Element, withText: boolean = true){\r\n    const text = element.textContent\r\n    while(element.firstElementChild !== null)\r\n        element.firstElementChild.remove()\r\n\r\n    if(!withText) element.textContent = text\r\n}\r\n\r\n// Returns startName with serial number\r\nexport function generateUniqueId(startName: string = \"element\"){\r\n    let serialNumber = -1,\r\n        name: string\r\n\r\n    do name = startName +\"-\"+ serialNumber++\r\n    while (document.getElementById(name) !== null)\r\n\r\n    return name\r\n}","import {Fragment} from \"./Fragment\"\r\n\r\nexport abstract class InputFragment<V> extends Fragment{\r\n\r\n    private _value: V\r\n    private valueEventCallbacks: ((value?: V) => void)[] = []\r\n    get value(): V {\r\n        return this._value\r\n    }\r\n\r\n    protected set value(value: V){\r\n        this._value = value\r\n        this.valueEventCallbacks.forEach(callback => callback(value))\r\n    }\r\n\r\n    protected constructor(protected readonly location: FragmentLocation) { super(location) }\r\n\r\n    subscribe(onValueEvent: (value: V) => void, runOnInit: boolean = true){\r\n        this.valueEventCallbacks.push(onValueEvent)\r\n        if(runOnInit)\r\n            onValueEvent(this.value)\r\n    }\r\n\r\n    protected debounce(callback: () => void, delay: number = 100): () => void {\r\n        let timeoutId: NodeJS.Timeout;\r\n        return () => {\r\n            clearTimeout(timeoutId)\r\n            timeoutId = setTimeout(callback, delay)\r\n        }\r\n    }\r\n}","import {createButtonElement, createImageElement} from \"../../utils/DOMWizard\"\r\nimport {InputFragment} from \"../abstract/InputFragment\"\r\n\r\nexport class Button extends InputFragment<void> {\r\n\r\n    private imageElement: HTMLImageElement\r\n\r\n    constructor(location: FragmentLocation) {\r\n        super(location)\r\n        this.core = createButtonElement()\r\n        this.core.addEventListener(\"click\", () => {\r\n            if(this.isAvailable)\r\n                this.value = this.value\r\n        })\r\n    }\r\n\r\n    set isAvailable(available: boolean){\r\n        if(available)\r\n            this.core.classList.remove(\"unavailable\")\r\n        else this.core.classList.add(\"unavailable\")\r\n    }\r\n    get isAvailable(): boolean{\r\n        return !this.core.classList.contains(\"unavailable\")\r\n    }\r\n    enable=() => this.isAvailable = true\r\n    disable=() => this.isAvailable = false\r\n\r\n\r\n    get hint(): string{\r\n        return this.core.getAttribute(\"title\")\r\n    }\r\n\r\n    set hint(hint: string){\r\n        this.core.setAttribute(\"title\", hint)\r\n    }\r\n\r\n    set text(text: string){\r\n        this.core.textContent = text\r\n    }\r\n    get text(): string{\r\n        return this.core.textContent\r\n    }\r\n\r\n    set image(src: string|null){\r\n        this.imageElement?.remove()\r\n        if(!!src) {\r\n            this.imageElement = createImageElement(src)\r\n            this.core.appendChild(this.imageElement)\r\n        }\r\n    }\r\n    get image(): string{\r\n        return this.imageElement?.src\r\n    }\r\n\r\n    override subscribe(onValueEvent: (value: void) => void, runOnInit: boolean = false) {\r\n        super.subscribe(onValueEvent, runOnInit)\r\n    }\r\n}","// Returns vararg items as a Set of the vararg items\r\nimport {Field} from \"../fragments/mainForm/fields/Field\"\r\n\r\nexport function setOf<T>(...items: T[]): Set<T>{\r\n    return new Set(items)\r\n}\r\n\r\n// Returns a Map of the vararg Pair entries\r\nexport function mapOf<K, V>(...entries: Pair<K, V>[]): Map<K, V>{\r\n    return new Map(entries.map(entry => [entry.first, entry.second]))\r\n}\r\n\r\n// Returns two arguments as a Pair object\r\nexport function pairOf<F, S>(first: F, second: S): Pair<F, S>{\r\n    return {first, second}\r\n}\r\n\r\n// Returns a basic number from gotten string if this is possible, or 0 if not\r\nexport function numberOf(word: string|number): number {\r\n    return isNaN(Number(word)) ? 0 : Number(word)\r\n}\r\n\r\n// Returns a Map consisting of the vararg Maps\r\nexport function concatMaps(...maps: Map<any, any>[]): Map<any, any>{\r\n    const buffer = []\r\n    maps.forEach(map => buffer.push(...map.entries()))\r\n    return new Map(buffer)\r\n}\r\n\r\n// Returns sorted by key Map\r\nexport function sortMap<K, V>(contentMap: Map<K, V>): Map<K, V>{\r\n    return new Map([...contentMap.entries()].sort(\r\n        (a : [K, V], b : [K, V]) : number => a[0] > b[0] ? 1 : a[0] < b[0] ? -1 : 0\r\n    ))\r\n}\r\n\r\nexport function filterMap<K, V>(map: Map<K, V>, filter: (value: V, key: K) => boolean): Map<K, V> {\r\n    return new Map(Array.from(map).filter(([key, value]) => filter(value, key)))\r\n}\r\n\r\nexport function mapToJson<V>(map: Map<string, V>): {[k: string]: V} {\r\n    const obj: {[k: string]: V} = {}\r\n    map.forEach((value, key) => obj[key] = value)\r\n    return obj\r\n}\r\n\r\nexport function jsonToMap<V>(json: object): Map<string, V> {\r\n    const map: Map<string, V> = new Map()\r\n    for (const key in json) {\r\n        map.set(key, json[key])\r\n    }\r\n    return map\r\n}\r\n\r\nexport function compareMaps<K, V>(map1: Map<K, V>|null, map2: Map<K, V>|null): boolean {\r\n    if(map1 === null || map2 === null)\r\n        return map1 === map2\r\n\r\n    if (map1.size !== map2.size)\r\n        return false\r\n\r\n    for (const [key, value] of map1) {\r\n        if (!map2.has(key))\r\n            return false\r\n        if (map2.get(key) !== value)\r\n            return false\r\n    }\r\n\r\n    return true\r\n}\r\n\r\nexport function setToArray<T>(set: Set<T>): T[] {\r\n    return [...set]\r\n}\r\n\r\nexport function stringify<T>(value: T): string{\r\n    if(value === null || value === undefined)\r\n        return \"\"\r\n    if(typeof value !== \"object\")\r\n        return String(value)\r\n    if(value instanceof Set || value instanceof Array)\r\n        return Array.from(value).join(\", \")\r\n    if(value instanceof Map)\r\n        return [...value.entries()].map(([key, value]) => `${value}(${key})`).join(\", \")\r\n    if (value instanceof Date)\r\n        return stringifyDate(value)\r\n\r\n    return stringify(jsonToMap(value))\r\n}\r\n\r\nexport function jsonify<T>(value: T|null):  any{\r\n    if(value === null || value === undefined)\r\n        return null\r\n    if(typeof value !== \"object\")\r\n        return value\r\n    if(value instanceof Set)\r\n        return setToArray(value)\r\n    if(value instanceof Map)\r\n        return mapToJson(value)\r\n\r\n    return value\r\n}\r\n\r\nexport function jsonifyFields(fields: Map<FieldKey, Field<any>>): JsonFieldValues{\r\n    const json: { [key: string]: object } = {}\r\n    fields.forEach((field, key) => {\r\n        json[key] = field.jsonValue\r\n    })\r\n    return json\r\n}\r\n\r\nexport function stringifyDate(date: Date): string {\r\n    const year = date.getFullYear(),\r\n        month = date.getMonth() + 1,\r\n        day = date.getDate()\r\n    return `${year}-${month < 10 ? '0' : ''}${month}-${day < 10 ? '0' : ''}${day}`\r\n}\r\n\r\nexport function javaSetToSet(javaSet: string): Set<string>{\r\n    return setOf(...splitJavaCollection(javaSet))\r\n}\r\n\r\nexport function javaMapToMap(javaMap: string): Map<string, string>{\r\n    return mapOf(\r\n        ...splitJavaCollection(javaMap)\r\n        .map(pair => {\r\n            const entry = pair.split(\"=\")\r\n            return pairOf(entry[0], entry[1])\r\n        })\r\n    )\r\n}\r\n\r\nexport function splitJavaCollection(javaCollection: string): string[]{\r\n    return javaCollection\r\n        .slice(1, -1) // Removing '{' and '}' in the both sides of the string\r\n        .split(\", \")\r\n}\r\n\r\nexport function transposeMatrix<T>(matrix: T[][]): T[][]{\r\n    return matrix[0].map((_, i) => matrix.map(row => row[i]))\r\n}\r\n\r\nexport function setCursorToLoading() {\r\n    document.documentElement.style.cursor = 'wait'\r\n}\r\n\r\nexport function setCursorToDefault() {\r\n    document.documentElement.style.cursor = 'default'\r\n}\r\n\r\nexport function scrollIntoElement(element: HTMLElement) {\r\n    element.scrollIntoView({behavior: \"smooth\", block: \"start\"})\r\n}\r\n\r\nexport function toggleFullscreen(element: HTMLElement){\r\n    if(!!getFullscreenElement())\r\n        document.exitFullscreen()\r\n    else\r\n        element.requestFullscreen()\r\n}\r\n\r\nexport function getFullscreenElement(): Element{\r\n    return document.querySelector(\":fullscreen\")\r\n}","import {resolveCSS} from \"../../utils/resolver\"\r\nimport {numberOf, stringifyDate} from \"../../utils/misc\"\r\nimport {easepick} from \"@easepick/core\"\r\nimport {AmpPlugin} from \"@easepick/amp-plugin\"\r\nimport {RangePlugin} from \"@easepick/range-plugin\"\r\nimport {LockPlugin} from \"@easepick/lock-plugin\"\r\nimport {DateTime} from \"@easepick/datetime\"\r\nimport {InputFragment} from \"../abstract/InputFragment\"\r\nimport {createDivElement} from \"../../utils/DOMWizard\"\r\n\r\nresolveCSS(\"third-party/easepick\")\r\n\r\nexport default class DateInput extends InputFragment<DateRange>{\r\n\r\n    constructor(location: FragmentLocation, config: DateInputConfig) {\r\n        super(location)\r\n        this.core = createDivElement({class: \"datepicker\"})\r\n        if(!config.defaultRange)\r\n            config.defaultRange = [stringifyDate(new Date()), stringifyDate(new Date())]\r\n\r\n        this.value = config.defaultRange\r\n        applyPicker(this.core, config, dateRange => {\r\n            this.value = dateRange\r\n        })\r\n    }\r\n}\r\n\r\nfunction applyPicker(core: HTMLElement, config: DateInputConfig, onSelect: (dateRange: DateRange) => void){\r\n    new easepick.create({\r\n        element: core,\r\n        format: \"DD.MM.YYYY\",\r\n        calendars: 2,\r\n        grid: 2,\r\n        zIndex: 100,\r\n        plugins: [AmpPlugin, RangePlugin, LockPlugin],\r\n        lang: 'ru',\r\n        AmpPlugin: {\r\n            darkMode: false,\r\n            resetButton: true,\r\n            dropdown: {\r\n                minYear: 2010, maxYear: null, months: true, years: true\r\n            }\r\n        },\r\n        RangePlugin: {\r\n            startDate: new DateTime(config.defaultRange[0]),\r\n            endDate: new DateTime(config.defaultRange[1]),\r\n            locale: {\r\n                one: '–¥–µ–Ω—å',\r\n                few: '–¥–Ω—è',\r\n                many: '–¥–Ω–µ–π'\r\n            },\r\n            delimiter: \" - \"\r\n        },\r\n        LockPlugin: {\r\n            minDays: 1,\r\n            maxDays: config.maxDays\r\n        },\r\n        css: [\r\n            \"app-forge/css/third-party/easepick.css\"\r\n        ],\r\n        setup(picker) {\r\n            picker.on(\"select\", (e) => {\r\n                onSelect([stringifyDate(e.detail.start), stringifyDate(e.detail.end)])\r\n                setTimeout(() => picker.hide(), 10)\r\n            })\r\n        }\r\n    })\r\n}","import {InputFragment} from \"../../abstract/InputFragment\"\r\nimport {Fragment} from \"../../abstract/Fragment\"\r\nimport {createLabelElement} from \"../../../utils/DOMWizard\";\r\nimport {jsonify} from \"../../../utils/misc\";\r\n\r\nexport abstract class Field<T extends InputFragment<any>> extends Fragment{\r\n\r\n    readonly input: T\r\n\r\n    jsonValue: object\r\n\r\n    private readonly warningLabel: HTMLLabelElement\r\n\r\n    protected constructor(location: FragmentLocation,\r\n                          InputClass: new(location: FragmentLocation, config: InputConfig) => T,\r\n                          inputConfig: InputConfig\r\n    ) {\r\n        super(location)\r\n        this.core = location.target\r\n        this.input = new InputClass({target: location.target, position: \"beforeend\"}, inputConfig)\r\n        this.input.subscribe(value => this.jsonValue = jsonify(value))\r\n        this.warningLabel = createLabelElement()\r\n        this.core.appendChild(this.warningLabel)\r\n    }\r\n\r\n    makeValid(){\r\n        this.warningLabel.textContent = \"\"\r\n        this.core.classList.remove(\"wrong\")\r\n    }\r\n\r\n    makeInvalid(message?: string){\r\n        this.warningLabel.textContent = message\r\n        this.core.classList.add(\"wrong\")\r\n    }\r\n}","import DateInput from \"../../inputs/DateInput\"\r\nimport {numberOf} from \"../../../utils/misc\"\r\nimport {Field} from \"./Field\";\r\n\r\nexport class DateField extends Field<DateInput>{\r\n\r\n    constructor(location: FragmentLocation, configElement: HTMLElement) {\r\n        super(location, DateInput, {\r\n            maxDays: numberOf(configElement.getAttribute(\"max-days\"))\r\n        })\r\n    }\r\n}","import {InputFragment} from \"../abstract/InputFragment\"\r\nimport {createDivElement, createInputElement, createLabelElement, generateUniqueId} from \"../../utils/DOMWizard\"\r\n\r\nexport default class Checkbox extends InputFragment<boolean>{\r\n\r\n    private checkBoxElement = createInputElement(\"checkbox\", {id: generateUniqueId(\"checkbox\")})\r\n    private labelElement    = createLabelElement(\"\", {for: this.checkBoxElement.id})\r\n\r\n    constructor(location: FragmentLocation, config: CheckboxInputConfig) {\r\n        super(location)\r\n        this.core = createDivElement({class: \"checkbox\"})\r\n        this.core.append(this.checkBoxElement, this.labelElement)\r\n        this.label = config.label\r\n        const updateValue=() => this.value = this.checkBoxElement.checked\r\n        updateValue()\r\n        this.checkBoxElement.addEventListener(\"change\", updateValue)\r\n    }\r\n\r\n    set label(name: string){\r\n        this.labelElement.textContent = name\r\n    }\r\n}","import Checkbox from \"../../inputs/Checkbox\"\r\nimport {Field} from \"./Field\"\r\n\r\nexport class CheckboxField extends Field<Checkbox>{\r\n\r\n    constructor(location: FragmentLocation, configElement: HTMLElement) {\r\n        super(location, Checkbox, {\r\n            label: configElement.getAttribute(\"label\")\r\n        })\r\n    }\r\n}","import {resolveCSS} from \"../../utils/resolver\"\r\nimport {InputFragment} from \"../abstract/InputFragment\"\r\nimport {createDivElement} from \"../../utils/DOMWizard\"\r\nimport {compareMaps} from \"../../utils/misc\"\r\n\r\nresolveCSS(\"third-party/virtual-select\")\r\n\r\nexport default class Select extends InputFragment<Options>{\r\n\r\n    private options: Options\r\n\r\n    constructor(location: FragmentLocation, config: SelectInputConfig) {\r\n        super(location)\r\n        this.core = createDivElement({class: \"select\"})\r\n        this.value = null\r\n        // this.value = config.multiple === true ? new Set() : \"\"\r\n        applyVirtualSelect(this.core, config)\r\n        this.core.addEventListener(\"change\", event => {\r\n            // @ts-ignore !!! Resolved by html import !!!\r\n            const value = event.currentTarget.value\r\n            const selectedOptions: Options = value.length > 0 ? this.optionKeysToOptions(\r\n                typeof value === \"object\" ? value : [value]\r\n            ) : null\r\n\r\n            // Need to check real changes to prevent doubling\r\n            if(!compareMaps(this.value, selectedOptions))\r\n                this.value = selectedOptions\r\n        })\r\n    }\r\n\r\n    protected optionsRetrievalCallbacks: Set<() => Promise<Options>> = new Set()\r\n\r\n    setOptions(options: Options){\r\n        this.options = options\r\n        const selectedKeysCache: Set<OptionKey> = new Set(!!this.value ? this.value.keys() : undefined)\r\n        if(!!options && options.size > 0) {\r\n            const defaultKeys: Set<OptionKey> = new Set(options.get(\"default\")?.split(\",\"))\r\n            options.delete(\"default\")\r\n            // @ts-ignore !!! Resolved by html import !!!\r\n            this.core.setOptions(mapToVirtualSelectOptions(options))\r\n            this.setSelected(selectedKeysCache.size > 0 ? selectedKeysCache : defaultKeys)\r\n            // @ts-ignore !!! Resolved by html import !!!\r\n            this.core.enable()\r\n        }\r\n        else {\r\n            // @ts-ignore !!! Resolved by html import !!!\r\n            this.core.disable()\r\n            // @ts-ignore !!! Resolved by html import !!!\r\n            this.core.reset()\r\n            this.core.blur()\r\n        }\r\n    }\r\n\r\n    setSelected(values: Set<OptionKey> = new Set()){\r\n        // @ts-ignore !!! Resolved by html import !!!\r\n        this.core.setValue(Array.from(values))\r\n    }\r\n\r\n    private optionKeysToOptions=(keys: OptionKey[]): Options =>\r\n        new Map(keys.map(key => [key, this.options.get(key)]))\r\n}\r\n\r\nfunction applyVirtualSelect(core: HTMLElement, config: SelectInputConfig){\r\n    // @ts-ignore !!! Resolved by html import !!!\r\n    VirtualSelect.init({\r\n        ele: core,\r\n        additionalClasses: \"multiselect\",\r\n        disabled: true,\r\n        autofocus: false,\r\n        markSearchResults: true,\r\n        zIndex: 100,\r\n        optionsCount: 6,\r\n        multiple: config.multiple,\r\n        search: config.search,\r\n        hasOptionDescription: config.showCodes,\r\n        disableSelectAll: config.disableSelectAll,\r\n        maxValues: config.maxValues,\r\n\r\n        placeholder: \"\",\r\n        noOptionsText: \"–í–∞—Ä–∏–∞–Ω—Ç—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã\",\r\n        noSearchResultsText: \"–†–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ\",\r\n        selectAllText: \"–í—ã–±—Ä–∞—Ç—å –≤—Å–µ\",\r\n        searchPlaceholderText: \"–ü–æ–∏—Å–∫...\",\r\n        optionsSelectedText: \"(–≤—ã–±—Ä–∞–Ω–æ)\",\r\n        optionSelectedText: \"–≤–∞—Ä–∏–∞–Ω—Ç –≤—ã–±—Ä–∞–Ω\",\r\n        allOptionsSelectedText: \"–í—Å–µ\",\r\n        clearButtonText: \"–û—á–∏—Å—Ç–∏—Ç—å\",\r\n        moreText: \"–µ—â—ë...\"\r\n    })\r\n}\r\n\r\nfunction mapToVirtualSelectOptions(map: Map<string, string>): any[]{\r\n    return [...map.entries()].map(entry => {\r\n        return {\r\n            label: entry[1],\r\n            value: entry[0],\r\n            alias: entry[0],\r\n            description: entry[0]\r\n        }\r\n    })\r\n}","import wretch from \"wretch\"\r\nimport {popupHttpDataError} from \"../../modal\"\r\nimport {jsonifyFields, setCursorToDefault, setCursorToLoading} from \"../../misc\"\r\nimport {Field} from \"../../../fragments/mainForm/fields/Field\"\r\n\r\nexport const fetchEndpointOptions = (url: string, subscribedFields?: Map<FieldKey, Field<any>>): Promise<Options> => {\r\n        setCursorToLoading()\r\n        return wretch(url)\r\n            .post(subscribedFields ? jsonifyFields(subscribedFields) : undefined)\r\n            .json(json => new Map<OptionKey, OptionLabel>(Object.entries(json)))\r\n            .catch(error => {\r\n                popupHttpDataError(error, \"–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å —Å–ø–∏—Å–æ–∫ –æ–ø—Ü–∏–π\")\r\n                return new Map()\r\n            })\r\n            .finally(() => setCursorToDefault())\r\n}","import Select from \"../../../inputs/Select\"\r\nimport {concatMaps, numberOf} from \"../../../../utils/misc\"\r\nimport {InputFragment} from \"../../../abstract/InputFragment\"\r\nimport {fetchEndpointOptions} from \"../../../../utils/api/options/endpointOptions\"\r\nimport {Field} from \"../Field\";\r\n\r\nexport class SelectField extends Field<Select>{\r\n    constructor(location: FragmentLocation,\r\n                protected configElement: HTMLElement) {\r\n        const getBoolAttr=(attributeName: string): boolean => configElement.getAttribute(attributeName) === \"true\"\r\n        super(location, Select, {\r\n            maxValues: numberOf(configElement.getAttribute(\"max-values\")),\r\n            multiple: getBoolAttr(\"multiselect\"),\r\n            search: getBoolAttr(\"search\"),\r\n            showCodes: getBoolAttr(\"show-codes\"),\r\n            disableSelectAll: getBoolAttr(\"disable-select-all\")\r\n        } as SelectInputConfig)\r\n    }\r\n\r\n    optionsRetrieving = false\r\n\r\n    private endpointConfigElement: HTMLElement = this.configElement.querySelector(\"endpoint\")\r\n    private endpointPath: string = this.endpointConfigElement?.querySelector(\"path\")?.textContent\r\n    private endpointSubscribedFields: Map<string, Field<InputFragment<any>>|null> = new Map(this.endpointConfigElement ?\r\n        [...this.endpointConfigElement.querySelectorAll<HTMLElement>(\"subscriptions field\")]\r\n            .map(fieldElement => [fieldElement.textContent, null]) : null)\r\n\r\n    resolveSubscribedFields(getFieldFn: (key: string) => Field<InputFragment<any>>){\r\n        this.endpointSubscribedFields.forEach((_, key) => {\r\n            this.endpointSubscribedFields.set(key, getFieldFn(key))\r\n        })\r\n    }\r\n\r\n    listenSubscribedFields(){\r\n        if(!!this.endpointPath) {\r\n            if (this.endpointSubscribedFields.size > 0) {\r\n                this.endpointSubscribedFields.forEach(<T>(field: Field<InputFragment<any>>, key) =>\r\n                    field.input.subscribe(value => {\r\n                        if (this.optionsRetrieving === true)\r\n                            this.retrieveOptionsPromise(\r\n                                \"endpoint\", fetchEndpointOptions(this.endpointPath, this.endpointSubscribedFields))\r\n                    }))\r\n            } else this.retrieveOptionsPromise(\"endpoint\", fetchEndpointOptions(this.endpointPath))\r\n        }\r\n    }\r\n\r\n    private optionsBuffer: Map<string, Options> = new Map()\r\n    protected retrieveOptionsPromise(optionsGroupName: string, promise: Promise<Options>){\r\n        promise.then(options => {\r\n            this.optionsBuffer.set(optionsGroupName, options)\r\n            this.input.setOptions(concatMaps(...this.optionsBuffer.values()))\r\n        })\r\n    }\r\n}","import {SelectField} from \"./SelectField\"\r\nimport {DateField} from \"../DateField\"\r\nimport {InputFragment} from \"../../../abstract/InputFragment\"\r\nimport {stringify} from \"../../../../utils/misc\";\r\nimport {Field} from \"../Field\";\r\n\r\nexport abstract class BankField extends SelectField{\r\n    protected constructor(location: FragmentLocation, configElement: HTMLElement) {\r\n        super(location, configElement)\r\n    }\r\n\r\n    protected bankConfigElement: HTMLElement = this.configElement.querySelector(\"bank\")\r\n\r\n    private dateFieldKey = this.bankConfigElement.querySelector(\"subscriptions date\")?.textContent\r\n    protected dateFieldSubscription: DateField = null\r\n\r\n    override resolveSubscribedFields(getFieldFn: (key: string) => Field<InputFragment<any>>) {\r\n        super.resolveSubscribedFields(getFieldFn)\r\n        this.dateFieldSubscription = getFieldFn(this.dateFieldKey)\r\n    }\r\n\r\n    protected resolveBankSubscribing(fetchBankOptionsFn: (...subscriptionValues: any[]) => Promise<Options>,\r\n                                     ...subscriptionFields: Field<InputFragment<any>>[]){\r\n\r\n        subscriptionFields.forEach(field =>\r\n            field.input.subscribe(value => {\r\n                for (const subscription of subscriptionFields) {\r\n                    if (subscription.input.value === null || stringify(subscription.input.value).length <= 0) {\r\n                        this.input.setOptions(null)\r\n                        return\r\n                    }\r\n                }\r\n                this.retrieveOptionsPromise(\"bank\",\r\n                    fetchBankOptionsFn(...subscriptionFields.map(subscription => subscription.input.value)))\r\n            }))\r\n    }\r\n}","// This code exports four functions that can be used to fetch carriers, countries, roads, and stations from a service bank API.\r\n// The code also defines several interfaces for different types of objects.\r\nimport wretch from \"wretch\"\r\nimport {popupHttpDataError} from \"../../modal\";\r\nimport {setCursorToDefault, setCursorToLoading} from \"../../misc\";\r\nconst serviceBankURL = `${document.location.origin}/servicebank/getdata`\r\n\r\nexport const fetchCarriersByDate = (date: DateRange): Promise<Map<OptionKey, OptionLabel>> =>\r\n    fetchOptions(\"perList\", date,\r\n        (item) => [\r\n        // Each key consists of countryKey.carrierKey\r\n        `${item[\"gos\"]}.${item[\"skp\"]}`,\r\n        item[\"nazvp\"]\r\n        ],\r\n        null,null,\r\n        \"–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å —Å–ø–∏—Å–æ–∫ –ø–µ—Ä–µ–≤–æ–∑—á–∏–∫–æ–≤\")\r\n\r\nexport const fetchCountriesByDate = (date: DateRange, postSovietOnly: boolean): Promise<Options> =>\r\n    fetchOptions(\"gosList\", date,\r\n        (item) => [item[\"g_kod\"], item[\"g_name\"]],\r\n        {\"g_prsng\": \"1\"},\r\n        (item) => postSovietOnly ? item[\"g_prsng\"] == \"1\" : true,\r\n        \"–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å —Å–ø–∏—Å–æ–∫ –≥–æ—Å—É–¥–∞—Ä—Å—Ç–≤\")\r\n\r\nexport const fetchRoadsByDateAndCountries = async (date: DateRange, countries: Options): Promise<Options> => {\r\n    const fetchRoads=(countryKey: OptionKey) =>\r\n        fetchOptions(\"dorList\", date,\r\n            item => [\r\n                // Each key consists of countryKey.roadKey\r\n                `${countryKey}.${item[\"d_kod\"]}`,\r\n                item[\"d_name\"]\r\n            ],\r\n            {\r\n                \"gos\": countryKey\r\n            }, null,\r\n            \"–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å —Å–ø–∏—Å–æ–∫ –¥–æ—Ä–æ–≥\"\r\n        )\r\n\r\n    return mergeOptionPromises([...countries.entries()].map(([key, _]) => fetchRoads(key)))\r\n}\r\n\r\n\r\nexport const fetchStationsByDateAndRoads = async (date: DateRange,\r\n                                                  roads: Options,\r\n                                                  extraProperty?: Pair<string, string>): Promise<Options> =>\r\n    mergeOptionPromises(\r\n        [...mapRoadsByCountryCodeAndRoadCodes(roads)].map(([countryValue, roadValues]) =>\r\n            fetchOptions(\"stanList\", date,\r\n                (item) => [item[\"stan\"], item[\"pnazv\"]],\r\n                {\r\n                    \"gos\": countryValue,\r\n                    \"dor\": roadValues.join(\",\"),\r\n                    // [extraProperty.first]: extraProperty.second,\r\n                    // [transferType === TransferType.BAGGAGE ? \"pr_bo\" : \"prpop\"]: \"1\"\r\n                    \"pr_bo\": \"1\"\r\n                }, null,\r\n                \"–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å —Å–ø–∏—Å–æ–∫ —Å—Ç–∞–Ω—Ü–∏–π\")\r\n        )\r\n    )\r\n\r\n\r\nconst fetchOptions = (listName: string,\r\n                      date: DateRange,\r\n                      parseItemFn: (item: any) => [OptionKey, OptionLabel],\r\n                      extraProperties = {},\r\n                      filter?: (item: any) => boolean,\r\n                      errorFooter?: string): Promise<Options> => {\r\n    setCursorToLoading()\r\n    return wretch(serviceBankURL)\r\n        .post({\r\n            [listName]: [{\"data\": date[0], ...extraProperties}]\r\n        })\r\n        .json(json => {\r\n            const firstChildKey = Object.keys(json)[0]\r\n            return new Map((json[firstChildKey] as Array<any>)\r\n                .filter((item) => filter ? filter(item) : true)\r\n                .map((item) => {\r\n                    const parsed = parseItemFn(item)\r\n                    // Trim the value\r\n                    parsed[1] = parsed[1].trim()\r\n                    return parsed\r\n                }))\r\n        })\r\n        .catch(error => {\r\n            popupHttpDataError(error, errorFooter)\r\n            return new Map()\r\n        })\r\n        .finally(() => setCursorToDefault())\r\n}\r\n\r\nfunction mergeOptionPromises(promises: Promise<Options>[]): Promise<Options> {\r\n    return Promise.all(promises)\r\n        .then((results) => {\r\n            const mergedResult = new Map<OptionKey, OptionLabel>();\r\n            results.forEach((result) => {\r\n                result.forEach((value, key) => {\r\n                    mergedResult.set(key, value);\r\n                });\r\n            });\r\n            return mergedResult;\r\n        })\r\n        .catch((error) => {\r\n            // –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫\r\n        }) as Promise<Options>\r\n}\r\n\r\n\r\nfunction mapRoadsByCountryCodeAndRoadCodes (roads: Options) {\r\n    const codesMap = new Map<OptionKey, string[]>()\r\n    const parseRoadKey = (key: OptionKey) => {\r\n        const roadValueEntries = key.split(\".\"),\r\n            countryValue = roadValueEntries[0],\r\n            roadValue = roadValueEntries[1]\r\n\r\n        if (!codesMap.has(countryValue)) {\r\n            codesMap.set(countryValue, [])\r\n        }\r\n        codesMap.get(countryValue)?.push(roadValue)\r\n    }\r\n    roads.forEach((_, key) => parseRoadKey(key))\r\n\r\n    return codesMap\r\n}","import {BankField} from \"./BankField\"\r\nimport {fetchCarriersByDate} from \"../../../../utils/api/options/serviceBank\"\r\n\r\nexport class CarriersField extends BankField{\r\n    constructor(location: FragmentLocation, configElement: HTMLElement) {\r\n        super(location,configElement)\r\n    }\r\n\r\n    override listenSubscribedFields() {\r\n        super.listenSubscribedFields()\r\n        this.resolveBankSubscribing(fetchCarriersByDate, this.dateFieldSubscription)\r\n    }\r\n}","import {BankField} from \"./BankField\"\r\nimport {fetchCountriesByDate} from \"../../../../utils/api/options/serviceBank\"\r\nimport {InputFragment} from \"../../../abstract/InputFragment\"\r\nimport {Field} from \"../Field\"\r\n\r\nexport class CountriesField extends BankField {\r\n\r\n    constructor(location: FragmentLocation, configElement: HTMLElement) {\r\n        super(location,configElement)\r\n    }\r\n\r\n    private postSovietKey = this.bankConfigElement.querySelector(\"subscriptions postsoviet\")?.textContent\r\n    private postSovietSubscription\r\n\r\n    override resolveSubscribedFields(getFieldFn: (key: string) => Field<InputFragment<any>>) {\r\n        super.resolveSubscribedFields(getFieldFn)\r\n        this.postSovietSubscription = getFieldFn(this.postSovietKey)\r\n    }\r\n\r\n    override listenSubscribedFields() {\r\n        super.listenSubscribedFields()\r\n        this.resolveBankSubscribing(fetchCountriesByDate, this.dateFieldSubscription, this.postSovietSubscription)\r\n    }\r\n}","import {BankField} from \"./BankField\"\r\nimport {InputFragment} from \"../../../abstract/InputFragment\"\r\nimport {fetchRoadsByDateAndCountries} from \"../../../../utils/api/options/serviceBank\"\r\nimport {Field} from \"../Field\"\r\n\r\nexport class RoadsField extends BankField {\r\n\r\n    constructor(location: FragmentLocation, configElement: HTMLElement) {\r\n        super(location,configElement)\r\n    }\r\n\r\n    private countriesKey = this.bankConfigElement.querySelector(\"subscriptions countries\")?.textContent\r\n    private countriesSubscription\r\n\r\n    override resolveSubscribedFields(getFieldFn: (key: string) => Field<InputFragment<any>>) {\r\n        super.resolveSubscribedFields(getFieldFn)\r\n        this.countriesSubscription = getFieldFn(this.countriesKey)\r\n    }\r\n\r\n    override listenSubscribedFields() {\r\n        super.listenSubscribedFields()\r\n        this.resolveBankSubscribing(fetchRoadsByDateAndCountries, this.dateFieldSubscription, this.countriesSubscription)\r\n    }\r\n}","import {BankField} from \"./BankField\"\r\nimport {InputFragment} from \"../../../abstract/InputFragment\"\r\nimport {fetchStationsByDateAndRoads} from \"../../../../utils/api/options/serviceBank\"\r\nimport {Field} from \"../Field\";\r\nimport {createLabelElement} from \"../../../../utils/DOMWizard\";\r\n\r\nexport class StationsField extends BankField {\r\n\r\n    constructor(location: FragmentLocation, configElement: HTMLElement) {\r\n        super(location,configElement)\r\n    }\r\n\r\n    private roadsKey = this.bankConfigElement.querySelector(\"subscriptions roads\")?.textContent\r\n    private roadsSubscription\r\n\r\n    override resolveSubscribedFields(getFieldFn: (key: string) => Field<InputFragment<any>>) {\r\n        super.resolveSubscribedFields(getFieldFn)\r\n        this.roadsSubscription = getFieldFn(this.roadsKey)\r\n    }\r\n\r\n    override listenSubscribedFields() {\r\n        super.listenSubscribedFields()\r\n        this.resolveBankSubscribing(fetchStationsByDateAndRoads, this.dateFieldSubscription, this.roadsSubscription)\r\n    }\r\n}","import {resolveCSS} from \"../../utils/resolver\"\r\nimport {Button} from \"../inputs/Button\"\r\nimport {InputFragment} from \"../abstract/InputFragment\"\r\nimport {Text} from \"../inputs/Text\"\r\nimport {DateField} from \"./fields/DateField\"\r\nimport {CheckboxField} from \"./fields/CheckboxField\"\r\nimport {SelectField} from \"./fields/select/SelectField\"\r\nimport {CarriersField} from \"./fields/select/CarriersField\"\r\nimport {CountriesField} from \"./fields/select/CountriesField\"\r\nimport {RoadsField} from \"./fields/select/RoadsField\"\r\nimport {StationsField} from \"./fields/select/StationsField\"\r\nimport {validateFields} from \"../../utils/api/validation\"\r\nimport {Field} from \"./fields/Field\"\r\nimport {Fragment} from \"../abstract/Fragment\"\r\n\r\nresolveCSS(\"main-form\")\r\n\r\nexport default class MainForm extends Fragment{\r\n\r\n    readonly confirmButton: Button\r\n\r\n    private readonly validationPath: string\r\n\r\n    constructor(location: FragmentLocation) {\r\n        super(location)\r\n        this.core = location.target\r\n        this.confirmButton = new Button({target: this.core, position: \"afterend\"})\r\n        this.confirmButton.addClass(\"confirm\")\r\n        this.confirmButton.text = this.core.getAttribute(\"confirm-button-text\")\r\n        this.resolveFields()\r\n        this.resolveFieldsSubscriptions()\r\n        this.validationPath = this.core.getAttribute(\"validation-path\")\r\n    }\r\n\r\n    fields: Map<string, Field<InputFragment<any>>> = new Map()\r\n\r\n    private resolveFields(){\r\n        this.core.querySelectorAll(\".section\").forEach(sectionElement => {\r\n            const sectionKey = sectionElement.getAttribute(\"key\")\r\n            sectionElement.querySelectorAll(\".field\").forEach(fieldElement => {\r\n                const fieldKey = fieldElement.getAttribute(\"key\")\r\n                this.fields.set(`${sectionKey}.${fieldKey}`, resolveField(fieldElement as HTMLElement))\r\n            })\r\n        })\r\n    }\r\n\r\n    private resolveFieldsSubscriptions(){\r\n        this.fields.forEach((field, key) => {\r\n            if(field instanceof SelectField) {\r\n                field.resolveSubscribedFields(key => this.fields.get(key))\r\n                field.listenSubscribedFields()\r\n                field.optionsRetrieving = true\r\n            }\r\n            field.input.subscribe(value => this.validateFields())\r\n        })\r\n    }\r\n\r\n    private validateFields(){\r\n        this.confirmButton.disable()\r\n        if(!!this.validationPath){\r\n            validateFields(this.validationPath, this.fields).then(result => {\r\n                this.fields.forEach(field => field.makeValid())\r\n                if(result instanceof Map)\r\n                    result.forEach((message, fieldKey) => this.fields.get(fieldKey).makeInvalid(message))\r\n                else if(result === true)\r\n                    this.confirmButton.enable()\r\n            })\r\n        }\r\n    }\r\n}\r\n\r\nfunction resolveField(fieldElement: HTMLElement): Field<InputFragment<any>>{\r\n    const containsClass = (className: string) => fieldElement.classList.contains(className)\r\n    const location: FragmentLocation = {target: fieldElement}\r\n    const configElement: HTMLElement = fieldElement.querySelector(\"config\")\r\n    return containsClass(\"date\") ? new DateField(location, configElement)\r\n        : containsClass(\"checkbox\") ? new CheckboxField(location, configElement)\r\n            : resolveSelectField(location, configElement)\r\n}\r\n\r\nfunction resolveSelectField(location: FragmentLocation, configElement: HTMLElement): SelectField{\r\n    switch (configElement.querySelector(\"bank\")?.getAttribute(\"type\")){\r\n        case \"carriers\":  return new CarriersField(location, configElement)\r\n        case \"countries\": return new CountriesField(location, configElement)\r\n        case \"roads\":     return new RoadsField(location, configElement)\r\n        case \"stations\":  return new StationsField(location, configElement)\r\n    }\r\n    return new SelectField(location, configElement)\r\n}","import wretch from \"wretch\"\r\nimport {jsonifyFields, setCursorToDefault, setCursorToLoading} from \"../misc\"\r\nimport {popupHttpDataError} from \"../modal\"\r\nimport {Field} from \"../../fragments/mainForm/fields/Field\";\r\n\r\nexport function validateFields(path: string, fields: Map<FieldKey, Field<any>>): Promise<boolean|Map<OptionKey, string>>{\r\n    setCursorToLoading()\r\n    return wretch(path)\r\n        .post(jsonifyFields(fields))\r\n        .forbidden(error => new Map(Object.entries(error.json)))\r\n        .text(() => true)\r\n        .catch(error => {\r\n            popupHttpDataError(error, \"–û—à–∏–±–∫–∞ –≤–∞–ª–∏–¥–∞—Ü–∏–∏\")\r\n            return false\r\n        })\r\n        .finally(() => setCursorToDefault())\r\n}","import {Fragment} from \"./Fragment\"\r\n\r\nexport abstract class ExistedFragment extends Fragment{\r\n    protected constructor(core: HTMLElement) {\r\n        super({target: core})\r\n        this.core = core\r\n    }\r\n}","import {Fragment} from \"../abstract/Fragment\"\r\nimport {createDivElement, createElement} from \"../../utils/DOMWizard\"\r\n\r\nexport class Loader extends Fragment{\r\n\r\n    constructor(location: FragmentLocation) {super(location)\r\n        this.core = createDivElement({class: \"loader\"})\r\n        this.core.insertAdjacentHTML(\"afterbegin\",\r\n            `<svg class=\"circular-loader\" viewBox=\"25 25 50 50\">\r\n                <circle class=\"loader-path\" cx=\"50\" cy=\"50\" r=\"20\" fill=\"none\"></circle>\r\n            </svg>`)\r\n    }\r\n}","import {ExistedFragment} from \"../abstract/ExistedFragment\"\r\nimport {emptyElement} from \"../../utils/DOMWizard\";\r\nimport {Button} from \"../inputs/Button\";\r\nimport {getFullscreenElement, scrollIntoElement, toggleFullscreen} from \"../../utils/misc\";\r\nimport ReportSlot from \"./ReportSlot\"\r\nimport {Loader} from \"../misc/Loader\"\r\n\r\nexport class Head extends ExistedFragment{\r\n\r\n    readonly loading: Loader\r\n\r\n    private readonly originTitleText: string\r\n    private readonly titleElement: HTMLParagraphElement\r\n    private readonly buttonsElement: HTMLDivElement\r\n\r\n    private chartsButton: Button\r\n    private exportButton: Button\r\n    private collapseButton: Button\r\n    private fullscreenButton: Button\r\n    private toTopButton: Button\r\n\r\n    constructor(core: HTMLDivElement, private readonly parentReportSlot: ReportSlot) {\r\n        super(core)\r\n        this.titleElement = core.querySelector(\"p\")\r\n        this.originTitleText = this.titleElement.textContent\r\n        this.buttonsElement = core.querySelector(\"div.buttons\")\r\n\r\n        this.loading = new Loader({target: this.titleElement, position: \"afterend\"})\r\n        this.loading.hide()\r\n\r\n        // Change fullscreenButton on fullscreenchange\r\n        addEventListener(\"fullscreenchange\", event => {\r\n            if (!!this.fullscreenButton) {\r\n                this.fullscreenButton.remove()\r\n                this.addFullscreenButton()\r\n            }\r\n        })\r\n    }\r\n\r\n    set title(text: string){\r\n        this.titleElement.textContent = text\r\n    }\r\n    get title(): string{\r\n        return this.titleElement.textContent\r\n    }\r\n\r\n    addChartsButton() {\r\n        this.chartsButton = this.createButton(() => this.parentReportSlot.body.toggleCharts(),\r\n            \"img/graph.svg\", \"–ì—Ä–∞—Ñ–∏—á–µ—Å–∫–æ–µ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏–µ\")\r\n    }\r\n\r\n    addCollapseButton() {\r\n        this.collapseButton = this.createToggleableButton(\r\n            () => {\r\n                this.parentReportSlot.body.collapse()\r\n                this.chartsButton?.disable()\r\n                this.fullscreenButton?.disable()\r\n            },\r\n            () => {\r\n                this.parentReportSlot.body.expand()\r\n                this.chartsButton?.enable()\r\n                this.fullscreenButton?.enable()\r\n            },\r\n            \"img/collapse.svg\", \"–°–≤–µ—Ä–Ω—É—Ç—å\",\r\n            \"img/collapse.svg\", \"–†–∞–∑–≤–µ—Ä–Ω—É—Ç—å\")\r\n    }\r\n\r\n    addFullscreenButton() {\r\n        const fullscreenMode = !!getFullscreenElement()\r\n        this.fullscreenButton = this.createButton(() => toggleFullscreen(this.parentReportSlot.core),\r\n            fullscreenMode ? \"img/exit.svg\" : \"img/expand.svg\",\r\n            fullscreenMode ? \"–í—ã–π—Ç–∏ –∏–∑ –ø–æ–ª–Ω–æ—ç–∫—Ä–∞–Ω–Ω–æ–≥–æ —Ä–µ–∂–∏–º–∞\" : \"–†–∞–∑–≤–µ—Ä–Ω—É—Ç—å –Ω–∞ –≤–µ—Å—å —ç–∫—Ä–∞–Ω\"\r\n        )\r\n    }\r\n\r\n    addToTopButton() {\r\n        this.toTopButton = this.createButton(() => scrollIntoElement(document.body), \"img/to_top_blue.svg\", \"–ù–∞–≤–µ—Ä—Ö\")\r\n    }\r\n\r\n    private createToggleableButton(actionA: () => void,\r\n                                   actionB: () => void,\r\n                                   imageA: string, hintA: string,\r\n                                   imageB: string, hintB: string): Button{\r\n        let toggled = false\r\n        const button = this.createButton(() => {\r\n            if(toggled === false){\r\n                if(imageA !== imageB) button.image = imageB\r\n                button.hint = hintB\r\n                actionA()\r\n            }else {\r\n                if(imageA !== imageB) button.image = imageA\r\n                button.hint = hintA\r\n                actionB()\r\n            }\r\n            toggled = !toggled\r\n        }, imageA, hintA)\r\n        return button\r\n    }\r\n\r\n    private createButton(action: () => void, image: string, hint: string): Button {\r\n        const button = new Button({target: this.buttonsElement, position: \"beforeend\"})\r\n        button.subscribe(() => action())\r\n        button.image = image\r\n        button.hint = hint\r\n        return button\r\n    }\r\n\r\n    reset(){\r\n        this.title = this.originTitleText\r\n        emptyElement(this.buttonsElement)\r\n    }\r\n}","import {createButtonElement, createDivElement, createInputElement} from \"../../utils/DOMWizard\"\r\nimport {InputFragment} from \"../abstract/InputFragment\"\r\n\r\nexport class Text extends InputFragment<string>{\r\n\r\n    private textInputElement    = createInputElement(\"text\")\r\n    private resetButtonElement = createButtonElement( \"‚ùå\",{class: \"frameless reset\"})\r\n\r\n    constructor(location: FragmentLocation, config?: TextInputConfig) {\r\n        super(location)\r\n        this.core = createDivElement({class: \"text field\"})\r\n        if(config.title){\r\n            this.core.textContent = config.title\r\n            this.textInputElement.style.marginLeft = \"var(--indent)\"\r\n        }\r\n        this.textInputElement.placeholder = config.placeholder\r\n        this.core.append(this.textInputElement, this.resetButtonElement)\r\n        this.textInputElement.addEventListener(\"input\",\r\n            this.debounce(() => this.value = this.textInputElement.value)\r\n        )\r\n        this.resetButtonElement.addEventListener(\"click\",\r\n            () => this.value = this.textInputElement.value = \"\"\r\n        )\r\n        this.subscribe(value => {\r\n            this.core.classList.toggle(\"empty\", !value || value.length === 0)\r\n        })\r\n    }\r\n}","import {Fragment} from \"../../abstract/Fragment\"\r\nimport {emptyElement, createElement} from \"../../../utils/DOMWizard\"\r\nimport {concatMaps, filterMap, numberOf, sortMap, stringify} from \"../../../utils/misc\"\r\nimport {Text} from \"../../inputs/Text\"\r\nimport {resolveCSS} from \"../../../utils/resolver\"\r\n\r\nresolveCSS(\"table\")\r\n\r\nexport class Table extends Fragment{\r\n\r\n    thead: HTMLTableSectionElement = createElement(\"thead\")\r\n    tbody: HTMLTableSectionElement = createElement(\"tbody\")\r\n    tfoot: HTMLTableSectionElement = createElement(\"tfoot\")\r\n\r\n    protected _tableMap: TableMap = new Map()\r\n\r\n    // Key is filtrated column, value is filter text value\r\n    protected filtersMap: Map<number, string> = new Map()\r\n\r\n    constructor(location: FragmentLocation, private model: TableModel) {\r\n        super(location)\r\n        this.core = createElement(\"table\")\r\n        this.core.append(this.thead, this.tfoot, this.tbody)\r\n        this.head = model.head\r\n        this.tableMap = new Map(model.data.map(rowData => [\r\n            rowData.slice(0, model.primaryColumnsNumber).map(cellData => stringify(cellData)),\r\n            rowData.slice(model.primaryColumnsNumber)\r\n        ]))\r\n        if(model.total)\r\n            this.total = model.total.length > 0 ? model.total : this.calculateTotal()\r\n    }\r\n\r\n    private set head(head: TableHead){\r\n        emptyElement(this.thead)\r\n        head.forEach(headRow => {\r\n            this.thead.appendChild(\r\n                this.createHTMLRow(headRow.map(\r\n                    headCell => {\r\n                        const htmlHeadCell = this.createHTMLHeadCell(headCell.text, headCell.rowspan, headCell.colspan)\r\n                        if (headCell.addFilter === true) this.setFilter(htmlHeadCell)\r\n                        return htmlHeadCell\r\n                    })\r\n                )\r\n            )\r\n        })\r\n    }\r\n\r\n    private set tableMap(tableMap: TableMap){\r\n        emptyElement(this.tbody)\r\n        this._tableMap = new Map()\r\n        this.addTableMap(tableMap)\r\n        this.groupPrimaryCells()\r\n    }\r\n\r\n    private addTableMap(tableMap: TableMap){\r\n        this._tableMap = concatMaps(this._tableMap, tableMap)\r\n        sortMap(this.filtrateTableMap(this._tableMap)).forEach((valueCells, primaryCells) =>\r\n            this.tbody.append(this.createHTMLRow(\r\n                primaryCells.map(cell => {\r\n                    const primaryCellElement = this.createHTMLCell(cell)\r\n                    primaryCellElement.classList.add(\"primary\")\r\n                    return primaryCellElement\r\n                }).concat(\r\n                    valueCells.map(cell => this.createHTMLCell(String(cell))))))\r\n        )\r\n    }\r\n\r\n    private set total(total: CellData[]){\r\n        this.tfoot.querySelector(\".total\")?.remove()\r\n        this.tfoot.appendChild(this.createHTMLTotalRow(total.map(value => this.createHTMLCell(value))))\r\n    }\r\n\r\n    private calculateTotal(): CellData[]{\r\n        const total: CellData[] = []\r\n        this._tableMap.forEach(values=> values.forEach((value, i) => {\r\n            total[i] = total[i] ? numberOf(total[i]) + numberOf(value) : value\r\n        }))\r\n        return total\r\n    }\r\n\r\n    private createHTMLTotalRow(htmlCells: HTMLTableCellElement[]): HTMLTableRowElement{\r\n        const primaryTotalCell: HTMLTableCellElement = this.createHTMLCell(\"–ò—Ç–æ–≥–æ\")\r\n        const totalRow: HTMLTableRowElement = this.createHTMLRow([primaryTotalCell, ...htmlCells])\r\n        primaryTotalCell.colSpan = this.tbody.querySelector(\"tr\").querySelectorAll(\".primary\").length\r\n        return totalRow\r\n    }\r\n\r\n    private createHTMLRow(htmlCells: HTMLTableCellElement[]): HTMLTableRowElement{\r\n        const tr: HTMLTableRowElement = createElement(\"tr\")\r\n        tr.append(...htmlCells)\r\n        return tr\r\n    }\r\n\r\n    private createHTMLHeadCell(cellContent: string, rowSpan: number = 1, colSpan: number = 1): HTMLTableCellElement{\r\n        return createElement(\"th\", cellContent, {rowspan: rowSpan}, {colspan: colSpan})\r\n    }\r\n\r\n    private createHTMLCell(data: CellData): HTMLTableCellElement {\r\n        return createElement(\"td\", String(data))\r\n    }\r\n\r\n    private setFilter(htmlHeadCell: HTMLTableCellElement){\r\n        const title = htmlHeadCell.textContent\r\n        htmlHeadCell.textContent = \"\"\r\n        const filterFragment = new Text(\r\n            {target: htmlHeadCell, position: \"beforeend\"},\r\n            {title, placeholder: \"üîé\"}\r\n        )\r\n        filterFragment.subscribe(value => {\r\n            console.log(getCellIndexWithSpans(htmlHeadCell))\r\n            this.filtersMap.set(getCellIndexWithSpans(htmlHeadCell), value)\r\n            this.tableMap = this._tableMap\r\n        }, false)\r\n    }\r\n\r\n\r\n    private filtrateTableMap(tableMap: TableMap): TableMap{\r\n        return filterMap(tableMap, (valueCells, primaryCells) => {\r\n            const cellTexts = primaryCells.concat(valueCells.map(v => String(v)))\r\n            for (let i = 0; i < cellTexts.length; i++) {\r\n                const filterText = this.filtersMap.get(i)\r\n                if(!cellTexts[i].toLowerCase().includes(filterText ? filterText.toLowerCase() : \"\"))\r\n                    return false\r\n            }\r\n            return true\r\n        })\r\n    }\r\n\r\n    // TODO works incorrectly if the size is more than 1\r\n    private groupPrimaryCells(size: number = this.model.groupedColumnsNumber ? this.model.groupedColumnsNumber : 0,\r\n                              startHtmlRow: HTMLTableRowElement = this.tbody.firstElementChild as HTMLTableRowElement,\r\n                              endHtmlRow: HTMLTableRowElement = this.tbody.lastElementChild as HTMLTableRowElement,\r\n                              nesting: number = 0){\r\n        if(startHtmlRow === endHtmlRow || size === nesting) return\r\n        const primaryHtmlCell= startHtmlRow.cells[nesting]\r\n        if(!primaryHtmlCell?.classList?.contains(\"primary\")) return\r\n        let nextHtmlRow = startHtmlRow\r\n        do {\r\n            nextHtmlRow = nextHtmlRow.nextElementSibling as HTMLTableRowElement\r\n            const nextPrimaryHtmlCell = nextHtmlRow.cells[0]\r\n            if(primaryHtmlCell.textContent === nextPrimaryHtmlCell.textContent){\r\n                primaryHtmlCell.rowSpan++\r\n                nextPrimaryHtmlCell.hidden = true\r\n            } else {\r\n                this.groupPrimaryCells(size, startHtmlRow, nextHtmlRow, nesting + 1)\r\n                this.groupPrimaryCells(size, nextHtmlRow, endHtmlRow)\r\n                return\r\n            }\r\n        }\r\n        while (nextHtmlRow !== endHtmlRow)\r\n    }\r\n}\r\nfunction getCellIndexWithSpans(targetCell: HTMLTableCellElement): number  {\r\n\r\n    let result: number = -1\r\n\r\n    let rows = targetCell.parentElement.parentElement.querySelectorAll('tr'),\r\n        matrix = [],\r\n        cell: HTMLTableCellElement = null,\r\n        rowIndex: number = null,\r\n        colIndex: number = null\r\n\r\n\r\n    for (let i = 0; i < rows.length && result === -1; i++) {\r\n        console.log(true)\r\n        matrix[i] = matrix[i] || [];\r\n        const row = rows[i];\r\n\r\n        for (let j = 0; j < row.cells.length; j++) {\r\n            cell = row.cells[j]\r\n            rowIndex = row.rowIndex;\r\n            matrix[rowIndex] = matrix[rowIndex] || [];\r\n            colIndex = null;\r\n            for (let l = 0; l <= matrix[rowIndex].length && colIndex === null; l++) {\r\n                if (!matrix[rowIndex][l]) colIndex = l;\r\n            }\r\n\r\n            if (cell === targetCell) {\r\n                result = colIndex\r\n                break;\r\n            }\r\n\r\n            for (let k = rowIndex; k < rowIndex + cell.rowSpan; k++) {\r\n                for (let l = colIndex; l < colIndex + cell.colSpan; l++) {\r\n                    matrix[k] = matrix[k] || [];\r\n                    matrix[k][l] = 1;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    return result;\r\n}\r\n","/*!\n * @kurkle/color v0.3.2\n * https://github.com/kurkle/color#readme\n * (c) 2023 Jukka Kurkela\n * Released under the MIT License\n */\nfunction round(v) {\n  return v + 0.5 | 0;\n}\nconst lim = (v, l, h) => Math.max(Math.min(v, h), l);\nfunction p2b(v) {\n  return lim(round(v * 2.55), 0, 255);\n}\nfunction b2p(v) {\n  return lim(round(v / 2.55), 0, 100);\n}\nfunction n2b(v) {\n  return lim(round(v * 255), 0, 255);\n}\nfunction b2n(v) {\n  return lim(round(v / 2.55) / 100, 0, 1);\n}\nfunction n2p(v) {\n  return lim(round(v * 100), 0, 100);\n}\n\nconst map$1 = {0: 0, 1: 1, 2: 2, 3: 3, 4: 4, 5: 5, 6: 6, 7: 7, 8: 8, 9: 9, A: 10, B: 11, C: 12, D: 13, E: 14, F: 15, a: 10, b: 11, c: 12, d: 13, e: 14, f: 15};\nconst hex = [...'0123456789ABCDEF'];\nconst h1 = b => hex[b & 0xF];\nconst h2 = b => hex[(b & 0xF0) >> 4] + hex[b & 0xF];\nconst eq = b => ((b & 0xF0) >> 4) === (b & 0xF);\nconst isShort = v => eq(v.r) && eq(v.g) && eq(v.b) && eq(v.a);\nfunction hexParse(str) {\n  var len = str.length;\n  var ret;\n  if (str[0] === '#') {\n    if (len === 4 || len === 5) {\n      ret = {\n        r: 255 & map$1[str[1]] * 17,\n        g: 255 & map$1[str[2]] * 17,\n        b: 255 & map$1[str[3]] * 17,\n        a: len === 5 ? map$1[str[4]] * 17 : 255\n      };\n    } else if (len === 7 || len === 9) {\n      ret = {\n        r: map$1[str[1]] << 4 | map$1[str[2]],\n        g: map$1[str[3]] << 4 | map$1[str[4]],\n        b: map$1[str[5]] << 4 | map$1[str[6]],\n        a: len === 9 ? (map$1[str[7]] << 4 | map$1[str[8]]) : 255\n      };\n    }\n  }\n  return ret;\n}\nconst alpha = (a, f) => a < 255 ? f(a) : '';\nfunction hexString(v) {\n  var f = isShort(v) ? h1 : h2;\n  return v\n    ? '#' + f(v.r) + f(v.g) + f(v.b) + alpha(v.a, f)\n    : undefined;\n}\n\nconst HUE_RE = /^(hsla?|hwb|hsv)\\(\\s*([-+.e\\d]+)(?:deg)?[\\s,]+([-+.e\\d]+)%[\\s,]+([-+.e\\d]+)%(?:[\\s,]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\nfunction hsl2rgbn(h, s, l) {\n  const a = s * Math.min(l, 1 - l);\n  const f = (n, k = (n + h / 30) % 12) => l - a * Math.max(Math.min(k - 3, 9 - k, 1), -1);\n  return [f(0), f(8), f(4)];\n}\nfunction hsv2rgbn(h, s, v) {\n  const f = (n, k = (n + h / 60) % 6) => v - v * s * Math.max(Math.min(k, 4 - k, 1), 0);\n  return [f(5), f(3), f(1)];\n}\nfunction hwb2rgbn(h, w, b) {\n  const rgb = hsl2rgbn(h, 1, 0.5);\n  let i;\n  if (w + b > 1) {\n    i = 1 / (w + b);\n    w *= i;\n    b *= i;\n  }\n  for (i = 0; i < 3; i++) {\n    rgb[i] *= 1 - w - b;\n    rgb[i] += w;\n  }\n  return rgb;\n}\nfunction hueValue(r, g, b, d, max) {\n  if (r === max) {\n    return ((g - b) / d) + (g < b ? 6 : 0);\n  }\n  if (g === max) {\n    return (b - r) / d + 2;\n  }\n  return (r - g) / d + 4;\n}\nfunction rgb2hsl(v) {\n  const range = 255;\n  const r = v.r / range;\n  const g = v.g / range;\n  const b = v.b / range;\n  const max = Math.max(r, g, b);\n  const min = Math.min(r, g, b);\n  const l = (max + min) / 2;\n  let h, s, d;\n  if (max !== min) {\n    d = max - min;\n    s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n    h = hueValue(r, g, b, d, max);\n    h = h * 60 + 0.5;\n  }\n  return [h | 0, s || 0, l];\n}\nfunction calln(f, a, b, c) {\n  return (\n    Array.isArray(a)\n      ? f(a[0], a[1], a[2])\n      : f(a, b, c)\n  ).map(n2b);\n}\nfunction hsl2rgb(h, s, l) {\n  return calln(hsl2rgbn, h, s, l);\n}\nfunction hwb2rgb(h, w, b) {\n  return calln(hwb2rgbn, h, w, b);\n}\nfunction hsv2rgb(h, s, v) {\n  return calln(hsv2rgbn, h, s, v);\n}\nfunction hue(h) {\n  return (h % 360 + 360) % 360;\n}\nfunction hueParse(str) {\n  const m = HUE_RE.exec(str);\n  let a = 255;\n  let v;\n  if (!m) {\n    return;\n  }\n  if (m[5] !== v) {\n    a = m[6] ? p2b(+m[5]) : n2b(+m[5]);\n  }\n  const h = hue(+m[2]);\n  const p1 = +m[3] / 100;\n  const p2 = +m[4] / 100;\n  if (m[1] === 'hwb') {\n    v = hwb2rgb(h, p1, p2);\n  } else if (m[1] === 'hsv') {\n    v = hsv2rgb(h, p1, p2);\n  } else {\n    v = hsl2rgb(h, p1, p2);\n  }\n  return {\n    r: v[0],\n    g: v[1],\n    b: v[2],\n    a: a\n  };\n}\nfunction rotate(v, deg) {\n  var h = rgb2hsl(v);\n  h[0] = hue(h[0] + deg);\n  h = hsl2rgb(h);\n  v.r = h[0];\n  v.g = h[1];\n  v.b = h[2];\n}\nfunction hslString(v) {\n  if (!v) {\n    return;\n  }\n  const a = rgb2hsl(v);\n  const h = a[0];\n  const s = n2p(a[1]);\n  const l = n2p(a[2]);\n  return v.a < 255\n    ? `hsla(${h}, ${s}%, ${l}%, ${b2n(v.a)})`\n    : `hsl(${h}, ${s}%, ${l}%)`;\n}\n\nconst map = {\n  x: 'dark',\n  Z: 'light',\n  Y: 're',\n  X: 'blu',\n  W: 'gr',\n  V: 'medium',\n  U: 'slate',\n  A: 'ee',\n  T: 'ol',\n  S: 'or',\n  B: 'ra',\n  C: 'lateg',\n  D: 'ights',\n  R: 'in',\n  Q: 'turquois',\n  E: 'hi',\n  P: 'ro',\n  O: 'al',\n  N: 'le',\n  M: 'de',\n  L: 'yello',\n  F: 'en',\n  K: 'ch',\n  G: 'arks',\n  H: 'ea',\n  I: 'ightg',\n  J: 'wh'\n};\nconst names$1 = {\n  OiceXe: 'f0f8ff',\n  antiquewEte: 'faebd7',\n  aqua: 'ffff',\n  aquamarRe: '7fffd4',\n  azuY: 'f0ffff',\n  beige: 'f5f5dc',\n  bisque: 'ffe4c4',\n  black: '0',\n  blanKedOmond: 'ffebcd',\n  Xe: 'ff',\n  XeviTet: '8a2be2',\n  bPwn: 'a52a2a',\n  burlywood: 'deb887',\n  caMtXe: '5f9ea0',\n  KartYuse: '7fff00',\n  KocTate: 'd2691e',\n  cSO: 'ff7f50',\n  cSnflowerXe: '6495ed',\n  cSnsilk: 'fff8dc',\n  crimson: 'dc143c',\n  cyan: 'ffff',\n  xXe: '8b',\n  xcyan: '8b8b',\n  xgTMnPd: 'b8860b',\n  xWay: 'a9a9a9',\n  xgYF: '6400',\n  xgYy: 'a9a9a9',\n  xkhaki: 'bdb76b',\n  xmagFta: '8b008b',\n  xTivegYF: '556b2f',\n  xSange: 'ff8c00',\n  xScEd: '9932cc',\n  xYd: '8b0000',\n  xsOmon: 'e9967a',\n  xsHgYF: '8fbc8f',\n  xUXe: '483d8b',\n  xUWay: '2f4f4f',\n  xUgYy: '2f4f4f',\n  xQe: 'ced1',\n  xviTet: '9400d3',\n  dAppRk: 'ff1493',\n  dApskyXe: 'bfff',\n  dimWay: '696969',\n  dimgYy: '696969',\n  dodgerXe: '1e90ff',\n  fiYbrick: 'b22222',\n  flSOwEte: 'fffaf0',\n  foYstWAn: '228b22',\n  fuKsia: 'ff00ff',\n  gaRsbSo: 'dcdcdc',\n  ghostwEte: 'f8f8ff',\n  gTd: 'ffd700',\n  gTMnPd: 'daa520',\n  Way: '808080',\n  gYF: '8000',\n  gYFLw: 'adff2f',\n  gYy: '808080',\n  honeyMw: 'f0fff0',\n  hotpRk: 'ff69b4',\n  RdianYd: 'cd5c5c',\n  Rdigo: '4b0082',\n  ivSy: 'fffff0',\n  khaki: 'f0e68c',\n  lavFMr: 'e6e6fa',\n  lavFMrXsh: 'fff0f5',\n  lawngYF: '7cfc00',\n  NmoncEffon: 'fffacd',\n  ZXe: 'add8e6',\n  ZcSO: 'f08080',\n  Zcyan: 'e0ffff',\n  ZgTMnPdLw: 'fafad2',\n  ZWay: 'd3d3d3',\n  ZgYF: '90ee90',\n  ZgYy: 'd3d3d3',\n  ZpRk: 'ffb6c1',\n  ZsOmon: 'ffa07a',\n  ZsHgYF: '20b2aa',\n  ZskyXe: '87cefa',\n  ZUWay: '778899',\n  ZUgYy: '778899',\n  ZstAlXe: 'b0c4de',\n  ZLw: 'ffffe0',\n  lime: 'ff00',\n  limegYF: '32cd32',\n  lRF: 'faf0e6',\n  magFta: 'ff00ff',\n  maPon: '800000',\n  VaquamarRe: '66cdaa',\n  VXe: 'cd',\n  VScEd: 'ba55d3',\n  VpurpN: '9370db',\n  VsHgYF: '3cb371',\n  VUXe: '7b68ee',\n  VsprRggYF: 'fa9a',\n  VQe: '48d1cc',\n  VviTetYd: 'c71585',\n  midnightXe: '191970',\n  mRtcYam: 'f5fffa',\n  mistyPse: 'ffe4e1',\n  moccasR: 'ffe4b5',\n  navajowEte: 'ffdead',\n  navy: '80',\n  Tdlace: 'fdf5e6',\n  Tive: '808000',\n  TivedBb: '6b8e23',\n  Sange: 'ffa500',\n  SangeYd: 'ff4500',\n  ScEd: 'da70d6',\n  pOegTMnPd: 'eee8aa',\n  pOegYF: '98fb98',\n  pOeQe: 'afeeee',\n  pOeviTetYd: 'db7093',\n  papayawEp: 'ffefd5',\n  pHKpuff: 'ffdab9',\n  peru: 'cd853f',\n  pRk: 'ffc0cb',\n  plum: 'dda0dd',\n  powMrXe: 'b0e0e6',\n  purpN: '800080',\n  YbeccapurpN: '663399',\n  Yd: 'ff0000',\n  Psybrown: 'bc8f8f',\n  PyOXe: '4169e1',\n  saddNbPwn: '8b4513',\n  sOmon: 'fa8072',\n  sandybPwn: 'f4a460',\n  sHgYF: '2e8b57',\n  sHshell: 'fff5ee',\n  siFna: 'a0522d',\n  silver: 'c0c0c0',\n  skyXe: '87ceeb',\n  UXe: '6a5acd',\n  UWay: '708090',\n  UgYy: '708090',\n  snow: 'fffafa',\n  sprRggYF: 'ff7f',\n  stAlXe: '4682b4',\n  tan: 'd2b48c',\n  teO: '8080',\n  tEstN: 'd8bfd8',\n  tomato: 'ff6347',\n  Qe: '40e0d0',\n  viTet: 'ee82ee',\n  JHt: 'f5deb3',\n  wEte: 'ffffff',\n  wEtesmoke: 'f5f5f5',\n  Lw: 'ffff00',\n  LwgYF: '9acd32'\n};\nfunction unpack() {\n  const unpacked = {};\n  const keys = Object.keys(names$1);\n  const tkeys = Object.keys(map);\n  let i, j, k, ok, nk;\n  for (i = 0; i < keys.length; i++) {\n    ok = nk = keys[i];\n    for (j = 0; j < tkeys.length; j++) {\n      k = tkeys[j];\n      nk = nk.replace(k, map[k]);\n    }\n    k = parseInt(names$1[ok], 16);\n    unpacked[nk] = [k >> 16 & 0xFF, k >> 8 & 0xFF, k & 0xFF];\n  }\n  return unpacked;\n}\n\nlet names;\nfunction nameParse(str) {\n  if (!names) {\n    names = unpack();\n    names.transparent = [0, 0, 0, 0];\n  }\n  const a = names[str.toLowerCase()];\n  return a && {\n    r: a[0],\n    g: a[1],\n    b: a[2],\n    a: a.length === 4 ? a[3] : 255\n  };\n}\n\nconst RGB_RE = /^rgba?\\(\\s*([-+.\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?(?:[\\s,/]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\nfunction rgbParse(str) {\n  const m = RGB_RE.exec(str);\n  let a = 255;\n  let r, g, b;\n  if (!m) {\n    return;\n  }\n  if (m[7] !== r) {\n    const v = +m[7];\n    a = m[8] ? p2b(v) : lim(v * 255, 0, 255);\n  }\n  r = +m[1];\n  g = +m[3];\n  b = +m[5];\n  r = 255 & (m[2] ? p2b(r) : lim(r, 0, 255));\n  g = 255 & (m[4] ? p2b(g) : lim(g, 0, 255));\n  b = 255 & (m[6] ? p2b(b) : lim(b, 0, 255));\n  return {\n    r: r,\n    g: g,\n    b: b,\n    a: a\n  };\n}\nfunction rgbString(v) {\n  return v && (\n    v.a < 255\n      ? `rgba(${v.r}, ${v.g}, ${v.b}, ${b2n(v.a)})`\n      : `rgb(${v.r}, ${v.g}, ${v.b})`\n  );\n}\n\nconst to = v => v <= 0.0031308 ? v * 12.92 : Math.pow(v, 1.0 / 2.4) * 1.055 - 0.055;\nconst from = v => v <= 0.04045 ? v / 12.92 : Math.pow((v + 0.055) / 1.055, 2.4);\nfunction interpolate(rgb1, rgb2, t) {\n  const r = from(b2n(rgb1.r));\n  const g = from(b2n(rgb1.g));\n  const b = from(b2n(rgb1.b));\n  return {\n    r: n2b(to(r + t * (from(b2n(rgb2.r)) - r))),\n    g: n2b(to(g + t * (from(b2n(rgb2.g)) - g))),\n    b: n2b(to(b + t * (from(b2n(rgb2.b)) - b))),\n    a: rgb1.a + t * (rgb2.a - rgb1.a)\n  };\n}\n\nfunction modHSL(v, i, ratio) {\n  if (v) {\n    let tmp = rgb2hsl(v);\n    tmp[i] = Math.max(0, Math.min(tmp[i] + tmp[i] * ratio, i === 0 ? 360 : 1));\n    tmp = hsl2rgb(tmp);\n    v.r = tmp[0];\n    v.g = tmp[1];\n    v.b = tmp[2];\n  }\n}\nfunction clone(v, proto) {\n  return v ? Object.assign(proto || {}, v) : v;\n}\nfunction fromObject(input) {\n  var v = {r: 0, g: 0, b: 0, a: 255};\n  if (Array.isArray(input)) {\n    if (input.length >= 3) {\n      v = {r: input[0], g: input[1], b: input[2], a: 255};\n      if (input.length > 3) {\n        v.a = n2b(input[3]);\n      }\n    }\n  } else {\n    v = clone(input, {r: 0, g: 0, b: 0, a: 1});\n    v.a = n2b(v.a);\n  }\n  return v;\n}\nfunction functionParse(str) {\n  if (str.charAt(0) === 'r') {\n    return rgbParse(str);\n  }\n  return hueParse(str);\n}\nclass Color {\n  constructor(input) {\n    if (input instanceof Color) {\n      return input;\n    }\n    const type = typeof input;\n    let v;\n    if (type === 'object') {\n      v = fromObject(input);\n    } else if (type === 'string') {\n      v = hexParse(input) || nameParse(input) || functionParse(input);\n    }\n    this._rgb = v;\n    this._valid = !!v;\n  }\n  get valid() {\n    return this._valid;\n  }\n  get rgb() {\n    var v = clone(this._rgb);\n    if (v) {\n      v.a = b2n(v.a);\n    }\n    return v;\n  }\n  set rgb(obj) {\n    this._rgb = fromObject(obj);\n  }\n  rgbString() {\n    return this._valid ? rgbString(this._rgb) : undefined;\n  }\n  hexString() {\n    return this._valid ? hexString(this._rgb) : undefined;\n  }\n  hslString() {\n    return this._valid ? hslString(this._rgb) : undefined;\n  }\n  mix(color, weight) {\n    if (color) {\n      const c1 = this.rgb;\n      const c2 = color.rgb;\n      let w2;\n      const p = weight === w2 ? 0.5 : weight;\n      const w = 2 * p - 1;\n      const a = c1.a - c2.a;\n      const w1 = ((w * a === -1 ? w : (w + a) / (1 + w * a)) + 1) / 2.0;\n      w2 = 1 - w1;\n      c1.r = 0xFF & w1 * c1.r + w2 * c2.r + 0.5;\n      c1.g = 0xFF & w1 * c1.g + w2 * c2.g + 0.5;\n      c1.b = 0xFF & w1 * c1.b + w2 * c2.b + 0.5;\n      c1.a = p * c1.a + (1 - p) * c2.a;\n      this.rgb = c1;\n    }\n    return this;\n  }\n  interpolate(color, t) {\n    if (color) {\n      this._rgb = interpolate(this._rgb, color._rgb, t);\n    }\n    return this;\n  }\n  clone() {\n    return new Color(this.rgb);\n  }\n  alpha(a) {\n    this._rgb.a = n2b(a);\n    return this;\n  }\n  clearer(ratio) {\n    const rgb = this._rgb;\n    rgb.a *= 1 - ratio;\n    return this;\n  }\n  greyscale() {\n    const rgb = this._rgb;\n    const val = round(rgb.r * 0.3 + rgb.g * 0.59 + rgb.b * 0.11);\n    rgb.r = rgb.g = rgb.b = val;\n    return this;\n  }\n  opaquer(ratio) {\n    const rgb = this._rgb;\n    rgb.a *= 1 + ratio;\n    return this;\n  }\n  negate() {\n    const v = this._rgb;\n    v.r = 255 - v.r;\n    v.g = 255 - v.g;\n    v.b = 255 - v.b;\n    return this;\n  }\n  lighten(ratio) {\n    modHSL(this._rgb, 2, ratio);\n    return this;\n  }\n  darken(ratio) {\n    modHSL(this._rgb, 2, -ratio);\n    return this;\n  }\n  saturate(ratio) {\n    modHSL(this._rgb, 1, ratio);\n    return this;\n  }\n  desaturate(ratio) {\n    modHSL(this._rgb, 1, -ratio);\n    return this;\n  }\n  rotate(deg) {\n    rotate(this._rgb, deg);\n    return this;\n  }\n}\n\nfunction index_esm(input) {\n  return new Color(input);\n}\n\nexport { Color, b2n, b2p, index_esm as default, hexParse, hexString, hsl2rgb, hslString, hsv2rgb, hueParse, hwb2rgb, lim, n2b, n2p, nameParse, p2b, rgb2hsl, rgbParse, rgbString, rotate, round };\n","/*!\n * Chart.js v4.3.0\n * https://www.chartjs.org\n * (c) 2023 Chart.js Contributors\n * Released under the MIT License\n */\nimport { Color } from '@kurkle/color';\n\n/**\n * @namespace Chart.helpers\n */ /**\n * An empty function that can be used, for example, for optional callback.\n */ function noop() {\n/* noop */ }\n/**\n * Returns a unique id, sequentially generated from a global variable.\n */ const uid = (()=>{\n    let id = 0;\n    return ()=>id++;\n})();\n/**\n * Returns true if `value` is neither null nor undefined, else returns false.\n * @param value - The value to test.\n * @since 2.7.0\n */ function isNullOrUndef(value) {\n    return value === null || typeof value === 'undefined';\n}\n/**\n * Returns true if `value` is an array (including typed arrays), else returns false.\n * @param value - The value to test.\n * @function\n */ function isArray(value) {\n    if (Array.isArray && Array.isArray(value)) {\n        return true;\n    }\n    const type = Object.prototype.toString.call(value);\n    if (type.slice(0, 7) === '[object' && type.slice(-6) === 'Array]') {\n        return true;\n    }\n    return false;\n}\n/**\n * Returns true if `value` is an object (excluding null), else returns false.\n * @param value - The value to test.\n * @since 2.7.0\n */ function isObject(value) {\n    return value !== null && Object.prototype.toString.call(value) === '[object Object]';\n}\n/**\n * Returns true if `value` is a finite number, else returns false\n * @param value  - The value to test.\n */ function isNumberFinite(value) {\n    return (typeof value === 'number' || value instanceof Number) && isFinite(+value);\n}\n/**\n * Returns `value` if finite, else returns `defaultValue`.\n * @param value - The value to return if defined.\n * @param defaultValue - The value to return if `value` is not finite.\n */ function finiteOrDefault(value, defaultValue) {\n    return isNumberFinite(value) ? value : defaultValue;\n}\n/**\n * Returns `value` if defined, else returns `defaultValue`.\n * @param value - The value to return if defined.\n * @param defaultValue - The value to return if `value` is undefined.\n */ function valueOrDefault(value, defaultValue) {\n    return typeof value === 'undefined' ? defaultValue : value;\n}\nconst toPercentage = (value, dimension)=>typeof value === 'string' && value.endsWith('%') ? parseFloat(value) / 100 : +value / dimension;\nconst toDimension = (value, dimension)=>typeof value === 'string' && value.endsWith('%') ? parseFloat(value) / 100 * dimension : +value;\n/**\n * Calls `fn` with the given `args` in the scope defined by `thisArg` and returns the\n * value returned by `fn`. If `fn` is not a function, this method returns undefined.\n * @param fn - The function to call.\n * @param args - The arguments with which `fn` should be called.\n * @param [thisArg] - The value of `this` provided for the call to `fn`.\n */ function callback(fn, args, thisArg) {\n    if (fn && typeof fn.call === 'function') {\n        return fn.apply(thisArg, args);\n    }\n}\nfunction each(loopable, fn, thisArg, reverse) {\n    let i, len, keys;\n    if (isArray(loopable)) {\n        len = loopable.length;\n        if (reverse) {\n            for(i = len - 1; i >= 0; i--){\n                fn.call(thisArg, loopable[i], i);\n            }\n        } else {\n            for(i = 0; i < len; i++){\n                fn.call(thisArg, loopable[i], i);\n            }\n        }\n    } else if (isObject(loopable)) {\n        keys = Object.keys(loopable);\n        len = keys.length;\n        for(i = 0; i < len; i++){\n            fn.call(thisArg, loopable[keys[i]], keys[i]);\n        }\n    }\n}\n/**\n * Returns true if the `a0` and `a1` arrays have the same content, else returns false.\n * @param a0 - The array to compare\n * @param a1 - The array to compare\n * @private\n */ function _elementsEqual(a0, a1) {\n    let i, ilen, v0, v1;\n    if (!a0 || !a1 || a0.length !== a1.length) {\n        return false;\n    }\n    for(i = 0, ilen = a0.length; i < ilen; ++i){\n        v0 = a0[i];\n        v1 = a1[i];\n        if (v0.datasetIndex !== v1.datasetIndex || v0.index !== v1.index) {\n            return false;\n        }\n    }\n    return true;\n}\n/**\n * Returns a deep copy of `source` without keeping references on objects and arrays.\n * @param source - The value to clone.\n */ function clone(source) {\n    if (isArray(source)) {\n        return source.map(clone);\n    }\n    if (isObject(source)) {\n        const target = Object.create(null);\n        const keys = Object.keys(source);\n        const klen = keys.length;\n        let k = 0;\n        for(; k < klen; ++k){\n            target[keys[k]] = clone(source[keys[k]]);\n        }\n        return target;\n    }\n    return source;\n}\nfunction isValidKey(key) {\n    return [\n        '__proto__',\n        'prototype',\n        'constructor'\n    ].indexOf(key) === -1;\n}\n/**\n * The default merger when Chart.helpers.merge is called without merger option.\n * Note(SB): also used by mergeConfig and mergeScaleConfig as fallback.\n * @private\n */ function _merger(key, target, source, options) {\n    if (!isValidKey(key)) {\n        return;\n    }\n    const tval = target[key];\n    const sval = source[key];\n    if (isObject(tval) && isObject(sval)) {\n        // eslint-disable-next-line @typescript-eslint/no-use-before-define\n        merge(tval, sval, options);\n    } else {\n        target[key] = clone(sval);\n    }\n}\nfunction merge(target, source, options) {\n    const sources = isArray(source) ? source : [\n        source\n    ];\n    const ilen = sources.length;\n    if (!isObject(target)) {\n        return target;\n    }\n    options = options || {};\n    const merger = options.merger || _merger;\n    let current;\n    for(let i = 0; i < ilen; ++i){\n        current = sources[i];\n        if (!isObject(current)) {\n            continue;\n        }\n        const keys = Object.keys(current);\n        for(let k = 0, klen = keys.length; k < klen; ++k){\n            merger(keys[k], target, current, options);\n        }\n    }\n    return target;\n}\nfunction mergeIf(target, source) {\n    // eslint-disable-next-line @typescript-eslint/no-use-before-define\n    return merge(target, source, {\n        merger: _mergerIf\n    });\n}\n/**\n * Merges source[key] in target[key] only if target[key] is undefined.\n * @private\n */ function _mergerIf(key, target, source) {\n    if (!isValidKey(key)) {\n        return;\n    }\n    const tval = target[key];\n    const sval = source[key];\n    if (isObject(tval) && isObject(sval)) {\n        mergeIf(tval, sval);\n    } else if (!Object.prototype.hasOwnProperty.call(target, key)) {\n        target[key] = clone(sval);\n    }\n}\n/**\n * @private\n */ function _deprecated(scope, value, previous, current) {\n    if (value !== undefined) {\n        console.warn(scope + ': \"' + previous + '\" is deprecated. Please use \"' + current + '\" instead');\n    }\n}\n// resolveObjectKey resolver cache\nconst keyResolvers = {\n    // Chart.helpers.core resolveObjectKey should resolve empty key to root object\n    '': (v)=>v,\n    // default resolvers\n    x: (o)=>o.x,\n    y: (o)=>o.y\n};\n/**\n * @private\n */ function _splitKey(key) {\n    const parts = key.split('.');\n    const keys = [];\n    let tmp = '';\n    for (const part of parts){\n        tmp += part;\n        if (tmp.endsWith('\\\\')) {\n            tmp = tmp.slice(0, -1) + '.';\n        } else {\n            keys.push(tmp);\n            tmp = '';\n        }\n    }\n    return keys;\n}\nfunction _getKeyResolver(key) {\n    const keys = _splitKey(key);\n    return (obj)=>{\n        for (const k of keys){\n            if (k === '') {\n                break;\n            }\n            obj = obj && obj[k];\n        }\n        return obj;\n    };\n}\nfunction resolveObjectKey(obj, key) {\n    const resolver = keyResolvers[key] || (keyResolvers[key] = _getKeyResolver(key));\n    return resolver(obj);\n}\n/**\n * @private\n */ function _capitalize(str) {\n    return str.charAt(0).toUpperCase() + str.slice(1);\n}\nconst defined = (value)=>typeof value !== 'undefined';\nconst isFunction = (value)=>typeof value === 'function';\n// Adapted from https://stackoverflow.com/questions/31128855/comparing-ecma6-sets-for-equality#31129384\nconst setsEqual = (a, b)=>{\n    if (a.size !== b.size) {\n        return false;\n    }\n    for (const item of a){\n        if (!b.has(item)) {\n            return false;\n        }\n    }\n    return true;\n};\n/**\n * @param e - The event\n * @private\n */ function _isClickEvent(e) {\n    return e.type === 'mouseup' || e.type === 'click' || e.type === 'contextmenu';\n}\n\n/**\n * @alias Chart.helpers.math\n * @namespace\n */ const PI = Math.PI;\nconst TAU = 2 * PI;\nconst PITAU = TAU + PI;\nconst INFINITY = Number.POSITIVE_INFINITY;\nconst RAD_PER_DEG = PI / 180;\nconst HALF_PI = PI / 2;\nconst QUARTER_PI = PI / 4;\nconst TWO_THIRDS_PI = PI * 2 / 3;\nconst log10 = Math.log10;\nconst sign = Math.sign;\nfunction almostEquals(x, y, epsilon) {\n    return Math.abs(x - y) < epsilon;\n}\n/**\n * Implementation of the nice number algorithm used in determining where axis labels will go\n */ function niceNum(range) {\n    const roundedRange = Math.round(range);\n    range = almostEquals(range, roundedRange, range / 1000) ? roundedRange : range;\n    const niceRange = Math.pow(10, Math.floor(log10(range)));\n    const fraction = range / niceRange;\n    const niceFraction = fraction <= 1 ? 1 : fraction <= 2 ? 2 : fraction <= 5 ? 5 : 10;\n    return niceFraction * niceRange;\n}\n/**\n * Returns an array of factors sorted from 1 to sqrt(value)\n * @private\n */ function _factorize(value) {\n    const result = [];\n    const sqrt = Math.sqrt(value);\n    let i;\n    for(i = 1; i < sqrt; i++){\n        if (value % i === 0) {\n            result.push(i);\n            result.push(value / i);\n        }\n    }\n    if (sqrt === (sqrt | 0)) {\n        result.push(sqrt);\n    }\n    result.sort((a, b)=>a - b).pop();\n    return result;\n}\nfunction isNumber(n) {\n    return !isNaN(parseFloat(n)) && isFinite(n);\n}\nfunction almostWhole(x, epsilon) {\n    const rounded = Math.round(x);\n    return rounded - epsilon <= x && rounded + epsilon >= x;\n}\n/**\n * @private\n */ function _setMinAndMaxByKey(array, target, property) {\n    let i, ilen, value;\n    for(i = 0, ilen = array.length; i < ilen; i++){\n        value = array[i][property];\n        if (!isNaN(value)) {\n            target.min = Math.min(target.min, value);\n            target.max = Math.max(target.max, value);\n        }\n    }\n}\nfunction toRadians(degrees) {\n    return degrees * (PI / 180);\n}\nfunction toDegrees(radians) {\n    return radians * (180 / PI);\n}\n/**\n * Returns the number of decimal places\n * i.e. the number of digits after the decimal point, of the value of this Number.\n * @param x - A number.\n * @returns The number of decimal places.\n * @private\n */ function _decimalPlaces(x) {\n    if (!isNumberFinite(x)) {\n        return;\n    }\n    let e = 1;\n    let p = 0;\n    while(Math.round(x * e) / e !== x){\n        e *= 10;\n        p++;\n    }\n    return p;\n}\n// Gets the angle from vertical upright to the point about a centre.\nfunction getAngleFromPoint(centrePoint, anglePoint) {\n    const distanceFromXCenter = anglePoint.x - centrePoint.x;\n    const distanceFromYCenter = anglePoint.y - centrePoint.y;\n    const radialDistanceFromCenter = Math.sqrt(distanceFromXCenter * distanceFromXCenter + distanceFromYCenter * distanceFromYCenter);\n    let angle = Math.atan2(distanceFromYCenter, distanceFromXCenter);\n    if (angle < -0.5 * PI) {\n        angle += TAU; // make sure the returned angle is in the range of (-PI/2, 3PI/2]\n    }\n    return {\n        angle,\n        distance: radialDistanceFromCenter\n    };\n}\nfunction distanceBetweenPoints(pt1, pt2) {\n    return Math.sqrt(Math.pow(pt2.x - pt1.x, 2) + Math.pow(pt2.y - pt1.y, 2));\n}\n/**\n * Shortest distance between angles, in either direction.\n * @private\n */ function _angleDiff(a, b) {\n    return (a - b + PITAU) % TAU - PI;\n}\n/**\n * Normalize angle to be between 0 and 2*PI\n * @private\n */ function _normalizeAngle(a) {\n    return (a % TAU + TAU) % TAU;\n}\n/**\n * @private\n */ function _angleBetween(angle, start, end, sameAngleIsFullCircle) {\n    const a = _normalizeAngle(angle);\n    const s = _normalizeAngle(start);\n    const e = _normalizeAngle(end);\n    const angleToStart = _normalizeAngle(s - a);\n    const angleToEnd = _normalizeAngle(e - a);\n    const startToAngle = _normalizeAngle(a - s);\n    const endToAngle = _normalizeAngle(a - e);\n    return a === s || a === e || sameAngleIsFullCircle && s === e || angleToStart > angleToEnd && startToAngle < endToAngle;\n}\n/**\n * Limit `value` between `min` and `max`\n * @param value\n * @param min\n * @param max\n * @private\n */ function _limitValue(value, min, max) {\n    return Math.max(min, Math.min(max, value));\n}\n/**\n * @param {number} value\n * @private\n */ function _int16Range(value) {\n    return _limitValue(value, -32768, 32767);\n}\n/**\n * @param value\n * @param start\n * @param end\n * @param [epsilon]\n * @private\n */ function _isBetween(value, start, end, epsilon = 1e-6) {\n    return value >= Math.min(start, end) - epsilon && value <= Math.max(start, end) + epsilon;\n}\n\nfunction _lookup(table, value, cmp) {\n    cmp = cmp || ((index)=>table[index] < value);\n    let hi = table.length - 1;\n    let lo = 0;\n    let mid;\n    while(hi - lo > 1){\n        mid = lo + hi >> 1;\n        if (cmp(mid)) {\n            lo = mid;\n        } else {\n            hi = mid;\n        }\n    }\n    return {\n        lo,\n        hi\n    };\n}\n/**\n * Binary search\n * @param table - the table search. must be sorted!\n * @param key - property name for the value in each entry\n * @param value - value to find\n * @param last - lookup last index\n * @private\n */ const _lookupByKey = (table, key, value, last)=>_lookup(table, value, last ? (index)=>{\n        const ti = table[index][key];\n        return ti < value || ti === value && table[index + 1][key] === value;\n    } : (index)=>table[index][key] < value);\n/**\n * Reverse binary search\n * @param table - the table search. must be sorted!\n * @param key - property name for the value in each entry\n * @param value - value to find\n * @private\n */ const _rlookupByKey = (table, key, value)=>_lookup(table, value, (index)=>table[index][key] >= value);\n/**\n * Return subset of `values` between `min` and `max` inclusive.\n * Values are assumed to be in sorted order.\n * @param values - sorted array of values\n * @param min - min value\n * @param max - max value\n */ function _filterBetween(values, min, max) {\n    let start = 0;\n    let end = values.length;\n    while(start < end && values[start] < min){\n        start++;\n    }\n    while(end > start && values[end - 1] > max){\n        end--;\n    }\n    return start > 0 || end < values.length ? values.slice(start, end) : values;\n}\nconst arrayEvents = [\n    'push',\n    'pop',\n    'shift',\n    'splice',\n    'unshift'\n];\nfunction listenArrayEvents(array, listener) {\n    if (array._chartjs) {\n        array._chartjs.listeners.push(listener);\n        return;\n    }\n    Object.defineProperty(array, '_chartjs', {\n        configurable: true,\n        enumerable: false,\n        value: {\n            listeners: [\n                listener\n            ]\n        }\n    });\n    arrayEvents.forEach((key)=>{\n        const method = '_onData' + _capitalize(key);\n        const base = array[key];\n        Object.defineProperty(array, key, {\n            configurable: true,\n            enumerable: false,\n            value (...args) {\n                const res = base.apply(this, args);\n                array._chartjs.listeners.forEach((object)=>{\n                    if (typeof object[method] === 'function') {\n                        object[method](...args);\n                    }\n                });\n                return res;\n            }\n        });\n    });\n}\nfunction unlistenArrayEvents(array, listener) {\n    const stub = array._chartjs;\n    if (!stub) {\n        return;\n    }\n    const listeners = stub.listeners;\n    const index = listeners.indexOf(listener);\n    if (index !== -1) {\n        listeners.splice(index, 1);\n    }\n    if (listeners.length > 0) {\n        return;\n    }\n    arrayEvents.forEach((key)=>{\n        delete array[key];\n    });\n    delete array._chartjs;\n}\n/**\n * @param items\n */ function _arrayUnique(items) {\n    const set = new Set(items);\n    if (set.size === items.length) {\n        return items;\n    }\n    return Array.from(set);\n}\n\nfunction fontString(pixelSize, fontStyle, fontFamily) {\n    return fontStyle + ' ' + pixelSize + 'px ' + fontFamily;\n}\n/**\n* Request animation polyfill\n*/ const requestAnimFrame = function() {\n    if (typeof window === 'undefined') {\n        return function(callback) {\n            return callback();\n        };\n    }\n    return window.requestAnimationFrame;\n}();\n/**\n * Throttles calling `fn` once per animation frame\n * Latest arguments are used on the actual call\n */ function throttled(fn, thisArg) {\n    let argsToUse = [];\n    let ticking = false;\n    return function(...args) {\n        // Save the args for use later\n        argsToUse = args;\n        if (!ticking) {\n            ticking = true;\n            requestAnimFrame.call(window, ()=>{\n                ticking = false;\n                fn.apply(thisArg, argsToUse);\n            });\n        }\n    };\n}\n/**\n * Debounces calling `fn` for `delay` ms\n */ function debounce(fn, delay) {\n    let timeout;\n    return function(...args) {\n        if (delay) {\n            clearTimeout(timeout);\n            timeout = setTimeout(fn, delay, args);\n        } else {\n            fn.apply(this, args);\n        }\n        return delay;\n    };\n}\n/**\n * Converts 'start' to 'left', 'end' to 'right' and others to 'center'\n * @private\n */ const _toLeftRightCenter = (align)=>align === 'start' ? 'left' : align === 'end' ? 'right' : 'center';\n/**\n * Returns `start`, `end` or `(start + end) / 2` depending on `align`. Defaults to `center`\n * @private\n */ const _alignStartEnd = (align, start, end)=>align === 'start' ? start : align === 'end' ? end : (start + end) / 2;\n/**\n * Returns `left`, `right` or `(left + right) / 2` depending on `align`. Defaults to `left`\n * @private\n */ const _textX = (align, left, right, rtl)=>{\n    const check = rtl ? 'left' : 'right';\n    return align === check ? right : align === 'center' ? (left + right) / 2 : left;\n};\n/**\n * Return start and count of visible points.\n * @private\n */ function _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled) {\n    const pointCount = points.length;\n    let start = 0;\n    let count = pointCount;\n    if (meta._sorted) {\n        const { iScale , _parsed  } = meta;\n        const axis = iScale.axis;\n        const { min , max , minDefined , maxDefined  } = iScale.getUserBounds();\n        if (minDefined) {\n            start = _limitValue(Math.min(// @ts-expect-error Need to type _parsed\n            _lookupByKey(_parsed, iScale.axis, min).lo, // @ts-expect-error Need to fix types on _lookupByKey\n            animationsDisabled ? pointCount : _lookupByKey(points, axis, iScale.getPixelForValue(min)).lo), 0, pointCount - 1);\n        }\n        if (maxDefined) {\n            count = _limitValue(Math.max(// @ts-expect-error Need to type _parsed\n            _lookupByKey(_parsed, iScale.axis, max, true).hi + 1, // @ts-expect-error Need to fix types on _lookupByKey\n            animationsDisabled ? 0 : _lookupByKey(points, axis, iScale.getPixelForValue(max), true).hi + 1), start, pointCount) - start;\n        } else {\n            count = pointCount - start;\n        }\n    }\n    return {\n        start,\n        count\n    };\n}\n/**\n * Checks if the scale ranges have changed.\n * @param {object} meta - dataset meta.\n * @returns {boolean}\n * @private\n */ function _scaleRangesChanged(meta) {\n    const { xScale , yScale , _scaleRanges  } = meta;\n    const newRanges = {\n        xmin: xScale.min,\n        xmax: xScale.max,\n        ymin: yScale.min,\n        ymax: yScale.max\n    };\n    if (!_scaleRanges) {\n        meta._scaleRanges = newRanges;\n        return true;\n    }\n    const changed = _scaleRanges.xmin !== xScale.min || _scaleRanges.xmax !== xScale.max || _scaleRanges.ymin !== yScale.min || _scaleRanges.ymax !== yScale.max;\n    Object.assign(_scaleRanges, newRanges);\n    return changed;\n}\n\nconst atEdge = (t)=>t === 0 || t === 1;\nconst elasticIn = (t, s, p)=>-(Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * TAU / p));\nconst elasticOut = (t, s, p)=>Math.pow(2, -10 * t) * Math.sin((t - s) * TAU / p) + 1;\n/**\n * Easing functions adapted from Robert Penner's easing equations.\n * @namespace Chart.helpers.easing.effects\n * @see http://www.robertpenner.com/easing/\n */ const effects = {\n    linear: (t)=>t,\n    easeInQuad: (t)=>t * t,\n    easeOutQuad: (t)=>-t * (t - 2),\n    easeInOutQuad: (t)=>(t /= 0.5) < 1 ? 0.5 * t * t : -0.5 * (--t * (t - 2) - 1),\n    easeInCubic: (t)=>t * t * t,\n    easeOutCubic: (t)=>(t -= 1) * t * t + 1,\n    easeInOutCubic: (t)=>(t /= 0.5) < 1 ? 0.5 * t * t * t : 0.5 * ((t -= 2) * t * t + 2),\n    easeInQuart: (t)=>t * t * t * t,\n    easeOutQuart: (t)=>-((t -= 1) * t * t * t - 1),\n    easeInOutQuart: (t)=>(t /= 0.5) < 1 ? 0.5 * t * t * t * t : -0.5 * ((t -= 2) * t * t * t - 2),\n    easeInQuint: (t)=>t * t * t * t * t,\n    easeOutQuint: (t)=>(t -= 1) * t * t * t * t + 1,\n    easeInOutQuint: (t)=>(t /= 0.5) < 1 ? 0.5 * t * t * t * t * t : 0.5 * ((t -= 2) * t * t * t * t + 2),\n    easeInSine: (t)=>-Math.cos(t * HALF_PI) + 1,\n    easeOutSine: (t)=>Math.sin(t * HALF_PI),\n    easeInOutSine: (t)=>-0.5 * (Math.cos(PI * t) - 1),\n    easeInExpo: (t)=>t === 0 ? 0 : Math.pow(2, 10 * (t - 1)),\n    easeOutExpo: (t)=>t === 1 ? 1 : -Math.pow(2, -10 * t) + 1,\n    easeInOutExpo: (t)=>atEdge(t) ? t : t < 0.5 ? 0.5 * Math.pow(2, 10 * (t * 2 - 1)) : 0.5 * (-Math.pow(2, -10 * (t * 2 - 1)) + 2),\n    easeInCirc: (t)=>t >= 1 ? t : -(Math.sqrt(1 - t * t) - 1),\n    easeOutCirc: (t)=>Math.sqrt(1 - (t -= 1) * t),\n    easeInOutCirc: (t)=>(t /= 0.5) < 1 ? -0.5 * (Math.sqrt(1 - t * t) - 1) : 0.5 * (Math.sqrt(1 - (t -= 2) * t) + 1),\n    easeInElastic: (t)=>atEdge(t) ? t : elasticIn(t, 0.075, 0.3),\n    easeOutElastic: (t)=>atEdge(t) ? t : elasticOut(t, 0.075, 0.3),\n    easeInOutElastic (t) {\n        const s = 0.1125;\n        const p = 0.45;\n        return atEdge(t) ? t : t < 0.5 ? 0.5 * elasticIn(t * 2, s, p) : 0.5 + 0.5 * elasticOut(t * 2 - 1, s, p);\n    },\n    easeInBack (t) {\n        const s = 1.70158;\n        return t * t * ((s + 1) * t - s);\n    },\n    easeOutBack (t) {\n        const s = 1.70158;\n        return (t -= 1) * t * ((s + 1) * t + s) + 1;\n    },\n    easeInOutBack (t) {\n        let s = 1.70158;\n        if ((t /= 0.5) < 1) {\n            return 0.5 * (t * t * (((s *= 1.525) + 1) * t - s));\n        }\n        return 0.5 * ((t -= 2) * t * (((s *= 1.525) + 1) * t + s) + 2);\n    },\n    easeInBounce: (t)=>1 - effects.easeOutBounce(1 - t),\n    easeOutBounce (t) {\n        const m = 7.5625;\n        const d = 2.75;\n        if (t < 1 / d) {\n            return m * t * t;\n        }\n        if (t < 2 / d) {\n            return m * (t -= 1.5 / d) * t + 0.75;\n        }\n        if (t < 2.5 / d) {\n            return m * (t -= 2.25 / d) * t + 0.9375;\n        }\n        return m * (t -= 2.625 / d) * t + 0.984375;\n    },\n    easeInOutBounce: (t)=>t < 0.5 ? effects.easeInBounce(t * 2) * 0.5 : effects.easeOutBounce(t * 2 - 1) * 0.5 + 0.5\n};\n\nfunction isPatternOrGradient(value) {\n    if (value && typeof value === 'object') {\n        const type = value.toString();\n        return type === '[object CanvasPattern]' || type === '[object CanvasGradient]';\n    }\n    return false;\n}\nfunction color(value) {\n    return isPatternOrGradient(value) ? value : new Color(value);\n}\nfunction getHoverColor(value) {\n    return isPatternOrGradient(value) ? value : new Color(value).saturate(0.5).darken(0.1).hexString();\n}\n\nconst numbers = [\n    'x',\n    'y',\n    'borderWidth',\n    'radius',\n    'tension'\n];\nconst colors = [\n    'color',\n    'borderColor',\n    'backgroundColor'\n];\nfunction applyAnimationsDefaults(defaults) {\n    defaults.set('animation', {\n        delay: undefined,\n        duration: 1000,\n        easing: 'easeOutQuart',\n        fn: undefined,\n        from: undefined,\n        loop: undefined,\n        to: undefined,\n        type: undefined\n    });\n    defaults.describe('animation', {\n        _fallback: false,\n        _indexable: false,\n        _scriptable: (name)=>name !== 'onProgress' && name !== 'onComplete' && name !== 'fn'\n    });\n    defaults.set('animations', {\n        colors: {\n            type: 'color',\n            properties: colors\n        },\n        numbers: {\n            type: 'number',\n            properties: numbers\n        }\n    });\n    defaults.describe('animations', {\n        _fallback: 'animation'\n    });\n    defaults.set('transitions', {\n        active: {\n            animation: {\n                duration: 400\n            }\n        },\n        resize: {\n            animation: {\n                duration: 0\n            }\n        },\n        show: {\n            animations: {\n                colors: {\n                    from: 'transparent'\n                },\n                visible: {\n                    type: 'boolean',\n                    duration: 0\n                }\n            }\n        },\n        hide: {\n            animations: {\n                colors: {\n                    to: 'transparent'\n                },\n                visible: {\n                    type: 'boolean',\n                    easing: 'linear',\n                    fn: (v)=>v | 0\n                }\n            }\n        }\n    });\n}\n\nfunction applyLayoutsDefaults(defaults) {\n    defaults.set('layout', {\n        autoPadding: true,\n        padding: {\n            top: 0,\n            right: 0,\n            bottom: 0,\n            left: 0\n        }\n    });\n}\n\nconst intlCache = new Map();\nfunction getNumberFormat(locale, options) {\n    options = options || {};\n    const cacheKey = locale + JSON.stringify(options);\n    let formatter = intlCache.get(cacheKey);\n    if (!formatter) {\n        formatter = new Intl.NumberFormat(locale, options);\n        intlCache.set(cacheKey, formatter);\n    }\n    return formatter;\n}\nfunction formatNumber(num, locale, options) {\n    return getNumberFormat(locale, options).format(num);\n}\n\nconst formatters = {\n values (value) {\n        return isArray(value) ?  value : '' + value;\n    },\n numeric (tickValue, index, ticks) {\n        if (tickValue === 0) {\n            return '0';\n        }\n        const locale = this.chart.options.locale;\n        let notation;\n        let delta = tickValue;\n        if (ticks.length > 1) {\n            const maxTick = Math.max(Math.abs(ticks[0].value), Math.abs(ticks[ticks.length - 1].value));\n            if (maxTick < 1e-4 || maxTick > 1e+15) {\n                notation = 'scientific';\n            }\n            delta = calculateDelta(tickValue, ticks);\n        }\n        const logDelta = log10(Math.abs(delta));\n        const numDecimal = isNaN(logDelta) ? 1 : Math.max(Math.min(-1 * Math.floor(logDelta), 20), 0);\n        const options = {\n            notation,\n            minimumFractionDigits: numDecimal,\n            maximumFractionDigits: numDecimal\n        };\n        Object.assign(options, this.options.ticks.format);\n        return formatNumber(tickValue, locale, options);\n    },\n logarithmic (tickValue, index, ticks) {\n        if (tickValue === 0) {\n            return '0';\n        }\n        const remain = ticks[index].significand || tickValue / Math.pow(10, Math.floor(log10(tickValue)));\n        if ([\n            1,\n            2,\n            3,\n            5,\n            10,\n            15\n        ].includes(remain) || index > 0.8 * ticks.length) {\n            return formatters.numeric.call(this, tickValue, index, ticks);\n        }\n        return '';\n    }\n};\nfunction calculateDelta(tickValue, ticks) {\n    let delta = ticks.length > 3 ? ticks[2].value - ticks[1].value : ticks[1].value - ticks[0].value;\n    if (Math.abs(delta) >= 1 && tickValue !== Math.floor(tickValue)) {\n        delta = tickValue - Math.floor(tickValue);\n    }\n    return delta;\n}\n var Ticks = {\n    formatters\n};\n\nfunction applyScaleDefaults(defaults) {\n    defaults.set('scale', {\n        display: true,\n        offset: false,\n        reverse: false,\n        beginAtZero: false,\n bounds: 'ticks',\n grace: 0,\n        grid: {\n            display: true,\n            lineWidth: 1,\n            drawOnChartArea: true,\n            drawTicks: true,\n            tickLength: 8,\n            tickWidth: (_ctx, options)=>options.lineWidth,\n            tickColor: (_ctx, options)=>options.color,\n            offset: false\n        },\n        border: {\n            display: true,\n            dash: [],\n            dashOffset: 0.0,\n            width: 1\n        },\n        title: {\n            display: false,\n            text: '',\n            padding: {\n                top: 4,\n                bottom: 4\n            }\n        },\n        ticks: {\n            minRotation: 0,\n            maxRotation: 50,\n            mirror: false,\n            textStrokeWidth: 0,\n            textStrokeColor: '',\n            padding: 3,\n            display: true,\n            autoSkip: true,\n            autoSkipPadding: 3,\n            labelOffset: 0,\n            callback: Ticks.formatters.values,\n            minor: {},\n            major: {},\n            align: 'center',\n            crossAlign: 'near',\n            showLabelBackdrop: false,\n            backdropColor: 'rgba(255, 255, 255, 0.75)',\n            backdropPadding: 2\n        }\n    });\n    defaults.route('scale.ticks', 'color', '', 'color');\n    defaults.route('scale.grid', 'color', '', 'borderColor');\n    defaults.route('scale.border', 'color', '', 'borderColor');\n    defaults.route('scale.title', 'color', '', 'color');\n    defaults.describe('scale', {\n        _fallback: false,\n        _scriptable: (name)=>!name.startsWith('before') && !name.startsWith('after') && name !== 'callback' && name !== 'parser',\n        _indexable: (name)=>name !== 'borderDash' && name !== 'tickBorderDash' && name !== 'dash'\n    });\n    defaults.describe('scales', {\n        _fallback: 'scale'\n    });\n    defaults.describe('scale.ticks', {\n        _scriptable: (name)=>name !== 'backdropPadding' && name !== 'callback',\n        _indexable: (name)=>name !== 'backdropPadding'\n    });\n}\n\nconst overrides = Object.create(null);\nconst descriptors = Object.create(null);\n function getScope$1(node, key) {\n    if (!key) {\n        return node;\n    }\n    const keys = key.split('.');\n    for(let i = 0, n = keys.length; i < n; ++i){\n        const k = keys[i];\n        node = node[k] || (node[k] = Object.create(null));\n    }\n    return node;\n}\nfunction set(root, scope, values) {\n    if (typeof scope === 'string') {\n        return merge(getScope$1(root, scope), values);\n    }\n    return merge(getScope$1(root, ''), scope);\n}\n class Defaults {\n    constructor(_descriptors, _appliers){\n        this.animation = undefined;\n        this.backgroundColor = 'rgba(0,0,0,0.1)';\n        this.borderColor = 'rgba(0,0,0,0.1)';\n        this.color = '#666';\n        this.datasets = {};\n        this.devicePixelRatio = (context)=>context.chart.platform.getDevicePixelRatio();\n        this.elements = {};\n        this.events = [\n            'mousemove',\n            'mouseout',\n            'click',\n            'touchstart',\n            'touchmove'\n        ];\n        this.font = {\n            family: \"'Helvetica Neue', 'Helvetica', 'Arial', sans-serif\",\n            size: 12,\n            style: 'normal',\n            lineHeight: 1.2,\n            weight: null\n        };\n        this.hover = {};\n        this.hoverBackgroundColor = (ctx, options)=>getHoverColor(options.backgroundColor);\n        this.hoverBorderColor = (ctx, options)=>getHoverColor(options.borderColor);\n        this.hoverColor = (ctx, options)=>getHoverColor(options.color);\n        this.indexAxis = 'x';\n        this.interaction = {\n            mode: 'nearest',\n            intersect: true,\n            includeInvisible: false\n        };\n        this.maintainAspectRatio = true;\n        this.onHover = null;\n        this.onClick = null;\n        this.parsing = true;\n        this.plugins = {};\n        this.responsive = true;\n        this.scale = undefined;\n        this.scales = {};\n        this.showLine = true;\n        this.drawActiveElementsOnTop = true;\n        this.describe(_descriptors);\n        this.apply(_appliers);\n    }\n set(scope, values) {\n        return set(this, scope, values);\n    }\n get(scope) {\n        return getScope$1(this, scope);\n    }\n describe(scope, values) {\n        return set(descriptors, scope, values);\n    }\n    override(scope, values) {\n        return set(overrides, scope, values);\n    }\n route(scope, name, targetScope, targetName) {\n        const scopeObject = getScope$1(this, scope);\n        const targetScopeObject = getScope$1(this, targetScope);\n        const privateName = '_' + name;\n        Object.defineProperties(scopeObject, {\n            [privateName]: {\n                value: scopeObject[name],\n                writable: true\n            },\n            [name]: {\n                enumerable: true,\n                get () {\n                    const local = this[privateName];\n                    const target = targetScopeObject[targetName];\n                    if (isObject(local)) {\n                        return Object.assign({}, target, local);\n                    }\n                    return valueOrDefault(local, target);\n                },\n                set (value) {\n                    this[privateName] = value;\n                }\n            }\n        });\n    }\n    apply(appliers) {\n        appliers.forEach((apply)=>apply(this));\n    }\n}\nvar defaults = /* #__PURE__ */ new Defaults({\n    _scriptable: (name)=>!name.startsWith('on'),\n    _indexable: (name)=>name !== 'events',\n    hover: {\n        _fallback: 'interaction'\n    },\n    interaction: {\n        _scriptable: false,\n        _indexable: false\n    }\n}, [\n    applyAnimationsDefaults,\n    applyLayoutsDefaults,\n    applyScaleDefaults\n]);\n\n/**\n * Converts the given font object into a CSS font string.\n * @param font - A font object.\n * @return The CSS font string. See https://developer.mozilla.org/en-US/docs/Web/CSS/font\n * @private\n */ function toFontString(font) {\n    if (!font || isNullOrUndef(font.size) || isNullOrUndef(font.family)) {\n        return null;\n    }\n    return (font.style ? font.style + ' ' : '') + (font.weight ? font.weight + ' ' : '') + font.size + 'px ' + font.family;\n}\n/**\n * @private\n */ function _measureText(ctx, data, gc, longest, string) {\n    let textWidth = data[string];\n    if (!textWidth) {\n        textWidth = data[string] = ctx.measureText(string).width;\n        gc.push(string);\n    }\n    if (textWidth > longest) {\n        longest = textWidth;\n    }\n    return longest;\n}\n/**\n * @private\n */ // eslint-disable-next-line complexity\nfunction _longestText(ctx, font, arrayOfThings, cache) {\n    cache = cache || {};\n    let data = cache.data = cache.data || {};\n    let gc = cache.garbageCollect = cache.garbageCollect || [];\n    if (cache.font !== font) {\n        data = cache.data = {};\n        gc = cache.garbageCollect = [];\n        cache.font = font;\n    }\n    ctx.save();\n    ctx.font = font;\n    let longest = 0;\n    const ilen = arrayOfThings.length;\n    let i, j, jlen, thing, nestedThing;\n    for(i = 0; i < ilen; i++){\n        thing = arrayOfThings[i];\n        // Undefined strings and arrays should not be measured\n        if (thing !== undefined && thing !== null && !isArray(thing)) {\n            longest = _measureText(ctx, data, gc, longest, thing);\n        } else if (isArray(thing)) {\n            // if it is an array lets measure each element\n            // to do maybe simplify this function a bit so we can do this more recursively?\n            for(j = 0, jlen = thing.length; j < jlen; j++){\n                nestedThing = thing[j];\n                // Undefined strings and arrays should not be measured\n                if (nestedThing !== undefined && nestedThing !== null && !isArray(nestedThing)) {\n                    longest = _measureText(ctx, data, gc, longest, nestedThing);\n                }\n            }\n        }\n    }\n    ctx.restore();\n    const gcLen = gc.length / 2;\n    if (gcLen > arrayOfThings.length) {\n        for(i = 0; i < gcLen; i++){\n            delete data[gc[i]];\n        }\n        gc.splice(0, gcLen);\n    }\n    return longest;\n}\n/**\n * Returns the aligned pixel value to avoid anti-aliasing blur\n * @param chart - The chart instance.\n * @param pixel - A pixel value.\n * @param width - The width of the element.\n * @returns The aligned pixel value.\n * @private\n */ function _alignPixel(chart, pixel, width) {\n    const devicePixelRatio = chart.currentDevicePixelRatio;\n    const halfWidth = width !== 0 ? Math.max(width / 2, 0.5) : 0;\n    return Math.round((pixel - halfWidth) * devicePixelRatio) / devicePixelRatio + halfWidth;\n}\n/**\n * Clears the entire canvas.\n */ function clearCanvas(canvas, ctx) {\n    ctx = ctx || canvas.getContext('2d');\n    ctx.save();\n    // canvas.width and canvas.height do not consider the canvas transform,\n    // while clearRect does\n    ctx.resetTransform();\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n    ctx.restore();\n}\nfunction drawPoint(ctx, options, x, y) {\n    // eslint-disable-next-line @typescript-eslint/no-use-before-define\n    drawPointLegend(ctx, options, x, y, null);\n}\n// eslint-disable-next-line complexity\nfunction drawPointLegend(ctx, options, x, y, w) {\n    let type, xOffset, yOffset, size, cornerRadius, width, xOffsetW, yOffsetW;\n    const style = options.pointStyle;\n    const rotation = options.rotation;\n    const radius = options.radius;\n    let rad = (rotation || 0) * RAD_PER_DEG;\n    if (style && typeof style === 'object') {\n        type = style.toString();\n        if (type === '[object HTMLImageElement]' || type === '[object HTMLCanvasElement]') {\n            ctx.save();\n            ctx.translate(x, y);\n            ctx.rotate(rad);\n            ctx.drawImage(style, -style.width / 2, -style.height / 2, style.width, style.height);\n            ctx.restore();\n            return;\n        }\n    }\n    if (isNaN(radius) || radius <= 0) {\n        return;\n    }\n    ctx.beginPath();\n    switch(style){\n        // Default includes circle\n        default:\n            if (w) {\n                ctx.ellipse(x, y, w / 2, radius, 0, 0, TAU);\n            } else {\n                ctx.arc(x, y, radius, 0, TAU);\n            }\n            ctx.closePath();\n            break;\n        case 'triangle':\n            width = w ? w / 2 : radius;\n            ctx.moveTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n            rad += TWO_THIRDS_PI;\n            ctx.lineTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n            rad += TWO_THIRDS_PI;\n            ctx.lineTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n            ctx.closePath();\n            break;\n        case 'rectRounded':\n            // NOTE: the rounded rect implementation changed to use `arc` instead of\n            // `quadraticCurveTo` since it generates better results when rect is\n            // almost a circle. 0.516 (instead of 0.5) produces results with visually\n            // closer proportion to the previous impl and it is inscribed in the\n            // circle with `radius`. For more details, see the following PRs:\n            // https://github.com/chartjs/Chart.js/issues/5597\n            // https://github.com/chartjs/Chart.js/issues/5858\n            cornerRadius = radius * 0.516;\n            size = radius - cornerRadius;\n            xOffset = Math.cos(rad + QUARTER_PI) * size;\n            xOffsetW = Math.cos(rad + QUARTER_PI) * (w ? w / 2 - cornerRadius : size);\n            yOffset = Math.sin(rad + QUARTER_PI) * size;\n            yOffsetW = Math.sin(rad + QUARTER_PI) * (w ? w / 2 - cornerRadius : size);\n            ctx.arc(x - xOffsetW, y - yOffset, cornerRadius, rad - PI, rad - HALF_PI);\n            ctx.arc(x + yOffsetW, y - xOffset, cornerRadius, rad - HALF_PI, rad);\n            ctx.arc(x + xOffsetW, y + yOffset, cornerRadius, rad, rad + HALF_PI);\n            ctx.arc(x - yOffsetW, y + xOffset, cornerRadius, rad + HALF_PI, rad + PI);\n            ctx.closePath();\n            break;\n        case 'rect':\n            if (!rotation) {\n                size = Math.SQRT1_2 * radius;\n                width = w ? w / 2 : size;\n                ctx.rect(x - width, y - size, 2 * width, 2 * size);\n                break;\n            }\n            rad += QUARTER_PI;\n        /* falls through */ case 'rectRot':\n            xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n            xOffset = Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n            ctx.moveTo(x - xOffsetW, y - yOffset);\n            ctx.lineTo(x + yOffsetW, y - xOffset);\n            ctx.lineTo(x + xOffsetW, y + yOffset);\n            ctx.lineTo(x - yOffsetW, y + xOffset);\n            ctx.closePath();\n            break;\n        case 'crossRot':\n            rad += QUARTER_PI;\n        /* falls through */ case 'cross':\n            xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n            xOffset = Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n            ctx.moveTo(x - xOffsetW, y - yOffset);\n            ctx.lineTo(x + xOffsetW, y + yOffset);\n            ctx.moveTo(x + yOffsetW, y - xOffset);\n            ctx.lineTo(x - yOffsetW, y + xOffset);\n            break;\n        case 'star':\n            xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n            xOffset = Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n            ctx.moveTo(x - xOffsetW, y - yOffset);\n            ctx.lineTo(x + xOffsetW, y + yOffset);\n            ctx.moveTo(x + yOffsetW, y - xOffset);\n            ctx.lineTo(x - yOffsetW, y + xOffset);\n            rad += QUARTER_PI;\n            xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n            xOffset = Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n            ctx.moveTo(x - xOffsetW, y - yOffset);\n            ctx.lineTo(x + xOffsetW, y + yOffset);\n            ctx.moveTo(x + yOffsetW, y - xOffset);\n            ctx.lineTo(x - yOffsetW, y + xOffset);\n            break;\n        case 'line':\n            xOffset = w ? w / 2 : Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            ctx.moveTo(x - xOffset, y - yOffset);\n            ctx.lineTo(x + xOffset, y + yOffset);\n            break;\n        case 'dash':\n            ctx.moveTo(x, y);\n            ctx.lineTo(x + Math.cos(rad) * (w ? w / 2 : radius), y + Math.sin(rad) * radius);\n            break;\n        case false:\n            ctx.closePath();\n            break;\n    }\n    ctx.fill();\n    if (options.borderWidth > 0) {\n        ctx.stroke();\n    }\n}\n/**\n * Returns true if the point is inside the rectangle\n * @param point - The point to test\n * @param area - The rectangle\n * @param margin - allowed margin\n * @private\n */ function _isPointInArea(point, area, margin) {\n    margin = margin || 0.5; // margin - default is to match rounded decimals\n    return !area || point && point.x > area.left - margin && point.x < area.right + margin && point.y > area.top - margin && point.y < area.bottom + margin;\n}\nfunction clipArea(ctx, area) {\n    ctx.save();\n    ctx.beginPath();\n    ctx.rect(area.left, area.top, area.right - area.left, area.bottom - area.top);\n    ctx.clip();\n}\nfunction unclipArea(ctx) {\n    ctx.restore();\n}\n/**\n * @private\n */ function _steppedLineTo(ctx, previous, target, flip, mode) {\n    if (!previous) {\n        return ctx.lineTo(target.x, target.y);\n    }\n    if (mode === 'middle') {\n        const midpoint = (previous.x + target.x) / 2.0;\n        ctx.lineTo(midpoint, previous.y);\n        ctx.lineTo(midpoint, target.y);\n    } else if (mode === 'after' !== !!flip) {\n        ctx.lineTo(previous.x, target.y);\n    } else {\n        ctx.lineTo(target.x, previous.y);\n    }\n    ctx.lineTo(target.x, target.y);\n}\n/**\n * @private\n */ function _bezierCurveTo(ctx, previous, target, flip) {\n    if (!previous) {\n        return ctx.lineTo(target.x, target.y);\n    }\n    ctx.bezierCurveTo(flip ? previous.cp1x : previous.cp2x, flip ? previous.cp1y : previous.cp2y, flip ? target.cp2x : target.cp1x, flip ? target.cp2y : target.cp1y, target.x, target.y);\n}\nfunction setRenderOpts(ctx, opts) {\n    if (opts.translation) {\n        ctx.translate(opts.translation[0], opts.translation[1]);\n    }\n    if (!isNullOrUndef(opts.rotation)) {\n        ctx.rotate(opts.rotation);\n    }\n    if (opts.color) {\n        ctx.fillStyle = opts.color;\n    }\n    if (opts.textAlign) {\n        ctx.textAlign = opts.textAlign;\n    }\n    if (opts.textBaseline) {\n        ctx.textBaseline = opts.textBaseline;\n    }\n}\nfunction decorateText(ctx, x, y, line, opts) {\n    if (opts.strikethrough || opts.underline) {\n        /**\n     * Now that IE11 support has been dropped, we can use more\n     * of the TextMetrics object. The actual bounding boxes\n     * are unflagged in Chrome, Firefox, Edge, and Safari so they\n     * can be safely used.\n     * See https://developer.mozilla.org/en-US/docs/Web/API/TextMetrics#Browser_compatibility\n     */ const metrics = ctx.measureText(line);\n        const left = x - metrics.actualBoundingBoxLeft;\n        const right = x + metrics.actualBoundingBoxRight;\n        const top = y - metrics.actualBoundingBoxAscent;\n        const bottom = y + metrics.actualBoundingBoxDescent;\n        const yDecoration = opts.strikethrough ? (top + bottom) / 2 : bottom;\n        ctx.strokeStyle = ctx.fillStyle;\n        ctx.beginPath();\n        ctx.lineWidth = opts.decorationWidth || 2;\n        ctx.moveTo(left, yDecoration);\n        ctx.lineTo(right, yDecoration);\n        ctx.stroke();\n    }\n}\nfunction drawBackdrop(ctx, opts) {\n    const oldColor = ctx.fillStyle;\n    ctx.fillStyle = opts.color;\n    ctx.fillRect(opts.left, opts.top, opts.width, opts.height);\n    ctx.fillStyle = oldColor;\n}\n/**\n * Render text onto the canvas\n */ function renderText(ctx, text, x, y, font, opts = {}) {\n    const lines = isArray(text) ? text : [\n        text\n    ];\n    const stroke = opts.strokeWidth > 0 && opts.strokeColor !== '';\n    let i, line;\n    ctx.save();\n    ctx.font = font.string;\n    setRenderOpts(ctx, opts);\n    for(i = 0; i < lines.length; ++i){\n        line = lines[i];\n        if (opts.backdrop) {\n            drawBackdrop(ctx, opts.backdrop);\n        }\n        if (stroke) {\n            if (opts.strokeColor) {\n                ctx.strokeStyle = opts.strokeColor;\n            }\n            if (!isNullOrUndef(opts.strokeWidth)) {\n                ctx.lineWidth = opts.strokeWidth;\n            }\n            ctx.strokeText(line, x, y, opts.maxWidth);\n        }\n        ctx.fillText(line, x, y, opts.maxWidth);\n        decorateText(ctx, x, y, line, opts);\n        y += Number(font.lineHeight);\n    }\n    ctx.restore();\n}\n/**\n * Add a path of a rectangle with rounded corners to the current sub-path\n * @param ctx - Context\n * @param rect - Bounding rect\n */ function addRoundedRectPath(ctx, rect) {\n    const { x , y , w , h , radius  } = rect;\n    // top left arc\n    ctx.arc(x + radius.topLeft, y + radius.topLeft, radius.topLeft, -HALF_PI, PI, true);\n    // line from top left to bottom left\n    ctx.lineTo(x, y + h - radius.bottomLeft);\n    // bottom left arc\n    ctx.arc(x + radius.bottomLeft, y + h - radius.bottomLeft, radius.bottomLeft, PI, HALF_PI, true);\n    // line from bottom left to bottom right\n    ctx.lineTo(x + w - radius.bottomRight, y + h);\n    // bottom right arc\n    ctx.arc(x + w - radius.bottomRight, y + h - radius.bottomRight, radius.bottomRight, HALF_PI, 0, true);\n    // line from bottom right to top right\n    ctx.lineTo(x + w, y + radius.topRight);\n    // top right arc\n    ctx.arc(x + w - radius.topRight, y + radius.topRight, radius.topRight, 0, -HALF_PI, true);\n    // line from top right to top left\n    ctx.lineTo(x + radius.topLeft, y);\n}\n\nconst LINE_HEIGHT = /^(normal|(\\d+(?:\\.\\d+)?)(px|em|%)?)$/;\nconst FONT_STYLE = /^(normal|italic|initial|inherit|unset|(oblique( -?[0-9]?[0-9]deg)?))$/;\n/**\n * @alias Chart.helpers.options\n * @namespace\n */ /**\n * Converts the given line height `value` in pixels for a specific font `size`.\n * @param value - The lineHeight to parse (eg. 1.6, '14px', '75%', '1.6em').\n * @param size - The font size (in pixels) used to resolve relative `value`.\n * @returns The effective line height in pixels (size * 1.2 if value is invalid).\n * @see https://developer.mozilla.org/en-US/docs/Web/CSS/line-height\n * @since 2.7.0\n */ function toLineHeight(value, size) {\n    const matches = ('' + value).match(LINE_HEIGHT);\n    if (!matches || matches[1] === 'normal') {\n        return size * 1.2;\n    }\n    value = +matches[2];\n    switch(matches[3]){\n        case 'px':\n            return value;\n        case '%':\n            value /= 100;\n            break;\n    }\n    return size * value;\n}\nconst numberOrZero = (v)=>+v || 0;\nfunction _readValueToProps(value, props) {\n    const ret = {};\n    const objProps = isObject(props);\n    const keys = objProps ? Object.keys(props) : props;\n    const read = isObject(value) ? objProps ? (prop)=>valueOrDefault(value[prop], value[props[prop]]) : (prop)=>value[prop] : ()=>value;\n    for (const prop of keys){\n        ret[prop] = numberOrZero(read(prop));\n    }\n    return ret;\n}\n/**\n * Converts the given value into a TRBL object.\n * @param value - If a number, set the value to all TRBL component,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n *  x / y are shorthands for same value for left/right and top/bottom.\n * @returns The padding values (top, right, bottom, left)\n * @since 3.0.0\n */ function toTRBL(value) {\n    return _readValueToProps(value, {\n        top: 'y',\n        right: 'x',\n        bottom: 'y',\n        left: 'x'\n    });\n}\n/**\n * Converts the given value into a TRBL corners object (similar with css border-radius).\n * @param value - If a number, set the value to all TRBL corner components,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n * @returns The TRBL corner values (topLeft, topRight, bottomLeft, bottomRight)\n * @since 3.0.0\n */ function toTRBLCorners(value) {\n    return _readValueToProps(value, [\n        'topLeft',\n        'topRight',\n        'bottomLeft',\n        'bottomRight'\n    ]);\n}\n/**\n * Converts the given value into a padding object with pre-computed width/height.\n * @param value - If a number, set the value to all TRBL component,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n *  x / y are shorthands for same value for left/right and top/bottom.\n * @returns The padding values (top, right, bottom, left, width, height)\n * @since 2.7.0\n */ function toPadding(value) {\n    const obj = toTRBL(value);\n    obj.width = obj.left + obj.right;\n    obj.height = obj.top + obj.bottom;\n    return obj;\n}\n/**\n * Parses font options and returns the font object.\n * @param options - A object that contains font options to be parsed.\n * @param fallback - A object that contains fallback font options.\n * @return The font object.\n * @private\n */ function toFont(options, fallback) {\n    options = options || {};\n    fallback = fallback || defaults.font;\n    let size = valueOrDefault(options.size, fallback.size);\n    if (typeof size === 'string') {\n        size = parseInt(size, 10);\n    }\n    let style = valueOrDefault(options.style, fallback.style);\n    if (style && !('' + style).match(FONT_STYLE)) {\n        console.warn('Invalid font style specified: \"' + style + '\"');\n        style = undefined;\n    }\n    const font = {\n        family: valueOrDefault(options.family, fallback.family),\n        lineHeight: toLineHeight(valueOrDefault(options.lineHeight, fallback.lineHeight), size),\n        size,\n        style,\n        weight: valueOrDefault(options.weight, fallback.weight),\n        string: ''\n    };\n    font.string = toFontString(font);\n    return font;\n}\n/**\n * Evaluates the given `inputs` sequentially and returns the first defined value.\n * @param inputs - An array of values, falling back to the last value.\n * @param context - If defined and the current value is a function, the value\n * is called with `context` as first argument and the result becomes the new input.\n * @param index - If defined and the current value is an array, the value\n * at `index` become the new input.\n * @param info - object to return information about resolution in\n * @param info.cacheable - Will be set to `false` if option is not cacheable.\n * @since 2.7.0\n */ function resolve(inputs, context, index, info) {\n    let cacheable = true;\n    let i, ilen, value;\n    for(i = 0, ilen = inputs.length; i < ilen; ++i){\n        value = inputs[i];\n        if (value === undefined) {\n            continue;\n        }\n        if (context !== undefined && typeof value === 'function') {\n            value = value(context);\n            cacheable = false;\n        }\n        if (index !== undefined && isArray(value)) {\n            value = value[index % value.length];\n            cacheable = false;\n        }\n        if (value !== undefined) {\n            if (info && !cacheable) {\n                info.cacheable = false;\n            }\n            return value;\n        }\n    }\n}\n/**\n * @param minmax\n * @param grace\n * @param beginAtZero\n * @private\n */ function _addGrace(minmax, grace, beginAtZero) {\n    const { min , max  } = minmax;\n    const change = toDimension(grace, (max - min) / 2);\n    const keepZero = (value, add)=>beginAtZero && value === 0 ? 0 : value + add;\n    return {\n        min: keepZero(min, -Math.abs(change)),\n        max: keepZero(max, change)\n    };\n}\nfunction createContext(parentContext, context) {\n    return Object.assign(Object.create(parentContext), context);\n}\n\n/**\n * Creates a Proxy for resolving raw values for options.\n * @param scopes - The option scopes to look for values, in resolution order\n * @param prefixes - The prefixes for values, in resolution order.\n * @param rootScopes - The root option scopes\n * @param fallback - Parent scopes fallback\n * @param getTarget - callback for getting the target for changed values\n * @returns Proxy\n * @private\n */ function _createResolver(scopes, prefixes = [\n    ''\n], rootScopes, fallback, getTarget = ()=>scopes[0]) {\n    const finalRootScopes = rootScopes || scopes;\n    if (typeof fallback === 'undefined') {\n        fallback = _resolve('_fallback', scopes);\n    }\n    const cache = {\n        [Symbol.toStringTag]: 'Object',\n        _cacheable: true,\n        _scopes: scopes,\n        _rootScopes: finalRootScopes,\n        _fallback: fallback,\n        _getTarget: getTarget,\n        override: (scope)=>_createResolver([\n                scope,\n                ...scopes\n            ], prefixes, finalRootScopes, fallback)\n    };\n    return new Proxy(cache, {\n        /**\n     * A trap for the delete operator.\n     */ deleteProperty (target, prop) {\n            delete target[prop]; // remove from cache\n            delete target._keys; // remove cached keys\n            delete scopes[0][prop]; // remove from top level scope\n            return true;\n        },\n        /**\n     * A trap for getting property values.\n     */ get (target, prop) {\n            return _cached(target, prop, ()=>_resolveWithPrefixes(prop, prefixes, scopes, target));\n        },\n        /**\n     * A trap for Object.getOwnPropertyDescriptor.\n     * Also used by Object.hasOwnProperty.\n     */ getOwnPropertyDescriptor (target, prop) {\n            return Reflect.getOwnPropertyDescriptor(target._scopes[0], prop);\n        },\n        /**\n     * A trap for Object.getPrototypeOf.\n     */ getPrototypeOf () {\n            return Reflect.getPrototypeOf(scopes[0]);\n        },\n        /**\n     * A trap for the in operator.\n     */ has (target, prop) {\n            return getKeysFromAllScopes(target).includes(prop);\n        },\n        /**\n     * A trap for Object.getOwnPropertyNames and Object.getOwnPropertySymbols.\n     */ ownKeys (target) {\n            return getKeysFromAllScopes(target);\n        },\n        /**\n     * A trap for setting property values.\n     */ set (target, prop, value) {\n            const storage = target._storage || (target._storage = getTarget());\n            target[prop] = storage[prop] = value; // set to top level scope + cache\n            delete target._keys; // remove cached keys\n            return true;\n        }\n    });\n}\n/**\n * Returns an Proxy for resolving option values with context.\n * @param proxy - The Proxy returned by `_createResolver`\n * @param context - Context object for scriptable/indexable options\n * @param subProxy - The proxy provided for scriptable options\n * @param descriptorDefaults - Defaults for descriptors\n * @private\n */ function _attachContext(proxy, context, subProxy, descriptorDefaults) {\n    const cache = {\n        _cacheable: false,\n        _proxy: proxy,\n        _context: context,\n        _subProxy: subProxy,\n        _stack: new Set(),\n        _descriptors: _descriptors(proxy, descriptorDefaults),\n        setContext: (ctx)=>_attachContext(proxy, ctx, subProxy, descriptorDefaults),\n        override: (scope)=>_attachContext(proxy.override(scope), context, subProxy, descriptorDefaults)\n    };\n    return new Proxy(cache, {\n        /**\n     * A trap for the delete operator.\n     */ deleteProperty (target, prop) {\n            delete target[prop]; // remove from cache\n            delete proxy[prop]; // remove from proxy\n            return true;\n        },\n        /**\n     * A trap for getting property values.\n     */ get (target, prop, receiver) {\n            return _cached(target, prop, ()=>_resolveWithContext(target, prop, receiver));\n        },\n        /**\n     * A trap for Object.getOwnPropertyDescriptor.\n     * Also used by Object.hasOwnProperty.\n     */ getOwnPropertyDescriptor (target, prop) {\n            return target._descriptors.allKeys ? Reflect.has(proxy, prop) ? {\n                enumerable: true,\n                configurable: true\n            } : undefined : Reflect.getOwnPropertyDescriptor(proxy, prop);\n        },\n        /**\n     * A trap for Object.getPrototypeOf.\n     */ getPrototypeOf () {\n            return Reflect.getPrototypeOf(proxy);\n        },\n        /**\n     * A trap for the in operator.\n     */ has (target, prop) {\n            return Reflect.has(proxy, prop);\n        },\n        /**\n     * A trap for Object.getOwnPropertyNames and Object.getOwnPropertySymbols.\n     */ ownKeys () {\n            return Reflect.ownKeys(proxy);\n        },\n        /**\n     * A trap for setting property values.\n     */ set (target, prop, value) {\n            proxy[prop] = value; // set to proxy\n            delete target[prop]; // remove from cache\n            return true;\n        }\n    });\n}\n/**\n * @private\n */ function _descriptors(proxy, defaults = {\n    scriptable: true,\n    indexable: true\n}) {\n    const { _scriptable =defaults.scriptable , _indexable =defaults.indexable , _allKeys =defaults.allKeys  } = proxy;\n    return {\n        allKeys: _allKeys,\n        scriptable: _scriptable,\n        indexable: _indexable,\n        isScriptable: isFunction(_scriptable) ? _scriptable : ()=>_scriptable,\n        isIndexable: isFunction(_indexable) ? _indexable : ()=>_indexable\n    };\n}\nconst readKey = (prefix, name)=>prefix ? prefix + _capitalize(name) : name;\nconst needsSubResolver = (prop, value)=>isObject(value) && prop !== 'adapters' && (Object.getPrototypeOf(value) === null || value.constructor === Object);\nfunction _cached(target, prop, resolve) {\n    if (Object.prototype.hasOwnProperty.call(target, prop)) {\n        return target[prop];\n    }\n    const value = resolve();\n    // cache the resolved value\n    target[prop] = value;\n    return value;\n}\nfunction _resolveWithContext(target, prop, receiver) {\n    const { _proxy , _context , _subProxy , _descriptors: descriptors  } = target;\n    let value = _proxy[prop]; // resolve from proxy\n    // resolve with context\n    if (isFunction(value) && descriptors.isScriptable(prop)) {\n        value = _resolveScriptable(prop, value, target, receiver);\n    }\n    if (isArray(value) && value.length) {\n        value = _resolveArray(prop, value, target, descriptors.isIndexable);\n    }\n    if (needsSubResolver(prop, value)) {\n        // if the resolved value is an object, create a sub resolver for it\n        value = _attachContext(value, _context, _subProxy && _subProxy[prop], descriptors);\n    }\n    return value;\n}\nfunction _resolveScriptable(prop, getValue, target, receiver) {\n    const { _proxy , _context , _subProxy , _stack  } = target;\n    if (_stack.has(prop)) {\n        throw new Error('Recursion detected: ' + Array.from(_stack).join('->') + '->' + prop);\n    }\n    _stack.add(prop);\n    let value = getValue(_context, _subProxy || receiver);\n    _stack.delete(prop);\n    if (needsSubResolver(prop, value)) {\n        // When scriptable option returns an object, create a resolver on that.\n        value = createSubResolver(_proxy._scopes, _proxy, prop, value);\n    }\n    return value;\n}\nfunction _resolveArray(prop, value, target, isIndexable) {\n    const { _proxy , _context , _subProxy , _descriptors: descriptors  } = target;\n    if (typeof _context.index !== 'undefined' && isIndexable(prop)) {\n        return value[_context.index % value.length];\n    } else if (isObject(value[0])) {\n        // Array of objects, return array or resolvers\n        const arr = value;\n        const scopes = _proxy._scopes.filter((s)=>s !== arr);\n        value = [];\n        for (const item of arr){\n            const resolver = createSubResolver(scopes, _proxy, prop, item);\n            value.push(_attachContext(resolver, _context, _subProxy && _subProxy[prop], descriptors));\n        }\n    }\n    return value;\n}\nfunction resolveFallback(fallback, prop, value) {\n    return isFunction(fallback) ? fallback(prop, value) : fallback;\n}\nconst getScope = (key, parent)=>key === true ? parent : typeof key === 'string' ? resolveObjectKey(parent, key) : undefined;\nfunction addScopes(set, parentScopes, key, parentFallback, value) {\n    for (const parent of parentScopes){\n        const scope = getScope(key, parent);\n        if (scope) {\n            set.add(scope);\n            const fallback = resolveFallback(scope._fallback, key, value);\n            if (typeof fallback !== 'undefined' && fallback !== key && fallback !== parentFallback) {\n                // When we reach the descriptor that defines a new _fallback, return that.\n                // The fallback will resume to that new scope.\n                return fallback;\n            }\n        } else if (scope === false && typeof parentFallback !== 'undefined' && key !== parentFallback) {\n            // Fallback to `false` results to `false`, when falling back to different key.\n            // For example `interaction` from `hover` or `plugins.tooltip` and `animation` from `animations`\n            return null;\n        }\n    }\n    return false;\n}\nfunction createSubResolver(parentScopes, resolver, prop, value) {\n    const rootScopes = resolver._rootScopes;\n    const fallback = resolveFallback(resolver._fallback, prop, value);\n    const allScopes = [\n        ...parentScopes,\n        ...rootScopes\n    ];\n    const set = new Set();\n    set.add(value);\n    let key = addScopesFromKey(set, allScopes, prop, fallback || prop, value);\n    if (key === null) {\n        return false;\n    }\n    if (typeof fallback !== 'undefined' && fallback !== prop) {\n        key = addScopesFromKey(set, allScopes, fallback, key, value);\n        if (key === null) {\n            return false;\n        }\n    }\n    return _createResolver(Array.from(set), [\n        ''\n    ], rootScopes, fallback, ()=>subGetTarget(resolver, prop, value));\n}\nfunction addScopesFromKey(set, allScopes, key, fallback, item) {\n    while(key){\n        key = addScopes(set, allScopes, key, fallback, item);\n    }\n    return key;\n}\nfunction subGetTarget(resolver, prop, value) {\n    const parent = resolver._getTarget();\n    if (!(prop in parent)) {\n        parent[prop] = {};\n    }\n    const target = parent[prop];\n    if (isArray(target) && isObject(value)) {\n        // For array of objects, the object is used to store updated values\n        return value;\n    }\n    return target || {};\n}\nfunction _resolveWithPrefixes(prop, prefixes, scopes, proxy) {\n    let value;\n    for (const prefix of prefixes){\n        value = _resolve(readKey(prefix, prop), scopes);\n        if (typeof value !== 'undefined') {\n            return needsSubResolver(prop, value) ? createSubResolver(scopes, proxy, prop, value) : value;\n        }\n    }\n}\nfunction _resolve(key, scopes) {\n    for (const scope of scopes){\n        if (!scope) {\n            continue;\n        }\n        const value = scope[key];\n        if (typeof value !== 'undefined') {\n            return value;\n        }\n    }\n}\nfunction getKeysFromAllScopes(target) {\n    let keys = target._keys;\n    if (!keys) {\n        keys = target._keys = resolveKeysFromAllScopes(target._scopes);\n    }\n    return keys;\n}\nfunction resolveKeysFromAllScopes(scopes) {\n    const set = new Set();\n    for (const scope of scopes){\n        for (const key of Object.keys(scope).filter((k)=>!k.startsWith('_'))){\n            set.add(key);\n        }\n    }\n    return Array.from(set);\n}\nfunction _parseObjectDataRadialScale(meta, data, start, count) {\n    const { iScale  } = meta;\n    const { key ='r'  } = this._parsing;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n    for(i = 0, ilen = count; i < ilen; ++i){\n        index = i + start;\n        item = data[index];\n        parsed[i] = {\n            r: iScale.parse(resolveObjectKey(item, key), index)\n        };\n    }\n    return parsed;\n}\n\nconst EPSILON = Number.EPSILON || 1e-14;\nconst getPoint = (points, i)=>i < points.length && !points[i].skip && points[i];\nconst getValueAxis = (indexAxis)=>indexAxis === 'x' ? 'y' : 'x';\nfunction splineCurve(firstPoint, middlePoint, afterPoint, t) {\n    // Props to Rob Spencer at scaled innovation for his post on splining between points\n    // http://scaledinnovation.com/analytics/splines/aboutSplines.html\n    // This function must also respect \"skipped\" points\n    const previous = firstPoint.skip ? middlePoint : firstPoint;\n    const current = middlePoint;\n    const next = afterPoint.skip ? middlePoint : afterPoint;\n    const d01 = distanceBetweenPoints(current, previous);\n    const d12 = distanceBetweenPoints(next, current);\n    let s01 = d01 / (d01 + d12);\n    let s12 = d12 / (d01 + d12);\n    // If all points are the same, s01 & s02 will be inf\n    s01 = isNaN(s01) ? 0 : s01;\n    s12 = isNaN(s12) ? 0 : s12;\n    const fa = t * s01; // scaling factor for triangle Ta\n    const fb = t * s12;\n    return {\n        previous: {\n            x: current.x - fa * (next.x - previous.x),\n            y: current.y - fa * (next.y - previous.y)\n        },\n        next: {\n            x: current.x + fb * (next.x - previous.x),\n            y: current.y + fb * (next.y - previous.y)\n        }\n    };\n}\n/**\n * Adjust tangents to ensure monotonic properties\n */ function monotoneAdjust(points, deltaK, mK) {\n    const pointsLen = points.length;\n    let alphaK, betaK, tauK, squaredMagnitude, pointCurrent;\n    let pointAfter = getPoint(points, 0);\n    for(let i = 0; i < pointsLen - 1; ++i){\n        pointCurrent = pointAfter;\n        pointAfter = getPoint(points, i + 1);\n        if (!pointCurrent || !pointAfter) {\n            continue;\n        }\n        if (almostEquals(deltaK[i], 0, EPSILON)) {\n            mK[i] = mK[i + 1] = 0;\n            continue;\n        }\n        alphaK = mK[i] / deltaK[i];\n        betaK = mK[i + 1] / deltaK[i];\n        squaredMagnitude = Math.pow(alphaK, 2) + Math.pow(betaK, 2);\n        if (squaredMagnitude <= 9) {\n            continue;\n        }\n        tauK = 3 / Math.sqrt(squaredMagnitude);\n        mK[i] = alphaK * tauK * deltaK[i];\n        mK[i + 1] = betaK * tauK * deltaK[i];\n    }\n}\nfunction monotoneCompute(points, mK, indexAxis = 'x') {\n    const valueAxis = getValueAxis(indexAxis);\n    const pointsLen = points.length;\n    let delta, pointBefore, pointCurrent;\n    let pointAfter = getPoint(points, 0);\n    for(let i = 0; i < pointsLen; ++i){\n        pointBefore = pointCurrent;\n        pointCurrent = pointAfter;\n        pointAfter = getPoint(points, i + 1);\n        if (!pointCurrent) {\n            continue;\n        }\n        const iPixel = pointCurrent[indexAxis];\n        const vPixel = pointCurrent[valueAxis];\n        if (pointBefore) {\n            delta = (iPixel - pointBefore[indexAxis]) / 3;\n            pointCurrent[`cp1${indexAxis}`] = iPixel - delta;\n            pointCurrent[`cp1${valueAxis}`] = vPixel - delta * mK[i];\n        }\n        if (pointAfter) {\n            delta = (pointAfter[indexAxis] - iPixel) / 3;\n            pointCurrent[`cp2${indexAxis}`] = iPixel + delta;\n            pointCurrent[`cp2${valueAxis}`] = vPixel + delta * mK[i];\n        }\n    }\n}\n/**\n * This function calculates B√©zier control points in a similar way than |splineCurve|,\n * but preserves monotonicity of the provided data and ensures no local extremums are added\n * between the dataset discrete points due to the interpolation.\n * See : https://en.wikipedia.org/wiki/Monotone_cubic_interpolation\n */ function splineCurveMonotone(points, indexAxis = 'x') {\n    const valueAxis = getValueAxis(indexAxis);\n    const pointsLen = points.length;\n    const deltaK = Array(pointsLen).fill(0);\n    const mK = Array(pointsLen);\n    // Calculate slopes (deltaK) and initialize tangents (mK)\n    let i, pointBefore, pointCurrent;\n    let pointAfter = getPoint(points, 0);\n    for(i = 0; i < pointsLen; ++i){\n        pointBefore = pointCurrent;\n        pointCurrent = pointAfter;\n        pointAfter = getPoint(points, i + 1);\n        if (!pointCurrent) {\n            continue;\n        }\n        if (pointAfter) {\n            const slopeDelta = pointAfter[indexAxis] - pointCurrent[indexAxis];\n            // In the case of two points that appear at the same x pixel, slopeDeltaX is 0\n            deltaK[i] = slopeDelta !== 0 ? (pointAfter[valueAxis] - pointCurrent[valueAxis]) / slopeDelta : 0;\n        }\n        mK[i] = !pointBefore ? deltaK[i] : !pointAfter ? deltaK[i - 1] : sign(deltaK[i - 1]) !== sign(deltaK[i]) ? 0 : (deltaK[i - 1] + deltaK[i]) / 2;\n    }\n    monotoneAdjust(points, deltaK, mK);\n    monotoneCompute(points, mK, indexAxis);\n}\nfunction capControlPoint(pt, min, max) {\n    return Math.max(Math.min(pt, max), min);\n}\nfunction capBezierPoints(points, area) {\n    let i, ilen, point, inArea, inAreaPrev;\n    let inAreaNext = _isPointInArea(points[0], area);\n    for(i = 0, ilen = points.length; i < ilen; ++i){\n        inAreaPrev = inArea;\n        inArea = inAreaNext;\n        inAreaNext = i < ilen - 1 && _isPointInArea(points[i + 1], area);\n        if (!inArea) {\n            continue;\n        }\n        point = points[i];\n        if (inAreaPrev) {\n            point.cp1x = capControlPoint(point.cp1x, area.left, area.right);\n            point.cp1y = capControlPoint(point.cp1y, area.top, area.bottom);\n        }\n        if (inAreaNext) {\n            point.cp2x = capControlPoint(point.cp2x, area.left, area.right);\n            point.cp2y = capControlPoint(point.cp2y, area.top, area.bottom);\n        }\n    }\n}\n/**\n * @private\n */ function _updateBezierControlPoints(points, options, area, loop, indexAxis) {\n    let i, ilen, point, controlPoints;\n    // Only consider points that are drawn in case the spanGaps option is used\n    if (options.spanGaps) {\n        points = points.filter((pt)=>!pt.skip);\n    }\n    if (options.cubicInterpolationMode === 'monotone') {\n        splineCurveMonotone(points, indexAxis);\n    } else {\n        let prev = loop ? points[points.length - 1] : points[0];\n        for(i = 0, ilen = points.length; i < ilen; ++i){\n            point = points[i];\n            controlPoints = splineCurve(prev, point, points[Math.min(i + 1, ilen - (loop ? 0 : 1)) % ilen], options.tension);\n            point.cp1x = controlPoints.previous.x;\n            point.cp1y = controlPoints.previous.y;\n            point.cp2x = controlPoints.next.x;\n            point.cp2y = controlPoints.next.y;\n            prev = point;\n        }\n    }\n    if (options.capBezierPoints) {\n        capBezierPoints(points, area);\n    }\n}\n\n/**\n * Note: typedefs are auto-exported, so use a made-up `dom` namespace where\n * necessary to avoid duplicates with `export * from './helpers`; see\n * https://github.com/microsoft/TypeScript/issues/46011\n * @typedef { import('../core/core.controller.js').default } dom.Chart\n * @typedef { import('../../types').ChartEvent } ChartEvent\n */ /**\n * @private\n */ function _isDomSupported() {\n    return typeof window !== 'undefined' && typeof document !== 'undefined';\n}\n/**\n * @private\n */ function _getParentNode(domNode) {\n    let parent = domNode.parentNode;\n    if (parent && parent.toString() === '[object ShadowRoot]') {\n        parent = parent.host;\n    }\n    return parent;\n}\n/**\n * convert max-width/max-height values that may be percentages into a number\n * @private\n */ function parseMaxStyle(styleValue, node, parentProperty) {\n    let valueInPixels;\n    if (typeof styleValue === 'string') {\n        valueInPixels = parseInt(styleValue, 10);\n        if (styleValue.indexOf('%') !== -1) {\n            // percentage * size in dimension\n            valueInPixels = valueInPixels / 100 * node.parentNode[parentProperty];\n        }\n    } else {\n        valueInPixels = styleValue;\n    }\n    return valueInPixels;\n}\nconst getComputedStyle = (element)=>element.ownerDocument.defaultView.getComputedStyle(element, null);\nfunction getStyle(el, property) {\n    return getComputedStyle(el).getPropertyValue(property);\n}\nconst positions = [\n    'top',\n    'right',\n    'bottom',\n    'left'\n];\nfunction getPositionedStyle(styles, style, suffix) {\n    const result = {};\n    suffix = suffix ? '-' + suffix : '';\n    for(let i = 0; i < 4; i++){\n        const pos = positions[i];\n        result[pos] = parseFloat(styles[style + '-' + pos + suffix]) || 0;\n    }\n    result.width = result.left + result.right;\n    result.height = result.top + result.bottom;\n    return result;\n}\nconst useOffsetPos = (x, y, target)=>(x > 0 || y > 0) && (!target || !target.shadowRoot);\n/**\n * @param e\n * @param canvas\n * @returns Canvas position\n */ function getCanvasPosition(e, canvas) {\n    const touches = e.touches;\n    const source = touches && touches.length ? touches[0] : e;\n    const { offsetX , offsetY  } = source;\n    let box = false;\n    let x, y;\n    if (useOffsetPos(offsetX, offsetY, e.target)) {\n        x = offsetX;\n        y = offsetY;\n    } else {\n        const rect = canvas.getBoundingClientRect();\n        x = source.clientX - rect.left;\n        y = source.clientY - rect.top;\n        box = true;\n    }\n    return {\n        x,\n        y,\n        box\n    };\n}\n/**\n * Gets an event's x, y coordinates, relative to the chart area\n * @param event\n * @param chart\n * @returns x and y coordinates of the event\n */ function getRelativePosition(event, chart) {\n    if ('native' in event) {\n        return event;\n    }\n    const { canvas , currentDevicePixelRatio  } = chart;\n    const style = getComputedStyle(canvas);\n    const borderBox = style.boxSizing === 'border-box';\n    const paddings = getPositionedStyle(style, 'padding');\n    const borders = getPositionedStyle(style, 'border', 'width');\n    const { x , y , box  } = getCanvasPosition(event, canvas);\n    const xOffset = paddings.left + (box && borders.left);\n    const yOffset = paddings.top + (box && borders.top);\n    let { width , height  } = chart;\n    if (borderBox) {\n        width -= paddings.width + borders.width;\n        height -= paddings.height + borders.height;\n    }\n    return {\n        x: Math.round((x - xOffset) / width * canvas.width / currentDevicePixelRatio),\n        y: Math.round((y - yOffset) / height * canvas.height / currentDevicePixelRatio)\n    };\n}\nfunction getContainerSize(canvas, width, height) {\n    let maxWidth, maxHeight;\n    if (width === undefined || height === undefined) {\n        const container = _getParentNode(canvas);\n        if (!container) {\n            width = canvas.clientWidth;\n            height = canvas.clientHeight;\n        } else {\n            const rect = container.getBoundingClientRect(); // this is the border box of the container\n            const containerStyle = getComputedStyle(container);\n            const containerBorder = getPositionedStyle(containerStyle, 'border', 'width');\n            const containerPadding = getPositionedStyle(containerStyle, 'padding');\n            width = rect.width - containerPadding.width - containerBorder.width;\n            height = rect.height - containerPadding.height - containerBorder.height;\n            maxWidth = parseMaxStyle(containerStyle.maxWidth, container, 'clientWidth');\n            maxHeight = parseMaxStyle(containerStyle.maxHeight, container, 'clientHeight');\n        }\n    }\n    return {\n        width,\n        height,\n        maxWidth: maxWidth || INFINITY,\n        maxHeight: maxHeight || INFINITY\n    };\n}\nconst round1 = (v)=>Math.round(v * 10) / 10;\n// eslint-disable-next-line complexity\nfunction getMaximumSize(canvas, bbWidth, bbHeight, aspectRatio) {\n    const style = getComputedStyle(canvas);\n    const margins = getPositionedStyle(style, 'margin');\n    const maxWidth = parseMaxStyle(style.maxWidth, canvas, 'clientWidth') || INFINITY;\n    const maxHeight = parseMaxStyle(style.maxHeight, canvas, 'clientHeight') || INFINITY;\n    const containerSize = getContainerSize(canvas, bbWidth, bbHeight);\n    let { width , height  } = containerSize;\n    if (style.boxSizing === 'content-box') {\n        const borders = getPositionedStyle(style, 'border', 'width');\n        const paddings = getPositionedStyle(style, 'padding');\n        width -= paddings.width + borders.width;\n        height -= paddings.height + borders.height;\n    }\n    width = Math.max(0, width - margins.width);\n    height = Math.max(0, aspectRatio ? width / aspectRatio : height - margins.height);\n    width = round1(Math.min(width, maxWidth, containerSize.maxWidth));\n    height = round1(Math.min(height, maxHeight, containerSize.maxHeight));\n    if (width && !height) {\n        // https://github.com/chartjs/Chart.js/issues/4659\n        // If the canvas has width, but no height, default to aspectRatio of 2 (canvas default)\n        height = round1(width / 2);\n    }\n    const maintainHeight = bbWidth !== undefined || bbHeight !== undefined;\n    if (maintainHeight && aspectRatio && containerSize.height && height > containerSize.height) {\n        height = containerSize.height;\n        width = round1(Math.floor(height * aspectRatio));\n    }\n    return {\n        width,\n        height\n    };\n}\n/**\n * @param chart\n * @param forceRatio\n * @param forceStyle\n * @returns True if the canvas context size or transformation has changed.\n */ function retinaScale(chart, forceRatio, forceStyle) {\n    const pixelRatio = forceRatio || 1;\n    const deviceHeight = Math.floor(chart.height * pixelRatio);\n    const deviceWidth = Math.floor(chart.width * pixelRatio);\n    chart.height = Math.floor(chart.height);\n    chart.width = Math.floor(chart.width);\n    const canvas = chart.canvas;\n    // If no style has been set on the canvas, the render size is used as display size,\n    // making the chart visually bigger, so let's enforce it to the \"correct\" values.\n    // See https://github.com/chartjs/Chart.js/issues/3575\n    if (canvas.style && (forceStyle || !canvas.style.height && !canvas.style.width)) {\n        canvas.style.height = `${chart.height}px`;\n        canvas.style.width = `${chart.width}px`;\n    }\n    if (chart.currentDevicePixelRatio !== pixelRatio || canvas.height !== deviceHeight || canvas.width !== deviceWidth) {\n        chart.currentDevicePixelRatio = pixelRatio;\n        canvas.height = deviceHeight;\n        canvas.width = deviceWidth;\n        chart.ctx.setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0);\n        return true;\n    }\n    return false;\n}\n/**\n * Detects support for options object argument in addEventListener.\n * https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener#Safely_detecting_option_support\n * @private\n */ const supportsEventListenerOptions = function() {\n    let passiveSupported = false;\n    try {\n        const options = {\n            get passive () {\n                passiveSupported = true;\n                return false;\n            }\n        };\n        window.addEventListener('test', null, options);\n        window.removeEventListener('test', null, options);\n    } catch (e) {\n    // continue regardless of error\n    }\n    return passiveSupported;\n}();\n/**\n * The \"used\" size is the final value of a dimension property after all calculations have\n * been performed. This method uses the computed style of `element` but returns undefined\n * if the computed style is not expressed in pixels. That can happen in some cases where\n * `element` has a size relative to its parent and this last one is not yet displayed,\n * for example because of `display: none` on a parent node.\n * @see https://developer.mozilla.org/en-US/docs/Web/CSS/used_value\n * @returns Size in pixels or undefined if unknown.\n */ function readUsedSize(element, property) {\n    const value = getStyle(element, property);\n    const matches = value && value.match(/^(\\d+)(\\.\\d+)?px$/);\n    return matches ? +matches[1] : undefined;\n}\n\n/**\n * @private\n */ function _pointInLine(p1, p2, t, mode) {\n    return {\n        x: p1.x + t * (p2.x - p1.x),\n        y: p1.y + t * (p2.y - p1.y)\n    };\n}\n/**\n * @private\n */ function _steppedInterpolation(p1, p2, t, mode) {\n    return {\n        x: p1.x + t * (p2.x - p1.x),\n        y: mode === 'middle' ? t < 0.5 ? p1.y : p2.y : mode === 'after' ? t < 1 ? p1.y : p2.y : t > 0 ? p2.y : p1.y\n    };\n}\n/**\n * @private\n */ function _bezierInterpolation(p1, p2, t, mode) {\n    const cp1 = {\n        x: p1.cp2x,\n        y: p1.cp2y\n    };\n    const cp2 = {\n        x: p2.cp1x,\n        y: p2.cp1y\n    };\n    const a = _pointInLine(p1, cp1, t);\n    const b = _pointInLine(cp1, cp2, t);\n    const c = _pointInLine(cp2, p2, t);\n    const d = _pointInLine(a, b, t);\n    const e = _pointInLine(b, c, t);\n    return _pointInLine(d, e, t);\n}\n\nconst getRightToLeftAdapter = function(rectX, width) {\n    return {\n        x (x) {\n            return rectX + rectX + width - x;\n        },\n        setWidth (w) {\n            width = w;\n        },\n        textAlign (align) {\n            if (align === 'center') {\n                return align;\n            }\n            return align === 'right' ? 'left' : 'right';\n        },\n        xPlus (x, value) {\n            return x - value;\n        },\n        leftForLtr (x, itemWidth) {\n            return x - itemWidth;\n        }\n    };\n};\nconst getLeftToRightAdapter = function() {\n    return {\n        x (x) {\n            return x;\n        },\n        setWidth (w) {},\n        textAlign (align) {\n            return align;\n        },\n        xPlus (x, value) {\n            return x + value;\n        },\n        leftForLtr (x, _itemWidth) {\n            return x;\n        }\n    };\n};\nfunction getRtlAdapter(rtl, rectX, width) {\n    return rtl ? getRightToLeftAdapter(rectX, width) : getLeftToRightAdapter();\n}\nfunction overrideTextDirection(ctx, direction) {\n    let style, original;\n    if (direction === 'ltr' || direction === 'rtl') {\n        style = ctx.canvas.style;\n        original = [\n            style.getPropertyValue('direction'),\n            style.getPropertyPriority('direction')\n        ];\n        style.setProperty('direction', direction, 'important');\n        ctx.prevTextDirection = original;\n    }\n}\nfunction restoreTextDirection(ctx, original) {\n    if (original !== undefined) {\n        delete ctx.prevTextDirection;\n        ctx.canvas.style.setProperty('direction', original[0], original[1]);\n    }\n}\n\nfunction propertyFn(property) {\n    if (property === 'angle') {\n        return {\n            between: _angleBetween,\n            compare: _angleDiff,\n            normalize: _normalizeAngle\n        };\n    }\n    return {\n        between: _isBetween,\n        compare: (a, b)=>a - b,\n        normalize: (x)=>x\n    };\n}\nfunction normalizeSegment({ start , end , count , loop , style  }) {\n    return {\n        start: start % count,\n        end: end % count,\n        loop: loop && (end - start + 1) % count === 0,\n        style\n    };\n}\nfunction getSegment(segment, points, bounds) {\n    const { property , start: startBound , end: endBound  } = bounds;\n    const { between , normalize  } = propertyFn(property);\n    const count = points.length;\n    let { start , end , loop  } = segment;\n    let i, ilen;\n    if (loop) {\n        start += count;\n        end += count;\n        for(i = 0, ilen = count; i < ilen; ++i){\n            if (!between(normalize(points[start % count][property]), startBound, endBound)) {\n                break;\n            }\n            start--;\n            end--;\n        }\n        start %= count;\n        end %= count;\n    }\n    if (end < start) {\n        end += count;\n    }\n    return {\n        start,\n        end,\n        loop,\n        style: segment.style\n    };\n}\n function _boundSegment(segment, points, bounds) {\n    if (!bounds) {\n        return [\n            segment\n        ];\n    }\n    const { property , start: startBound , end: endBound  } = bounds;\n    const count = points.length;\n    const { compare , between , normalize  } = propertyFn(property);\n    const { start , end , loop , style  } = getSegment(segment, points, bounds);\n    const result = [];\n    let inside = false;\n    let subStart = null;\n    let value, point, prevValue;\n    const startIsBefore = ()=>between(startBound, prevValue, value) && compare(startBound, prevValue) !== 0;\n    const endIsBefore = ()=>compare(endBound, value) === 0 || between(endBound, prevValue, value);\n    const shouldStart = ()=>inside || startIsBefore();\n    const shouldStop = ()=>!inside || endIsBefore();\n    for(let i = start, prev = start; i <= end; ++i){\n        point = points[i % count];\n        if (point.skip) {\n            continue;\n        }\n        value = normalize(point[property]);\n        if (value === prevValue) {\n            continue;\n        }\n        inside = between(value, startBound, endBound);\n        if (subStart === null && shouldStart()) {\n            subStart = compare(value, startBound) === 0 ? i : prev;\n        }\n        if (subStart !== null && shouldStop()) {\n            result.push(normalizeSegment({\n                start: subStart,\n                end: i,\n                loop,\n                count,\n                style\n            }));\n            subStart = null;\n        }\n        prev = i;\n        prevValue = value;\n    }\n    if (subStart !== null) {\n        result.push(normalizeSegment({\n            start: subStart,\n            end,\n            loop,\n            count,\n            style\n        }));\n    }\n    return result;\n}\n function _boundSegments(line, bounds) {\n    const result = [];\n    const segments = line.segments;\n    for(let i = 0; i < segments.length; i++){\n        const sub = _boundSegment(segments[i], line.points, bounds);\n        if (sub.length) {\n            result.push(...sub);\n        }\n    }\n    return result;\n}\n function findStartAndEnd(points, count, loop, spanGaps) {\n    let start = 0;\n    let end = count - 1;\n    if (loop && !spanGaps) {\n        while(start < count && !points[start].skip){\n            start++;\n        }\n    }\n    while(start < count && points[start].skip){\n        start++;\n    }\n    start %= count;\n    if (loop) {\n        end += start;\n    }\n    while(end > start && points[end % count].skip){\n        end--;\n    }\n    end %= count;\n    return {\n        start,\n        end\n    };\n}\n function solidSegments(points, start, max, loop) {\n    const count = points.length;\n    const result = [];\n    let last = start;\n    let prev = points[start];\n    let end;\n    for(end = start + 1; end <= max; ++end){\n        const cur = points[end % count];\n        if (cur.skip || cur.stop) {\n            if (!prev.skip) {\n                loop = false;\n                result.push({\n                    start: start % count,\n                    end: (end - 1) % count,\n                    loop\n                });\n                start = last = cur.stop ? end : null;\n            }\n        } else {\n            last = end;\n            if (prev.skip) {\n                start = end;\n            }\n        }\n        prev = cur;\n    }\n    if (last !== null) {\n        result.push({\n            start: start % count,\n            end: last % count,\n            loop\n        });\n    }\n    return result;\n}\n function _computeSegments(line, segmentOptions) {\n    const points = line.points;\n    const spanGaps = line.options.spanGaps;\n    const count = points.length;\n    if (!count) {\n        return [];\n    }\n    const loop = !!line._loop;\n    const { start , end  } = findStartAndEnd(points, count, loop, spanGaps);\n    if (spanGaps === true) {\n        return splitByStyles(line, [\n            {\n                start,\n                end,\n                loop\n            }\n        ], points, segmentOptions);\n    }\n    const max = end < start ? end + count : end;\n    const completeLoop = !!line._fullLoop && start === 0 && end === count - 1;\n    return splitByStyles(line, solidSegments(points, start, max, completeLoop), points, segmentOptions);\n}\n function splitByStyles(line, segments, points, segmentOptions) {\n    if (!segmentOptions || !segmentOptions.setContext || !points) {\n        return segments;\n    }\n    return doSplitByStyles(line, segments, points, segmentOptions);\n}\n function doSplitByStyles(line, segments, points, segmentOptions) {\n    const chartContext = line._chart.getContext();\n    const baseStyle = readStyle(line.options);\n    const { _datasetIndex: datasetIndex , options: { spanGaps  }  } = line;\n    const count = points.length;\n    const result = [];\n    let prevStyle = baseStyle;\n    let start = segments[0].start;\n    let i = start;\n    function addStyle(s, e, l, st) {\n        const dir = spanGaps ? -1 : 1;\n        if (s === e) {\n            return;\n        }\n        s += count;\n        while(points[s % count].skip){\n            s -= dir;\n        }\n        while(points[e % count].skip){\n            e += dir;\n        }\n        if (s % count !== e % count) {\n            result.push({\n                start: s % count,\n                end: e % count,\n                loop: l,\n                style: st\n            });\n            prevStyle = st;\n            start = e % count;\n        }\n    }\n    for (const segment of segments){\n        start = spanGaps ? start : segment.start;\n        let prev = points[start % count];\n        let style;\n        for(i = start + 1; i <= segment.end; i++){\n            const pt = points[i % count];\n            style = readStyle(segmentOptions.setContext(createContext(chartContext, {\n                type: 'segment',\n                p0: prev,\n                p1: pt,\n                p0DataIndex: (i - 1) % count,\n                p1DataIndex: i % count,\n                datasetIndex\n            })));\n            if (styleChanged(style, prevStyle)) {\n                addStyle(start, i - 1, segment.loop, prevStyle);\n            }\n            prev = pt;\n            prevStyle = style;\n        }\n        if (start < i - 1) {\n            addStyle(start, i - 1, segment.loop, prevStyle);\n        }\n    }\n    return result;\n}\nfunction readStyle(options) {\n    return {\n        backgroundColor: options.backgroundColor,\n        borderCapStyle: options.borderCapStyle,\n        borderDash: options.borderDash,\n        borderDashOffset: options.borderDashOffset,\n        borderJoinStyle: options.borderJoinStyle,\n        borderWidth: options.borderWidth,\n        borderColor: options.borderColor\n    };\n}\nfunction styleChanged(style, prevStyle) {\n    if (!prevStyle) {\n        return false;\n    }\n    const cache = [];\n    const replacer = function(key, value) {\n        if (!isPatternOrGradient(value)) {\n            return value;\n        }\n        if (!cache.includes(value)) {\n            cache.push(value);\n        }\n        return cache.indexOf(value);\n    };\n    return JSON.stringify(style, replacer) !== JSON.stringify(prevStyle, replacer);\n}\n\nexport { unclipArea as $, _rlookupByKey as A, _lookupByKey as B, _isPointInArea as C, getAngleFromPoint as D, toPadding as E, each as F, getMaximumSize as G, HALF_PI as H, _getParentNode as I, readUsedSize as J, supportsEventListenerOptions as K, throttled as L, _isDomSupported as M, _factorize as N, finiteOrDefault as O, PI as P, callback as Q, _addGrace as R, _limitValue as S, TAU as T, toDegrees as U, _measureText as V, _int16Range as W, _alignPixel as X, clipArea as Y, renderText as Z, _arrayUnique as _, resolve as a, fontString as a$, toFont as a0, _toLeftRightCenter as a1, _alignStartEnd as a2, overrides as a3, merge as a4, _capitalize as a5, descriptors as a6, isFunction as a7, _attachContext as a8, _createResolver as a9, overrideTextDirection as aA, _textX as aB, restoreTextDirection as aC, drawPointLegend as aD, distanceBetweenPoints as aE, noop as aF, _setMinAndMaxByKey as aG, niceNum as aH, almostWhole as aI, almostEquals as aJ, _decimalPlaces as aK, Ticks as aL, log10 as aM, _longestText as aN, _filterBetween as aO, _lookup as aP, isPatternOrGradient as aQ, getHoverColor as aR, clone as aS, _merger as aT, _mergerIf as aU, _deprecated as aV, _splitKey as aW, toFontString as aX, splineCurve as aY, splineCurveMonotone as aZ, getStyle as a_, _descriptors as aa, mergeIf as ab, uid as ac, debounce as ad, retinaScale as ae, clearCanvas as af, setsEqual as ag, _elementsEqual as ah, _isClickEvent as ai, _isBetween as aj, _readValueToProps as ak, _updateBezierControlPoints as al, _computeSegments as am, _boundSegments as an, _steppedInterpolation as ao, _bezierInterpolation as ap, _pointInLine as aq, _steppedLineTo as ar, _bezierCurveTo as as, drawPoint as at, addRoundedRectPath as au, toTRBL as av, toTRBLCorners as aw, _boundSegment as ax, _normalizeAngle as ay, getRtlAdapter as az, isArray as b, toLineHeight as b0, PITAU as b1, INFINITY as b2, RAD_PER_DEG as b3, QUARTER_PI as b4, TWO_THIRDS_PI as b5, _angleDiff as b6, color as c, defaults as d, effects as e, resolveObjectKey as f, isNumberFinite as g, defined as h, isObject as i, createContext as j, isNullOrUndef as k, listenArrayEvents as l, toPercentage as m, toDimension as n, formatNumber as o, _angleBetween as p, _getStartAndCountOfVisiblePoints as q, requestAnimFrame as r, sign as s, toRadians as t, unlistenArrayEvents as u, valueOrDefault as v, _scaleRangesChanged as w, isNumber as x, _parseObjectDataRadialScale as y, getRelativePosition as z };\n//# sourceMappingURL=helpers.segment.js.map\n","/*!\n * Chart.js v4.3.0\n * https://www.chartjs.org\n * (c) 2023 Chart.js Contributors\n * Released under the MIT License\n */\nimport { r as requestAnimFrame, a as resolve, e as effects, c as color, i as isObject, d as defaults, b as isArray, v as valueOrDefault, u as unlistenArrayEvents, l as listenArrayEvents, f as resolveObjectKey, g as isNumberFinite, h as defined, s as sign, j as createContext, k as isNullOrUndef, _ as _arrayUnique, t as toRadians, m as toPercentage, n as toDimension, T as TAU, o as formatNumber, p as _angleBetween, H as HALF_PI, P as PI, q as _getStartAndCountOfVisiblePoints, w as _scaleRangesChanged, x as isNumber, y as _parseObjectDataRadialScale, z as getRelativePosition, A as _rlookupByKey, B as _lookupByKey, C as _isPointInArea, D as getAngleFromPoint, E as toPadding, F as each, G as getMaximumSize, I as _getParentNode, J as readUsedSize, K as supportsEventListenerOptions, L as throttled, M as _isDomSupported, N as _factorize, O as finiteOrDefault, Q as callback, R as _addGrace, S as _limitValue, U as toDegrees, V as _measureText, W as _int16Range, X as _alignPixel, Y as clipArea, Z as renderText, $ as unclipArea, a0 as toFont, a1 as _toLeftRightCenter, a2 as _alignStartEnd, a3 as overrides, a4 as merge, a5 as _capitalize, a6 as descriptors, a7 as isFunction, a8 as _attachContext, a9 as _createResolver, aa as _descriptors, ab as mergeIf, ac as uid, ad as debounce, ae as retinaScale, af as clearCanvas, ag as setsEqual, ah as _elementsEqual, ai as _isClickEvent, aj as _isBetween, ak as _readValueToProps, al as _updateBezierControlPoints, am as _computeSegments, an as _boundSegments, ao as _steppedInterpolation, ap as _bezierInterpolation, aq as _pointInLine, ar as _steppedLineTo, as as _bezierCurveTo, at as drawPoint, au as addRoundedRectPath, av as toTRBL, aw as toTRBLCorners, ax as _boundSegment, ay as _normalizeAngle, az as getRtlAdapter, aA as overrideTextDirection, aB as _textX, aC as restoreTextDirection, aD as drawPointLegend, aE as distanceBetweenPoints, aF as noop, aG as _setMinAndMaxByKey, aH as niceNum, aI as almostWhole, aJ as almostEquals, aK as _decimalPlaces, aL as Ticks, aM as log10, aN as _longestText, aO as _filterBetween, aP as _lookup } from './chunks/helpers.segment.js';\nimport '@kurkle/color';\n\nclass Animator {\n    constructor(){\n        this._request = null;\n        this._charts = new Map();\n        this._running = false;\n        this._lastDate = undefined;\n    }\n _notify(chart, anims, date, type) {\n        const callbacks = anims.listeners[type];\n        const numSteps = anims.duration;\n        callbacks.forEach((fn)=>fn({\n                chart,\n                initial: anims.initial,\n                numSteps,\n                currentStep: Math.min(date - anims.start, numSteps)\n            }));\n    }\n _refresh() {\n        if (this._request) {\n            return;\n        }\n        this._running = true;\n        this._request = requestAnimFrame.call(window, ()=>{\n            this._update();\n            this._request = null;\n            if (this._running) {\n                this._refresh();\n            }\n        });\n    }\n _update(date = Date.now()) {\n        let remaining = 0;\n        this._charts.forEach((anims, chart)=>{\n            if (!anims.running || !anims.items.length) {\n                return;\n            }\n            const items = anims.items;\n            let i = items.length - 1;\n            let draw = false;\n            let item;\n            for(; i >= 0; --i){\n                item = items[i];\n                if (item._active) {\n                    if (item._total > anims.duration) {\n                        anims.duration = item._total;\n                    }\n                    item.tick(date);\n                    draw = true;\n                } else {\n                    items[i] = items[items.length - 1];\n                    items.pop();\n                }\n            }\n            if (draw) {\n                chart.draw();\n                this._notify(chart, anims, date, 'progress');\n            }\n            if (!items.length) {\n                anims.running = false;\n                this._notify(chart, anims, date, 'complete');\n                anims.initial = false;\n            }\n            remaining += items.length;\n        });\n        this._lastDate = date;\n        if (remaining === 0) {\n            this._running = false;\n        }\n    }\n _getAnims(chart) {\n        const charts = this._charts;\n        let anims = charts.get(chart);\n        if (!anims) {\n            anims = {\n                running: false,\n                initial: true,\n                items: [],\n                listeners: {\n                    complete: [],\n                    progress: []\n                }\n            };\n            charts.set(chart, anims);\n        }\n        return anims;\n    }\n listen(chart, event, cb) {\n        this._getAnims(chart).listeners[event].push(cb);\n    }\n add(chart, items) {\n        if (!items || !items.length) {\n            return;\n        }\n        this._getAnims(chart).items.push(...items);\n    }\n has(chart) {\n        return this._getAnims(chart).items.length > 0;\n    }\n start(chart) {\n        const anims = this._charts.get(chart);\n        if (!anims) {\n            return;\n        }\n        anims.running = true;\n        anims.start = Date.now();\n        anims.duration = anims.items.reduce((acc, cur)=>Math.max(acc, cur._duration), 0);\n        this._refresh();\n    }\n    running(chart) {\n        if (!this._running) {\n            return false;\n        }\n        const anims = this._charts.get(chart);\n        if (!anims || !anims.running || !anims.items.length) {\n            return false;\n        }\n        return true;\n    }\n stop(chart) {\n        const anims = this._charts.get(chart);\n        if (!anims || !anims.items.length) {\n            return;\n        }\n        const items = anims.items;\n        let i = items.length - 1;\n        for(; i >= 0; --i){\n            items[i].cancel();\n        }\n        anims.items = [];\n        this._notify(chart, anims, Date.now(), 'complete');\n    }\n remove(chart) {\n        return this._charts.delete(chart);\n    }\n}\nvar animator = /* #__PURE__ */ new Animator();\n\nconst transparent = 'transparent';\nconst interpolators = {\n    boolean (from, to, factor) {\n        return factor > 0.5 ? to : from;\n    },\n color (from, to, factor) {\n        const c0 = color(from || transparent);\n        const c1 = c0.valid && color(to || transparent);\n        return c1 && c1.valid ? c1.mix(c0, factor).hexString() : to;\n    },\n    number (from, to, factor) {\n        return from + (to - from) * factor;\n    }\n};\nclass Animation {\n    constructor(cfg, target, prop, to){\n        const currentValue = target[prop];\n        to = resolve([\n            cfg.to,\n            to,\n            currentValue,\n            cfg.from\n        ]);\n        const from = resolve([\n            cfg.from,\n            currentValue,\n            to\n        ]);\n        this._active = true;\n        this._fn = cfg.fn || interpolators[cfg.type || typeof from];\n        this._easing = effects[cfg.easing] || effects.linear;\n        this._start = Math.floor(Date.now() + (cfg.delay || 0));\n        this._duration = this._total = Math.floor(cfg.duration);\n        this._loop = !!cfg.loop;\n        this._target = target;\n        this._prop = prop;\n        this._from = from;\n        this._to = to;\n        this._promises = undefined;\n    }\n    active() {\n        return this._active;\n    }\n    update(cfg, to, date) {\n        if (this._active) {\n            this._notify(false);\n            const currentValue = this._target[this._prop];\n            const elapsed = date - this._start;\n            const remain = this._duration - elapsed;\n            this._start = date;\n            this._duration = Math.floor(Math.max(remain, cfg.duration));\n            this._total += elapsed;\n            this._loop = !!cfg.loop;\n            this._to = resolve([\n                cfg.to,\n                to,\n                currentValue,\n                cfg.from\n            ]);\n            this._from = resolve([\n                cfg.from,\n                currentValue,\n                to\n            ]);\n        }\n    }\n    cancel() {\n        if (this._active) {\n            this.tick(Date.now());\n            this._active = false;\n            this._notify(false);\n        }\n    }\n    tick(date) {\n        const elapsed = date - this._start;\n        const duration = this._duration;\n        const prop = this._prop;\n        const from = this._from;\n        const loop = this._loop;\n        const to = this._to;\n        let factor;\n        this._active = from !== to && (loop || elapsed < duration);\n        if (!this._active) {\n            this._target[prop] = to;\n            this._notify(true);\n            return;\n        }\n        if (elapsed < 0) {\n            this._target[prop] = from;\n            return;\n        }\n        factor = elapsed / duration % 2;\n        factor = loop && factor > 1 ? 2 - factor : factor;\n        factor = this._easing(Math.min(1, Math.max(0, factor)));\n        this._target[prop] = this._fn(from, to, factor);\n    }\n    wait() {\n        const promises = this._promises || (this._promises = []);\n        return new Promise((res, rej)=>{\n            promises.push({\n                res,\n                rej\n            });\n        });\n    }\n    _notify(resolved) {\n        const method = resolved ? 'res' : 'rej';\n        const promises = this._promises || [];\n        for(let i = 0; i < promises.length; i++){\n            promises[i][method]();\n        }\n    }\n}\n\nclass Animations {\n    constructor(chart, config){\n        this._chart = chart;\n        this._properties = new Map();\n        this.configure(config);\n    }\n    configure(config) {\n        if (!isObject(config)) {\n            return;\n        }\n        const animationOptions = Object.keys(defaults.animation);\n        const animatedProps = this._properties;\n        Object.getOwnPropertyNames(config).forEach((key)=>{\n            const cfg = config[key];\n            if (!isObject(cfg)) {\n                return;\n            }\n            const resolved = {};\n            for (const option of animationOptions){\n                resolved[option] = cfg[option];\n            }\n            (isArray(cfg.properties) && cfg.properties || [\n                key\n            ]).forEach((prop)=>{\n                if (prop === key || !animatedProps.has(prop)) {\n                    animatedProps.set(prop, resolved);\n                }\n            });\n        });\n    }\n _animateOptions(target, values) {\n        const newOptions = values.options;\n        const options = resolveTargetOptions(target, newOptions);\n        if (!options) {\n            return [];\n        }\n        const animations = this._createAnimations(options, newOptions);\n        if (newOptions.$shared) {\n            awaitAll(target.options.$animations, newOptions).then(()=>{\n                target.options = newOptions;\n            }, ()=>{\n            });\n        }\n        return animations;\n    }\n _createAnimations(target, values) {\n        const animatedProps = this._properties;\n        const animations = [];\n        const running = target.$animations || (target.$animations = {});\n        const props = Object.keys(values);\n        const date = Date.now();\n        let i;\n        for(i = props.length - 1; i >= 0; --i){\n            const prop = props[i];\n            if (prop.charAt(0) === '$') {\n                continue;\n            }\n            if (prop === 'options') {\n                animations.push(...this._animateOptions(target, values));\n                continue;\n            }\n            const value = values[prop];\n            let animation = running[prop];\n            const cfg = animatedProps.get(prop);\n            if (animation) {\n                if (cfg && animation.active()) {\n                    animation.update(cfg, value, date);\n                    continue;\n                } else {\n                    animation.cancel();\n                }\n            }\n            if (!cfg || !cfg.duration) {\n                target[prop] = value;\n                continue;\n            }\n            running[prop] = animation = new Animation(cfg, target, prop, value);\n            animations.push(animation);\n        }\n        return animations;\n    }\n update(target, values) {\n        if (this._properties.size === 0) {\n            Object.assign(target, values);\n            return;\n        }\n        const animations = this._createAnimations(target, values);\n        if (animations.length) {\n            animator.add(this._chart, animations);\n            return true;\n        }\n    }\n}\nfunction awaitAll(animations, properties) {\n    const running = [];\n    const keys = Object.keys(properties);\n    for(let i = 0; i < keys.length; i++){\n        const anim = animations[keys[i]];\n        if (anim && anim.active()) {\n            running.push(anim.wait());\n        }\n    }\n    return Promise.all(running);\n}\nfunction resolveTargetOptions(target, newOptions) {\n    if (!newOptions) {\n        return;\n    }\n    let options = target.options;\n    if (!options) {\n        target.options = newOptions;\n        return;\n    }\n    if (options.$shared) {\n        target.options = options = Object.assign({}, options, {\n            $shared: false,\n            $animations: {}\n        });\n    }\n    return options;\n}\n\nfunction scaleClip(scale, allowedOverflow) {\n    const opts = scale && scale.options || {};\n    const reverse = opts.reverse;\n    const min = opts.min === undefined ? allowedOverflow : 0;\n    const max = opts.max === undefined ? allowedOverflow : 0;\n    return {\n        start: reverse ? max : min,\n        end: reverse ? min : max\n    };\n}\nfunction defaultClip(xScale, yScale, allowedOverflow) {\n    if (allowedOverflow === false) {\n        return false;\n    }\n    const x = scaleClip(xScale, allowedOverflow);\n    const y = scaleClip(yScale, allowedOverflow);\n    return {\n        top: y.end,\n        right: x.end,\n        bottom: y.start,\n        left: x.start\n    };\n}\nfunction toClip(value) {\n    let t, r, b, l;\n    if (isObject(value)) {\n        t = value.top;\n        r = value.right;\n        b = value.bottom;\n        l = value.left;\n    } else {\n        t = r = b = l = value;\n    }\n    return {\n        top: t,\n        right: r,\n        bottom: b,\n        left: l,\n        disabled: value === false\n    };\n}\nfunction getSortedDatasetIndices(chart, filterVisible) {\n    const keys = [];\n    const metasets = chart._getSortedDatasetMetas(filterVisible);\n    let i, ilen;\n    for(i = 0, ilen = metasets.length; i < ilen; ++i){\n        keys.push(metasets[i].index);\n    }\n    return keys;\n}\nfunction applyStack(stack, value, dsIndex, options = {}) {\n    const keys = stack.keys;\n    const singleMode = options.mode === 'single';\n    let i, ilen, datasetIndex, otherValue;\n    if (value === null) {\n        return;\n    }\n    for(i = 0, ilen = keys.length; i < ilen; ++i){\n        datasetIndex = +keys[i];\n        if (datasetIndex === dsIndex) {\n            if (options.all) {\n                continue;\n            }\n            break;\n        }\n        otherValue = stack.values[datasetIndex];\n        if (isNumberFinite(otherValue) && (singleMode || value === 0 || sign(value) === sign(otherValue))) {\n            value += otherValue;\n        }\n    }\n    return value;\n}\nfunction convertObjectDataToArray(data) {\n    const keys = Object.keys(data);\n    const adata = new Array(keys.length);\n    let i, ilen, key;\n    for(i = 0, ilen = keys.length; i < ilen; ++i){\n        key = keys[i];\n        adata[i] = {\n            x: key,\n            y: data[key]\n        };\n    }\n    return adata;\n}\nfunction isStacked(scale, meta) {\n    const stacked = scale && scale.options.stacked;\n    return stacked || stacked === undefined && meta.stack !== undefined;\n}\nfunction getStackKey(indexScale, valueScale, meta) {\n    return `${indexScale.id}.${valueScale.id}.${meta.stack || meta.type}`;\n}\nfunction getUserBounds(scale) {\n    const { min , max , minDefined , maxDefined  } = scale.getUserBounds();\n    return {\n        min: minDefined ? min : Number.NEGATIVE_INFINITY,\n        max: maxDefined ? max : Number.POSITIVE_INFINITY\n    };\n}\nfunction getOrCreateStack(stacks, stackKey, indexValue) {\n    const subStack = stacks[stackKey] || (stacks[stackKey] = {});\n    return subStack[indexValue] || (subStack[indexValue] = {});\n}\nfunction getLastIndexInStack(stack, vScale, positive, type) {\n    for (const meta of vScale.getMatchingVisibleMetas(type).reverse()){\n        const value = stack[meta.index];\n        if (positive && value > 0 || !positive && value < 0) {\n            return meta.index;\n        }\n    }\n    return null;\n}\nfunction updateStacks(controller, parsed) {\n    const { chart , _cachedMeta: meta  } = controller;\n    const stacks = chart._stacks || (chart._stacks = {});\n    const { iScale , vScale , index: datasetIndex  } = meta;\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const key = getStackKey(iScale, vScale, meta);\n    const ilen = parsed.length;\n    let stack;\n    for(let i = 0; i < ilen; ++i){\n        const item = parsed[i];\n        const { [iAxis]: index , [vAxis]: value  } = item;\n        const itemStacks = item._stacks || (item._stacks = {});\n        stack = itemStacks[vAxis] = getOrCreateStack(stacks, key, index);\n        stack[datasetIndex] = value;\n        stack._top = getLastIndexInStack(stack, vScale, true, meta.type);\n        stack._bottom = getLastIndexInStack(stack, vScale, false, meta.type);\n        const visualValues = stack._visualValues || (stack._visualValues = {});\n        visualValues[datasetIndex] = value;\n    }\n}\nfunction getFirstScaleId(chart, axis) {\n    const scales = chart.scales;\n    return Object.keys(scales).filter((key)=>scales[key].axis === axis).shift();\n}\nfunction createDatasetContext(parent, index) {\n    return createContext(parent, {\n        active: false,\n        dataset: undefined,\n        datasetIndex: index,\n        index,\n        mode: 'default',\n        type: 'dataset'\n    });\n}\nfunction createDataContext(parent, index, element) {\n    return createContext(parent, {\n        active: false,\n        dataIndex: index,\n        parsed: undefined,\n        raw: undefined,\n        element,\n        index,\n        mode: 'default',\n        type: 'data'\n    });\n}\nfunction clearStacks(meta, items) {\n    const datasetIndex = meta.controller.index;\n    const axis = meta.vScale && meta.vScale.axis;\n    if (!axis) {\n        return;\n    }\n    items = items || meta._parsed;\n    for (const parsed of items){\n        const stacks = parsed._stacks;\n        if (!stacks || stacks[axis] === undefined || stacks[axis][datasetIndex] === undefined) {\n            return;\n        }\n        delete stacks[axis][datasetIndex];\n        if (stacks[axis]._visualValues !== undefined && stacks[axis]._visualValues[datasetIndex] !== undefined) {\n            delete stacks[axis]._visualValues[datasetIndex];\n        }\n    }\n}\nconst isDirectUpdateMode = (mode)=>mode === 'reset' || mode === 'none';\nconst cloneIfNotShared = (cached, shared)=>shared ? cached : Object.assign({}, cached);\nconst createStack = (canStack, meta, chart)=>canStack && !meta.hidden && meta._stacked && {\n        keys: getSortedDatasetIndices(chart, true),\n        values: null\n    };\nclass DatasetController {\n static defaults = {};\n static datasetElementType = null;\n static dataElementType = null;\n constructor(chart, datasetIndex){\n        this.chart = chart;\n        this._ctx = chart.ctx;\n        this.index = datasetIndex;\n        this._cachedDataOpts = {};\n        this._cachedMeta = this.getMeta();\n        this._type = this._cachedMeta.type;\n        this.options = undefined;\n         this._parsing = false;\n        this._data = undefined;\n        this._objectData = undefined;\n        this._sharedOptions = undefined;\n        this._drawStart = undefined;\n        this._drawCount = undefined;\n        this.enableOptionSharing = false;\n        this.supportsDecimation = false;\n        this.$context = undefined;\n        this._syncList = [];\n        this.datasetElementType = new.target.datasetElementType;\n        this.dataElementType = new.target.dataElementType;\n        this.initialize();\n    }\n    initialize() {\n        const meta = this._cachedMeta;\n        this.configure();\n        this.linkScales();\n        meta._stacked = isStacked(meta.vScale, meta);\n        this.addElements();\n        if (this.options.fill && !this.chart.isPluginEnabled('filler')) {\n            console.warn(\"Tried to use the 'fill' option without the 'Filler' plugin enabled. Please import and register the 'Filler' plugin and make sure it is not disabled in the options\");\n        }\n    }\n    updateIndex(datasetIndex) {\n        if (this.index !== datasetIndex) {\n            clearStacks(this._cachedMeta);\n        }\n        this.index = datasetIndex;\n    }\n    linkScales() {\n        const chart = this.chart;\n        const meta = this._cachedMeta;\n        const dataset = this.getDataset();\n        const chooseId = (axis, x, y, r)=>axis === 'x' ? x : axis === 'r' ? r : y;\n        const xid = meta.xAxisID = valueOrDefault(dataset.xAxisID, getFirstScaleId(chart, 'x'));\n        const yid = meta.yAxisID = valueOrDefault(dataset.yAxisID, getFirstScaleId(chart, 'y'));\n        const rid = meta.rAxisID = valueOrDefault(dataset.rAxisID, getFirstScaleId(chart, 'r'));\n        const indexAxis = meta.indexAxis;\n        const iid = meta.iAxisID = chooseId(indexAxis, xid, yid, rid);\n        const vid = meta.vAxisID = chooseId(indexAxis, yid, xid, rid);\n        meta.xScale = this.getScaleForId(xid);\n        meta.yScale = this.getScaleForId(yid);\n        meta.rScale = this.getScaleForId(rid);\n        meta.iScale = this.getScaleForId(iid);\n        meta.vScale = this.getScaleForId(vid);\n    }\n    getDataset() {\n        return this.chart.data.datasets[this.index];\n    }\n    getMeta() {\n        return this.chart.getDatasetMeta(this.index);\n    }\n getScaleForId(scaleID) {\n        return this.chart.scales[scaleID];\n    }\n _getOtherScale(scale) {\n        const meta = this._cachedMeta;\n        return scale === meta.iScale ? meta.vScale : meta.iScale;\n    }\n    reset() {\n        this._update('reset');\n    }\n _destroy() {\n        const meta = this._cachedMeta;\n        if (this._data) {\n            unlistenArrayEvents(this._data, this);\n        }\n        if (meta._stacked) {\n            clearStacks(meta);\n        }\n    }\n _dataCheck() {\n        const dataset = this.getDataset();\n        const data = dataset.data || (dataset.data = []);\n        const _data = this._data;\n        if (isObject(data)) {\n            this._data = convertObjectDataToArray(data);\n        } else if (_data !== data) {\n            if (_data) {\n                unlistenArrayEvents(_data, this);\n                const meta = this._cachedMeta;\n                clearStacks(meta);\n                meta._parsed = [];\n            }\n            if (data && Object.isExtensible(data)) {\n                listenArrayEvents(data, this);\n            }\n            this._syncList = [];\n            this._data = data;\n        }\n    }\n    addElements() {\n        const meta = this._cachedMeta;\n        this._dataCheck();\n        if (this.datasetElementType) {\n            meta.dataset = new this.datasetElementType();\n        }\n    }\n    buildOrUpdateElements(resetNewElements) {\n        const meta = this._cachedMeta;\n        const dataset = this.getDataset();\n        let stackChanged = false;\n        this._dataCheck();\n        const oldStacked = meta._stacked;\n        meta._stacked = isStacked(meta.vScale, meta);\n        if (meta.stack !== dataset.stack) {\n            stackChanged = true;\n            clearStacks(meta);\n            meta.stack = dataset.stack;\n        }\n        this._resyncElements(resetNewElements);\n        if (stackChanged || oldStacked !== meta._stacked) {\n            updateStacks(this, meta._parsed);\n        }\n    }\n configure() {\n        const config = this.chart.config;\n        const scopeKeys = config.datasetScopeKeys(this._type);\n        const scopes = config.getOptionScopes(this.getDataset(), scopeKeys, true);\n        this.options = config.createResolver(scopes, this.getContext());\n        this._parsing = this.options.parsing;\n        this._cachedDataOpts = {};\n    }\n parse(start, count) {\n        const { _cachedMeta: meta , _data: data  } = this;\n        const { iScale , _stacked  } = meta;\n        const iAxis = iScale.axis;\n        let sorted = start === 0 && count === data.length ? true : meta._sorted;\n        let prev = start > 0 && meta._parsed[start - 1];\n        let i, cur, parsed;\n        if (this._parsing === false) {\n            meta._parsed = data;\n            meta._sorted = true;\n            parsed = data;\n        } else {\n            if (isArray(data[start])) {\n                parsed = this.parseArrayData(meta, data, start, count);\n            } else if (isObject(data[start])) {\n                parsed = this.parseObjectData(meta, data, start, count);\n            } else {\n                parsed = this.parsePrimitiveData(meta, data, start, count);\n            }\n            const isNotInOrderComparedToPrev = ()=>cur[iAxis] === null || prev && cur[iAxis] < prev[iAxis];\n            for(i = 0; i < count; ++i){\n                meta._parsed[i + start] = cur = parsed[i];\n                if (sorted) {\n                    if (isNotInOrderComparedToPrev()) {\n                        sorted = false;\n                    }\n                    prev = cur;\n                }\n            }\n            meta._sorted = sorted;\n        }\n        if (_stacked) {\n            updateStacks(this, parsed);\n        }\n    }\n parsePrimitiveData(meta, data, start, count) {\n        const { iScale , vScale  } = meta;\n        const iAxis = iScale.axis;\n        const vAxis = vScale.axis;\n        const labels = iScale.getLabels();\n        const singleScale = iScale === vScale;\n        const parsed = new Array(count);\n        let i, ilen, index;\n        for(i = 0, ilen = count; i < ilen; ++i){\n            index = i + start;\n            parsed[i] = {\n                [iAxis]: singleScale || iScale.parse(labels[index], index),\n                [vAxis]: vScale.parse(data[index], index)\n            };\n        }\n        return parsed;\n    }\n parseArrayData(meta, data, start, count) {\n        const { xScale , yScale  } = meta;\n        const parsed = new Array(count);\n        let i, ilen, index, item;\n        for(i = 0, ilen = count; i < ilen; ++i){\n            index = i + start;\n            item = data[index];\n            parsed[i] = {\n                x: xScale.parse(item[0], index),\n                y: yScale.parse(item[1], index)\n            };\n        }\n        return parsed;\n    }\n parseObjectData(meta, data, start, count) {\n        const { xScale , yScale  } = meta;\n        const { xAxisKey ='x' , yAxisKey ='y'  } = this._parsing;\n        const parsed = new Array(count);\n        let i, ilen, index, item;\n        for(i = 0, ilen = count; i < ilen; ++i){\n            index = i + start;\n            item = data[index];\n            parsed[i] = {\n                x: xScale.parse(resolveObjectKey(item, xAxisKey), index),\n                y: yScale.parse(resolveObjectKey(item, yAxisKey), index)\n            };\n        }\n        return parsed;\n    }\n getParsed(index) {\n        return this._cachedMeta._parsed[index];\n    }\n getDataElement(index) {\n        return this._cachedMeta.data[index];\n    }\n applyStack(scale, parsed, mode) {\n        const chart = this.chart;\n        const meta = this._cachedMeta;\n        const value = parsed[scale.axis];\n        const stack = {\n            keys: getSortedDatasetIndices(chart, true),\n            values: parsed._stacks[scale.axis]._visualValues\n        };\n        return applyStack(stack, value, meta.index, {\n            mode\n        });\n    }\n updateRangeFromParsed(range, scale, parsed, stack) {\n        const parsedValue = parsed[scale.axis];\n        let value = parsedValue === null ? NaN : parsedValue;\n        const values = stack && parsed._stacks[scale.axis];\n        if (stack && values) {\n            stack.values = values;\n            value = applyStack(stack, parsedValue, this._cachedMeta.index);\n        }\n        range.min = Math.min(range.min, value);\n        range.max = Math.max(range.max, value);\n    }\n getMinMax(scale, canStack) {\n        const meta = this._cachedMeta;\n        const _parsed = meta._parsed;\n        const sorted = meta._sorted && scale === meta.iScale;\n        const ilen = _parsed.length;\n        const otherScale = this._getOtherScale(scale);\n        const stack = createStack(canStack, meta, this.chart);\n        const range = {\n            min: Number.POSITIVE_INFINITY,\n            max: Number.NEGATIVE_INFINITY\n        };\n        const { min: otherMin , max: otherMax  } = getUserBounds(otherScale);\n        let i, parsed;\n        function _skip() {\n            parsed = _parsed[i];\n            const otherValue = parsed[otherScale.axis];\n            return !isNumberFinite(parsed[scale.axis]) || otherMin > otherValue || otherMax < otherValue;\n        }\n        for(i = 0; i < ilen; ++i){\n            if (_skip()) {\n                continue;\n            }\n            this.updateRangeFromParsed(range, scale, parsed, stack);\n            if (sorted) {\n                break;\n            }\n        }\n        if (sorted) {\n            for(i = ilen - 1; i >= 0; --i){\n                if (_skip()) {\n                    continue;\n                }\n                this.updateRangeFromParsed(range, scale, parsed, stack);\n                break;\n            }\n        }\n        return range;\n    }\n    getAllParsedValues(scale) {\n        const parsed = this._cachedMeta._parsed;\n        const values = [];\n        let i, ilen, value;\n        for(i = 0, ilen = parsed.length; i < ilen; ++i){\n            value = parsed[i][scale.axis];\n            if (isNumberFinite(value)) {\n                values.push(value);\n            }\n        }\n        return values;\n    }\n getMaxOverflow() {\n        return false;\n    }\n getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const iScale = meta.iScale;\n        const vScale = meta.vScale;\n        const parsed = this.getParsed(index);\n        return {\n            label: iScale ? '' + iScale.getLabelForValue(parsed[iScale.axis]) : '',\n            value: vScale ? '' + vScale.getLabelForValue(parsed[vScale.axis]) : ''\n        };\n    }\n _update(mode) {\n        const meta = this._cachedMeta;\n        this.update(mode || 'default');\n        meta._clip = toClip(valueOrDefault(this.options.clip, defaultClip(meta.xScale, meta.yScale, this.getMaxOverflow())));\n    }\n update(mode) {}\n    draw() {\n        const ctx = this._ctx;\n        const chart = this.chart;\n        const meta = this._cachedMeta;\n        const elements = meta.data || [];\n        const area = chart.chartArea;\n        const active = [];\n        const start = this._drawStart || 0;\n        const count = this._drawCount || elements.length - start;\n        const drawActiveElementsOnTop = this.options.drawActiveElementsOnTop;\n        let i;\n        if (meta.dataset) {\n            meta.dataset.draw(ctx, area, start, count);\n        }\n        for(i = start; i < start + count; ++i){\n            const element = elements[i];\n            if (element.hidden) {\n                continue;\n            }\n            if (element.active && drawActiveElementsOnTop) {\n                active.push(element);\n            } else {\n                element.draw(ctx, area);\n            }\n        }\n        for(i = 0; i < active.length; ++i){\n            active[i].draw(ctx, area);\n        }\n    }\n getStyle(index, active) {\n        const mode = active ? 'active' : 'default';\n        return index === undefined && this._cachedMeta.dataset ? this.resolveDatasetElementOptions(mode) : this.resolveDataElementOptions(index || 0, mode);\n    }\n getContext(index, active, mode) {\n        const dataset = this.getDataset();\n        let context;\n        if (index >= 0 && index < this._cachedMeta.data.length) {\n            const element = this._cachedMeta.data[index];\n            context = element.$context || (element.$context = createDataContext(this.getContext(), index, element));\n            context.parsed = this.getParsed(index);\n            context.raw = dataset.data[index];\n            context.index = context.dataIndex = index;\n        } else {\n            context = this.$context || (this.$context = createDatasetContext(this.chart.getContext(), this.index));\n            context.dataset = dataset;\n            context.index = context.datasetIndex = this.index;\n        }\n        context.active = !!active;\n        context.mode = mode;\n        return context;\n    }\n resolveDatasetElementOptions(mode) {\n        return this._resolveElementOptions(this.datasetElementType.id, mode);\n    }\n resolveDataElementOptions(index, mode) {\n        return this._resolveElementOptions(this.dataElementType.id, mode, index);\n    }\n _resolveElementOptions(elementType, mode = 'default', index) {\n        const active = mode === 'active';\n        const cache = this._cachedDataOpts;\n        const cacheKey = elementType + '-' + mode;\n        const cached = cache[cacheKey];\n        const sharing = this.enableOptionSharing && defined(index);\n        if (cached) {\n            return cloneIfNotShared(cached, sharing);\n        }\n        const config = this.chart.config;\n        const scopeKeys = config.datasetElementScopeKeys(this._type, elementType);\n        const prefixes = active ? [\n            `${elementType}Hover`,\n            'hover',\n            elementType,\n            ''\n        ] : [\n            elementType,\n            ''\n        ];\n        const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n        const names = Object.keys(defaults.elements[elementType]);\n        const context = ()=>this.getContext(index, active, mode);\n        const values = config.resolveNamedOptions(scopes, names, context, prefixes);\n        if (values.$shared) {\n            values.$shared = sharing;\n            cache[cacheKey] = Object.freeze(cloneIfNotShared(values, sharing));\n        }\n        return values;\n    }\n _resolveAnimations(index, transition, active) {\n        const chart = this.chart;\n        const cache = this._cachedDataOpts;\n        const cacheKey = `animation-${transition}`;\n        const cached = cache[cacheKey];\n        if (cached) {\n            return cached;\n        }\n        let options;\n        if (chart.options.animation !== false) {\n            const config = this.chart.config;\n            const scopeKeys = config.datasetAnimationScopeKeys(this._type, transition);\n            const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n            options = config.createResolver(scopes, this.getContext(index, active, transition));\n        }\n        const animations = new Animations(chart, options && options.animations);\n        if (options && options._cacheable) {\n            cache[cacheKey] = Object.freeze(animations);\n        }\n        return animations;\n    }\n getSharedOptions(options) {\n        if (!options.$shared) {\n            return;\n        }\n        return this._sharedOptions || (this._sharedOptions = Object.assign({}, options));\n    }\n includeOptions(mode, sharedOptions) {\n        return !sharedOptions || isDirectUpdateMode(mode) || this.chart._animationsDisabled;\n    }\n _getSharedOptions(start, mode) {\n        const firstOpts = this.resolveDataElementOptions(start, mode);\n        const previouslySharedOptions = this._sharedOptions;\n        const sharedOptions = this.getSharedOptions(firstOpts);\n        const includeOptions = this.includeOptions(mode, sharedOptions) || sharedOptions !== previouslySharedOptions;\n        this.updateSharedOptions(sharedOptions, mode, firstOpts);\n        return {\n            sharedOptions,\n            includeOptions\n        };\n    }\n updateElement(element, index, properties, mode) {\n        if (isDirectUpdateMode(mode)) {\n            Object.assign(element, properties);\n        } else {\n            this._resolveAnimations(index, mode).update(element, properties);\n        }\n    }\n updateSharedOptions(sharedOptions, mode, newOptions) {\n        if (sharedOptions && !isDirectUpdateMode(mode)) {\n            this._resolveAnimations(undefined, mode).update(sharedOptions, newOptions);\n        }\n    }\n _setStyle(element, index, mode, active) {\n        element.active = active;\n        const options = this.getStyle(index, active);\n        this._resolveAnimations(index, mode, active).update(element, {\n            options: !active && this.getSharedOptions(options) || options\n        });\n    }\n    removeHoverStyle(element, datasetIndex, index) {\n        this._setStyle(element, index, 'active', false);\n    }\n    setHoverStyle(element, datasetIndex, index) {\n        this._setStyle(element, index, 'active', true);\n    }\n _removeDatasetHoverStyle() {\n        const element = this._cachedMeta.dataset;\n        if (element) {\n            this._setStyle(element, undefined, 'active', false);\n        }\n    }\n _setDatasetHoverStyle() {\n        const element = this._cachedMeta.dataset;\n        if (element) {\n            this._setStyle(element, undefined, 'active', true);\n        }\n    }\n _resyncElements(resetNewElements) {\n        const data = this._data;\n        const elements = this._cachedMeta.data;\n        for (const [method, arg1, arg2] of this._syncList){\n            this[method](arg1, arg2);\n        }\n        this._syncList = [];\n        const numMeta = elements.length;\n        const numData = data.length;\n        const count = Math.min(numData, numMeta);\n        if (count) {\n            this.parse(0, count);\n        }\n        if (numData > numMeta) {\n            this._insertElements(numMeta, numData - numMeta, resetNewElements);\n        } else if (numData < numMeta) {\n            this._removeElements(numData, numMeta - numData);\n        }\n    }\n _insertElements(start, count, resetNewElements = true) {\n        const meta = this._cachedMeta;\n        const data = meta.data;\n        const end = start + count;\n        let i;\n        const move = (arr)=>{\n            arr.length += count;\n            for(i = arr.length - 1; i >= end; i--){\n                arr[i] = arr[i - count];\n            }\n        };\n        move(data);\n        for(i = start; i < end; ++i){\n            data[i] = new this.dataElementType();\n        }\n        if (this._parsing) {\n            move(meta._parsed);\n        }\n        this.parse(start, count);\n        if (resetNewElements) {\n            this.updateElements(data, start, count, 'reset');\n        }\n    }\n    updateElements(element, start, count, mode) {}\n _removeElements(start, count) {\n        const meta = this._cachedMeta;\n        if (this._parsing) {\n            const removed = meta._parsed.splice(start, count);\n            if (meta._stacked) {\n                clearStacks(meta, removed);\n            }\n        }\n        meta.data.splice(start, count);\n    }\n _sync(args) {\n        if (this._parsing) {\n            this._syncList.push(args);\n        } else {\n            const [method, arg1, arg2] = args;\n            this[method](arg1, arg2);\n        }\n        this.chart._dataChanges.push([\n            this.index,\n            ...args\n        ]);\n    }\n    _onDataPush() {\n        const count = arguments.length;\n        this._sync([\n            '_insertElements',\n            this.getDataset().data.length - count,\n            count\n        ]);\n    }\n    _onDataPop() {\n        this._sync([\n            '_removeElements',\n            this._cachedMeta.data.length - 1,\n            1\n        ]);\n    }\n    _onDataShift() {\n        this._sync([\n            '_removeElements',\n            0,\n            1\n        ]);\n    }\n    _onDataSplice(start, count) {\n        if (count) {\n            this._sync([\n                '_removeElements',\n                start,\n                count\n            ]);\n        }\n        const newCount = arguments.length - 2;\n        if (newCount) {\n            this._sync([\n                '_insertElements',\n                start,\n                newCount\n            ]);\n        }\n    }\n    _onDataUnshift() {\n        this._sync([\n            '_insertElements',\n            0,\n            arguments.length\n        ]);\n    }\n}\n\nfunction getAllScaleValues(scale, type) {\n    if (!scale._cache.$bar) {\n        const visibleMetas = scale.getMatchingVisibleMetas(type);\n        let values = [];\n        for(let i = 0, ilen = visibleMetas.length; i < ilen; i++){\n            values = values.concat(visibleMetas[i].controller.getAllParsedValues(scale));\n        }\n        scale._cache.$bar = _arrayUnique(values.sort((a, b)=>a - b));\n    }\n    return scale._cache.$bar;\n}\n function computeMinSampleSize(meta) {\n    const scale = meta.iScale;\n    const values = getAllScaleValues(scale, meta.type);\n    let min = scale._length;\n    let i, ilen, curr, prev;\n    const updateMinAndPrev = ()=>{\n        if (curr === 32767 || curr === -32768) {\n            return;\n        }\n        if (defined(prev)) {\n            min = Math.min(min, Math.abs(curr - prev) || min);\n        }\n        prev = curr;\n    };\n    for(i = 0, ilen = values.length; i < ilen; ++i){\n        curr = scale.getPixelForValue(values[i]);\n        updateMinAndPrev();\n    }\n    prev = undefined;\n    for(i = 0, ilen = scale.ticks.length; i < ilen; ++i){\n        curr = scale.getPixelForTick(i);\n        updateMinAndPrev();\n    }\n    return min;\n}\n function computeFitCategoryTraits(index, ruler, options, stackCount) {\n    const thickness = options.barThickness;\n    let size, ratio;\n    if (isNullOrUndef(thickness)) {\n        size = ruler.min * options.categoryPercentage;\n        ratio = options.barPercentage;\n    } else {\n        size = thickness * stackCount;\n        ratio = 1;\n    }\n    return {\n        chunk: size / stackCount,\n        ratio,\n        start: ruler.pixels[index] - size / 2\n    };\n}\n function computeFlexCategoryTraits(index, ruler, options, stackCount) {\n    const pixels = ruler.pixels;\n    const curr = pixels[index];\n    let prev = index > 0 ? pixels[index - 1] : null;\n    let next = index < pixels.length - 1 ? pixels[index + 1] : null;\n    const percent = options.categoryPercentage;\n    if (prev === null) {\n        prev = curr - (next === null ? ruler.end - ruler.start : next - curr);\n    }\n    if (next === null) {\n        next = curr + curr - prev;\n    }\n    const start = curr - (curr - Math.min(prev, next)) / 2 * percent;\n    const size = Math.abs(next - prev) / 2 * percent;\n    return {\n        chunk: size / stackCount,\n        ratio: options.barPercentage,\n        start\n    };\n}\nfunction parseFloatBar(entry, item, vScale, i) {\n    const startValue = vScale.parse(entry[0], i);\n    const endValue = vScale.parse(entry[1], i);\n    const min = Math.min(startValue, endValue);\n    const max = Math.max(startValue, endValue);\n    let barStart = min;\n    let barEnd = max;\n    if (Math.abs(min) > Math.abs(max)) {\n        barStart = max;\n        barEnd = min;\n    }\n    item[vScale.axis] = barEnd;\n    item._custom = {\n        barStart,\n        barEnd,\n        start: startValue,\n        end: endValue,\n        min,\n        max\n    };\n}\nfunction parseValue(entry, item, vScale, i) {\n    if (isArray(entry)) {\n        parseFloatBar(entry, item, vScale, i);\n    } else {\n        item[vScale.axis] = vScale.parse(entry, i);\n    }\n    return item;\n}\nfunction parseArrayOrPrimitive(meta, data, start, count) {\n    const iScale = meta.iScale;\n    const vScale = meta.vScale;\n    const labels = iScale.getLabels();\n    const singleScale = iScale === vScale;\n    const parsed = [];\n    let i, ilen, item, entry;\n    for(i = start, ilen = start + count; i < ilen; ++i){\n        entry = data[i];\n        item = {};\n        item[iScale.axis] = singleScale || iScale.parse(labels[i], i);\n        parsed.push(parseValue(entry, item, vScale, i));\n    }\n    return parsed;\n}\nfunction isFloatBar(custom) {\n    return custom && custom.barStart !== undefined && custom.barEnd !== undefined;\n}\nfunction barSign(size, vScale, actualBase) {\n    if (size !== 0) {\n        return sign(size);\n    }\n    return (vScale.isHorizontal() ? 1 : -1) * (vScale.min >= actualBase ? 1 : -1);\n}\nfunction borderProps(properties) {\n    let reverse, start, end, top, bottom;\n    if (properties.horizontal) {\n        reverse = properties.base > properties.x;\n        start = 'left';\n        end = 'right';\n    } else {\n        reverse = properties.base < properties.y;\n        start = 'bottom';\n        end = 'top';\n    }\n    if (reverse) {\n        top = 'end';\n        bottom = 'start';\n    } else {\n        top = 'start';\n        bottom = 'end';\n    }\n    return {\n        start,\n        end,\n        reverse,\n        top,\n        bottom\n    };\n}\nfunction setBorderSkipped(properties, options, stack, index) {\n    let edge = options.borderSkipped;\n    const res = {};\n    if (!edge) {\n        properties.borderSkipped = res;\n        return;\n    }\n    if (edge === true) {\n        properties.borderSkipped = {\n            top: true,\n            right: true,\n            bottom: true,\n            left: true\n        };\n        return;\n    }\n    const { start , end , reverse , top , bottom  } = borderProps(properties);\n    if (edge === 'middle' && stack) {\n        properties.enableBorderRadius = true;\n        if ((stack._top || 0) === index) {\n            edge = top;\n        } else if ((stack._bottom || 0) === index) {\n            edge = bottom;\n        } else {\n            res[parseEdge(bottom, start, end, reverse)] = true;\n            edge = top;\n        }\n    }\n    res[parseEdge(edge, start, end, reverse)] = true;\n    properties.borderSkipped = res;\n}\nfunction parseEdge(edge, a, b, reverse) {\n    if (reverse) {\n        edge = swap(edge, a, b);\n        edge = startEnd(edge, b, a);\n    } else {\n        edge = startEnd(edge, a, b);\n    }\n    return edge;\n}\nfunction swap(orig, v1, v2) {\n    return orig === v1 ? v2 : orig === v2 ? v1 : orig;\n}\nfunction startEnd(v, start, end) {\n    return v === 'start' ? start : v === 'end' ? end : v;\n}\nfunction setInflateAmount(properties, { inflateAmount  }, ratio) {\n    properties.inflateAmount = inflateAmount === 'auto' ? ratio === 1 ? 0.33 : 0 : inflateAmount;\n}\nclass BarController extends DatasetController {\n    static id = 'bar';\n static defaults = {\n        datasetElementType: false,\n        dataElementType: 'bar',\n        categoryPercentage: 0.8,\n        barPercentage: 0.9,\n        grouped: true,\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'x',\n                    'y',\n                    'base',\n                    'width',\n                    'height'\n                ]\n            }\n        }\n    };\n static overrides = {\n        scales: {\n            _index_: {\n                type: 'category',\n                offset: true,\n                grid: {\n                    offset: true\n                }\n            },\n            _value_: {\n                type: 'linear',\n                beginAtZero: true\n            }\n        }\n    };\n parsePrimitiveData(meta, data, start, count) {\n        return parseArrayOrPrimitive(meta, data, start, count);\n    }\n parseArrayData(meta, data, start, count) {\n        return parseArrayOrPrimitive(meta, data, start, count);\n    }\n parseObjectData(meta, data, start, count) {\n        const { iScale , vScale  } = meta;\n        const { xAxisKey ='x' , yAxisKey ='y'  } = this._parsing;\n        const iAxisKey = iScale.axis === 'x' ? xAxisKey : yAxisKey;\n        const vAxisKey = vScale.axis === 'x' ? xAxisKey : yAxisKey;\n        const parsed = [];\n        let i, ilen, item, obj;\n        for(i = start, ilen = start + count; i < ilen; ++i){\n            obj = data[i];\n            item = {};\n            item[iScale.axis] = iScale.parse(resolveObjectKey(obj, iAxisKey), i);\n            parsed.push(parseValue(resolveObjectKey(obj, vAxisKey), item, vScale, i));\n        }\n        return parsed;\n    }\n updateRangeFromParsed(range, scale, parsed, stack) {\n        super.updateRangeFromParsed(range, scale, parsed, stack);\n        const custom = parsed._custom;\n        if (custom && scale === this._cachedMeta.vScale) {\n            range.min = Math.min(range.min, custom.min);\n            range.max = Math.max(range.max, custom.max);\n        }\n    }\n getMaxOverflow() {\n        return 0;\n    }\n getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const { iScale , vScale  } = meta;\n        const parsed = this.getParsed(index);\n        const custom = parsed._custom;\n        const value = isFloatBar(custom) ? '[' + custom.start + ', ' + custom.end + ']' : '' + vScale.getLabelForValue(parsed[vScale.axis]);\n        return {\n            label: '' + iScale.getLabelForValue(parsed[iScale.axis]),\n            value\n        };\n    }\n    initialize() {\n        this.enableOptionSharing = true;\n        super.initialize();\n        const meta = this._cachedMeta;\n        meta.stack = this.getDataset().stack;\n    }\n    update(mode) {\n        const meta = this._cachedMeta;\n        this.updateElements(meta.data, 0, meta.data.length, mode);\n    }\n    updateElements(bars, start, count, mode) {\n        const reset = mode === 'reset';\n        const { index , _cachedMeta: { vScale  }  } = this;\n        const base = vScale.getBasePixel();\n        const horizontal = vScale.isHorizontal();\n        const ruler = this._getRuler();\n        const { sharedOptions , includeOptions  } = this._getSharedOptions(start, mode);\n        for(let i = start; i < start + count; i++){\n            const parsed = this.getParsed(i);\n            const vpixels = reset || isNullOrUndef(parsed[vScale.axis]) ? {\n                base,\n                head: base\n            } : this._calculateBarValuePixels(i);\n            const ipixels = this._calculateBarIndexPixels(i, ruler);\n            const stack = (parsed._stacks || {})[vScale.axis];\n            const properties = {\n                horizontal,\n                base: vpixels.base,\n                enableBorderRadius: !stack || isFloatBar(parsed._custom) || index === stack._top || index === stack._bottom,\n                x: horizontal ? vpixels.head : ipixels.center,\n                y: horizontal ? ipixels.center : vpixels.head,\n                height: horizontal ? ipixels.size : Math.abs(vpixels.size),\n                width: horizontal ? Math.abs(vpixels.size) : ipixels.size\n            };\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, bars[i].active ? 'active' : mode);\n            }\n            const options = properties.options || bars[i].options;\n            setBorderSkipped(properties, options, stack, index);\n            setInflateAmount(properties, options, ruler.ratio);\n            this.updateElement(bars[i], i, properties, mode);\n        }\n    }\n _getStacks(last, dataIndex) {\n        const { iScale  } = this._cachedMeta;\n        const metasets = iScale.getMatchingVisibleMetas(this._type).filter((meta)=>meta.controller.options.grouped);\n        const stacked = iScale.options.stacked;\n        const stacks = [];\n        const skipNull = (meta)=>{\n            const parsed = meta.controller.getParsed(dataIndex);\n            const val = parsed && parsed[meta.vScale.axis];\n            if (isNullOrUndef(val) || isNaN(val)) {\n                return true;\n            }\n        };\n        for (const meta of metasets){\n            if (dataIndex !== undefined && skipNull(meta)) {\n                continue;\n            }\n            if (stacked === false || stacks.indexOf(meta.stack) === -1 || stacked === undefined && meta.stack === undefined) {\n                stacks.push(meta.stack);\n            }\n            if (meta.index === last) {\n                break;\n            }\n        }\n        if (!stacks.length) {\n            stacks.push(undefined);\n        }\n        return stacks;\n    }\n _getStackCount(index) {\n        return this._getStacks(undefined, index).length;\n    }\n _getStackIndex(datasetIndex, name, dataIndex) {\n        const stacks = this._getStacks(datasetIndex, dataIndex);\n        const index = name !== undefined ? stacks.indexOf(name) : -1;\n        return index === -1 ? stacks.length - 1 : index;\n    }\n _getRuler() {\n        const opts = this.options;\n        const meta = this._cachedMeta;\n        const iScale = meta.iScale;\n        const pixels = [];\n        let i, ilen;\n        for(i = 0, ilen = meta.data.length; i < ilen; ++i){\n            pixels.push(iScale.getPixelForValue(this.getParsed(i)[iScale.axis], i));\n        }\n        const barThickness = opts.barThickness;\n        const min = barThickness || computeMinSampleSize(meta);\n        return {\n            min,\n            pixels,\n            start: iScale._startPixel,\n            end: iScale._endPixel,\n            stackCount: this._getStackCount(),\n            scale: iScale,\n            grouped: opts.grouped,\n            ratio: barThickness ? 1 : opts.categoryPercentage * opts.barPercentage\n        };\n    }\n _calculateBarValuePixels(index) {\n        const { _cachedMeta: { vScale , _stacked , index: datasetIndex  } , options: { base: baseValue , minBarLength  }  } = this;\n        const actualBase = baseValue || 0;\n        const parsed = this.getParsed(index);\n        const custom = parsed._custom;\n        const floating = isFloatBar(custom);\n        let value = parsed[vScale.axis];\n        let start = 0;\n        let length = _stacked ? this.applyStack(vScale, parsed, _stacked) : value;\n        let head, size;\n        if (length !== value) {\n            start = length - value;\n            length = value;\n        }\n        if (floating) {\n            value = custom.barStart;\n            length = custom.barEnd - custom.barStart;\n            if (value !== 0 && sign(value) !== sign(custom.barEnd)) {\n                start = 0;\n            }\n            start += value;\n        }\n        const startValue = !isNullOrUndef(baseValue) && !floating ? baseValue : start;\n        let base = vScale.getPixelForValue(startValue);\n        if (this.chart.getDataVisibility(index)) {\n            head = vScale.getPixelForValue(start + length);\n        } else {\n            head = base;\n        }\n        size = head - base;\n        if (Math.abs(size) < minBarLength) {\n            size = barSign(size, vScale, actualBase) * minBarLength;\n            if (value === actualBase) {\n                base -= size / 2;\n            }\n            const startPixel = vScale.getPixelForDecimal(0);\n            const endPixel = vScale.getPixelForDecimal(1);\n            const min = Math.min(startPixel, endPixel);\n            const max = Math.max(startPixel, endPixel);\n            base = Math.max(Math.min(base, max), min);\n            head = base + size;\n            if (_stacked && !floating) {\n                parsed._stacks[vScale.axis]._visualValues[datasetIndex] = vScale.getValueForPixel(head) - vScale.getValueForPixel(base);\n            }\n        }\n        if (base === vScale.getPixelForValue(actualBase)) {\n            const halfGrid = sign(size) * vScale.getLineWidthForValue(actualBase) / 2;\n            base += halfGrid;\n            size -= halfGrid;\n        }\n        return {\n            size,\n            base,\n            head,\n            center: head + size / 2\n        };\n    }\n _calculateBarIndexPixels(index, ruler) {\n        const scale = ruler.scale;\n        const options = this.options;\n        const skipNull = options.skipNull;\n        const maxBarThickness = valueOrDefault(options.maxBarThickness, Infinity);\n        let center, size;\n        if (ruler.grouped) {\n            const stackCount = skipNull ? this._getStackCount(index) : ruler.stackCount;\n            const range = options.barThickness === 'flex' ? computeFlexCategoryTraits(index, ruler, options, stackCount) : computeFitCategoryTraits(index, ruler, options, stackCount);\n            const stackIndex = this._getStackIndex(this.index, this._cachedMeta.stack, skipNull ? index : undefined);\n            center = range.start + range.chunk * stackIndex + range.chunk / 2;\n            size = Math.min(maxBarThickness, range.chunk * range.ratio);\n        } else {\n            center = scale.getPixelForValue(this.getParsed(index)[scale.axis], index);\n            size = Math.min(maxBarThickness, ruler.min * ruler.ratio);\n        }\n        return {\n            base: center - size / 2,\n            head: center + size / 2,\n            center,\n            size\n        };\n    }\n    draw() {\n        const meta = this._cachedMeta;\n        const vScale = meta.vScale;\n        const rects = meta.data;\n        const ilen = rects.length;\n        let i = 0;\n        for(; i < ilen; ++i){\n            if (this.getParsed(i)[vScale.axis] !== null) {\n                rects[i].draw(this._ctx);\n            }\n        }\n    }\n}\n\nclass BubbleController extends DatasetController {\n    static id = 'bubble';\n static defaults = {\n        datasetElementType: false,\n        dataElementType: 'point',\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'x',\n                    'y',\n                    'borderWidth',\n                    'radius'\n                ]\n            }\n        }\n    };\n static overrides = {\n        scales: {\n            x: {\n                type: 'linear'\n            },\n            y: {\n                type: 'linear'\n            }\n        }\n    };\n    initialize() {\n        this.enableOptionSharing = true;\n        super.initialize();\n    }\n parsePrimitiveData(meta, data, start, count) {\n        const parsed = super.parsePrimitiveData(meta, data, start, count);\n        for(let i = 0; i < parsed.length; i++){\n            parsed[i]._custom = this.resolveDataElementOptions(i + start).radius;\n        }\n        return parsed;\n    }\n parseArrayData(meta, data, start, count) {\n        const parsed = super.parseArrayData(meta, data, start, count);\n        for(let i = 0; i < parsed.length; i++){\n            const item = data[start + i];\n            parsed[i]._custom = valueOrDefault(item[2], this.resolveDataElementOptions(i + start).radius);\n        }\n        return parsed;\n    }\n parseObjectData(meta, data, start, count) {\n        const parsed = super.parseObjectData(meta, data, start, count);\n        for(let i = 0; i < parsed.length; i++){\n            const item = data[start + i];\n            parsed[i]._custom = valueOrDefault(item && item.r && +item.r, this.resolveDataElementOptions(i + start).radius);\n        }\n        return parsed;\n    }\n getMaxOverflow() {\n        const data = this._cachedMeta.data;\n        let max = 0;\n        for(let i = data.length - 1; i >= 0; --i){\n            max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n        }\n        return max > 0 && max;\n    }\n getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const labels = this.chart.data.labels || [];\n        const { xScale , yScale  } = meta;\n        const parsed = this.getParsed(index);\n        const x = xScale.getLabelForValue(parsed.x);\n        const y = yScale.getLabelForValue(parsed.y);\n        const r = parsed._custom;\n        return {\n            label: labels[index] || '',\n            value: '(' + x + ', ' + y + (r ? ', ' + r : '') + ')'\n        };\n    }\n    update(mode) {\n        const points = this._cachedMeta.data;\n        this.updateElements(points, 0, points.length, mode);\n    }\n    updateElements(points, start, count, mode) {\n        const reset = mode === 'reset';\n        const { iScale , vScale  } = this._cachedMeta;\n        const { sharedOptions , includeOptions  } = this._getSharedOptions(start, mode);\n        const iAxis = iScale.axis;\n        const vAxis = vScale.axis;\n        for(let i = start; i < start + count; i++){\n            const point = points[i];\n            const parsed = !reset && this.getParsed(i);\n            const properties = {};\n            const iPixel = properties[iAxis] = reset ? iScale.getPixelForDecimal(0.5) : iScale.getPixelForValue(parsed[iAxis]);\n            const vPixel = properties[vAxis] = reset ? vScale.getBasePixel() : vScale.getPixelForValue(parsed[vAxis]);\n            properties.skip = isNaN(iPixel) || isNaN(vPixel);\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n                if (reset) {\n                    properties.options.radius = 0;\n                }\n            }\n            this.updateElement(point, i, properties, mode);\n        }\n    }\n resolveDataElementOptions(index, mode) {\n        const parsed = this.getParsed(index);\n        let values = super.resolveDataElementOptions(index, mode);\n        if (values.$shared) {\n            values = Object.assign({}, values, {\n                $shared: false\n            });\n        }\n        const radius = values.radius;\n        if (mode !== 'active') {\n            values.radius = 0;\n        }\n        values.radius += valueOrDefault(parsed && parsed._custom, radius);\n        return values;\n    }\n}\n\nfunction getRatioAndOffset(rotation, circumference, cutout) {\n    let ratioX = 1;\n    let ratioY = 1;\n    let offsetX = 0;\n    let offsetY = 0;\n    if (circumference < TAU) {\n        const startAngle = rotation;\n        const endAngle = startAngle + circumference;\n        const startX = Math.cos(startAngle);\n        const startY = Math.sin(startAngle);\n        const endX = Math.cos(endAngle);\n        const endY = Math.sin(endAngle);\n        const calcMax = (angle, a, b)=>_angleBetween(angle, startAngle, endAngle, true) ? 1 : Math.max(a, a * cutout, b, b * cutout);\n        const calcMin = (angle, a, b)=>_angleBetween(angle, startAngle, endAngle, true) ? -1 : Math.min(a, a * cutout, b, b * cutout);\n        const maxX = calcMax(0, startX, endX);\n        const maxY = calcMax(HALF_PI, startY, endY);\n        const minX = calcMin(PI, startX, endX);\n        const minY = calcMin(PI + HALF_PI, startY, endY);\n        ratioX = (maxX - minX) / 2;\n        ratioY = (maxY - minY) / 2;\n        offsetX = -(maxX + minX) / 2;\n        offsetY = -(maxY + minY) / 2;\n    }\n    return {\n        ratioX,\n        ratioY,\n        offsetX,\n        offsetY\n    };\n}\nclass DoughnutController extends DatasetController {\n    static id = 'doughnut';\n static defaults = {\n        datasetElementType: false,\n        dataElementType: 'arc',\n        animation: {\n            animateRotate: true,\n            animateScale: false\n        },\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'circumference',\n                    'endAngle',\n                    'innerRadius',\n                    'outerRadius',\n                    'startAngle',\n                    'x',\n                    'y',\n                    'offset',\n                    'borderWidth',\n                    'spacing'\n                ]\n            }\n        },\n        cutout: '50%',\n        rotation: 0,\n        circumference: 360,\n        radius: '100%',\n        spacing: 0,\n        indexAxis: 'r'\n    };\n    static descriptors = {\n        _scriptable: (name)=>name !== 'spacing',\n        _indexable: (name)=>name !== 'spacing' && !name.startsWith('borderDash') && !name.startsWith('hoverBorderDash')\n    };\n static overrides = {\n        aspectRatio: 1,\n        plugins: {\n            legend: {\n                labels: {\n                    generateLabels (chart) {\n                        const data = chart.data;\n                        if (data.labels.length && data.datasets.length) {\n                            const { labels: { pointStyle , color  }  } = chart.legend.options;\n                            return data.labels.map((label, i)=>{\n                                const meta = chart.getDatasetMeta(0);\n                                const style = meta.controller.getStyle(i);\n                                return {\n                                    text: label,\n                                    fillStyle: style.backgroundColor,\n                                    strokeStyle: style.borderColor,\n                                    fontColor: color,\n                                    lineWidth: style.borderWidth,\n                                    pointStyle: pointStyle,\n                                    hidden: !chart.getDataVisibility(i),\n                                    index: i\n                                };\n                            });\n                        }\n                        return [];\n                    }\n                },\n                onClick (e, legendItem, legend) {\n                    legend.chart.toggleDataVisibility(legendItem.index);\n                    legend.chart.update();\n                }\n            }\n        }\n    };\n    constructor(chart, datasetIndex){\n        super(chart, datasetIndex);\n        this.enableOptionSharing = true;\n        this.innerRadius = undefined;\n        this.outerRadius = undefined;\n        this.offsetX = undefined;\n        this.offsetY = undefined;\n    }\n    linkScales() {}\n parse(start, count) {\n        const data = this.getDataset().data;\n        const meta = this._cachedMeta;\n        if (this._parsing === false) {\n            meta._parsed = data;\n        } else {\n            let getter = (i)=>+data[i];\n            if (isObject(data[start])) {\n                const { key ='value'  } = this._parsing;\n                getter = (i)=>+resolveObjectKey(data[i], key);\n            }\n            let i, ilen;\n            for(i = start, ilen = start + count; i < ilen; ++i){\n                meta._parsed[i] = getter(i);\n            }\n        }\n    }\n _getRotation() {\n        return toRadians(this.options.rotation - 90);\n    }\n _getCircumference() {\n        return toRadians(this.options.circumference);\n    }\n _getRotationExtents() {\n        let min = TAU;\n        let max = -TAU;\n        for(let i = 0; i < this.chart.data.datasets.length; ++i){\n            if (this.chart.isDatasetVisible(i) && this.chart.getDatasetMeta(i).type === this._type) {\n                const controller = this.chart.getDatasetMeta(i).controller;\n                const rotation = controller._getRotation();\n                const circumference = controller._getCircumference();\n                min = Math.min(min, rotation);\n                max = Math.max(max, rotation + circumference);\n            }\n        }\n        return {\n            rotation: min,\n            circumference: max - min\n        };\n    }\n update(mode) {\n        const chart = this.chart;\n        const { chartArea  } = chart;\n        const meta = this._cachedMeta;\n        const arcs = meta.data;\n        const spacing = this.getMaxBorderWidth() + this.getMaxOffset(arcs) + this.options.spacing;\n        const maxSize = Math.max((Math.min(chartArea.width, chartArea.height) - spacing) / 2, 0);\n        const cutout = Math.min(toPercentage(this.options.cutout, maxSize), 1);\n        const chartWeight = this._getRingWeight(this.index);\n        const { circumference , rotation  } = this._getRotationExtents();\n        const { ratioX , ratioY , offsetX , offsetY  } = getRatioAndOffset(rotation, circumference, cutout);\n        const maxWidth = (chartArea.width - spacing) / ratioX;\n        const maxHeight = (chartArea.height - spacing) / ratioY;\n        const maxRadius = Math.max(Math.min(maxWidth, maxHeight) / 2, 0);\n        const outerRadius = toDimension(this.options.radius, maxRadius);\n        const innerRadius = Math.max(outerRadius * cutout, 0);\n        const radiusLength = (outerRadius - innerRadius) / this._getVisibleDatasetWeightTotal();\n        this.offsetX = offsetX * outerRadius;\n        this.offsetY = offsetY * outerRadius;\n        meta.total = this.calculateTotal();\n        this.outerRadius = outerRadius - radiusLength * this._getRingWeightOffset(this.index);\n        this.innerRadius = Math.max(this.outerRadius - radiusLength * chartWeight, 0);\n        this.updateElements(arcs, 0, arcs.length, mode);\n    }\n _circumference(i, reset) {\n        const opts = this.options;\n        const meta = this._cachedMeta;\n        const circumference = this._getCircumference();\n        if (reset && opts.animation.animateRotate || !this.chart.getDataVisibility(i) || meta._parsed[i] === null || meta.data[i].hidden) {\n            return 0;\n        }\n        return this.calculateCircumference(meta._parsed[i] * circumference / TAU);\n    }\n    updateElements(arcs, start, count, mode) {\n        const reset = mode === 'reset';\n        const chart = this.chart;\n        const chartArea = chart.chartArea;\n        const opts = chart.options;\n        const animationOpts = opts.animation;\n        const centerX = (chartArea.left + chartArea.right) / 2;\n        const centerY = (chartArea.top + chartArea.bottom) / 2;\n        const animateScale = reset && animationOpts.animateScale;\n        const innerRadius = animateScale ? 0 : this.innerRadius;\n        const outerRadius = animateScale ? 0 : this.outerRadius;\n        const { sharedOptions , includeOptions  } = this._getSharedOptions(start, mode);\n        let startAngle = this._getRotation();\n        let i;\n        for(i = 0; i < start; ++i){\n            startAngle += this._circumference(i, reset);\n        }\n        for(i = start; i < start + count; ++i){\n            const circumference = this._circumference(i, reset);\n            const arc = arcs[i];\n            const properties = {\n                x: centerX + this.offsetX,\n                y: centerY + this.offsetY,\n                startAngle,\n                endAngle: startAngle + circumference,\n                circumference,\n                outerRadius,\n                innerRadius\n            };\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, arc.active ? 'active' : mode);\n            }\n            startAngle += circumference;\n            this.updateElement(arc, i, properties, mode);\n        }\n    }\n    calculateTotal() {\n        const meta = this._cachedMeta;\n        const metaData = meta.data;\n        let total = 0;\n        let i;\n        for(i = 0; i < metaData.length; i++){\n            const value = meta._parsed[i];\n            if (value !== null && !isNaN(value) && this.chart.getDataVisibility(i) && !metaData[i].hidden) {\n                total += Math.abs(value);\n            }\n        }\n        return total;\n    }\n    calculateCircumference(value) {\n        const total = this._cachedMeta.total;\n        if (total > 0 && !isNaN(value)) {\n            return TAU * (Math.abs(value) / total);\n        }\n        return 0;\n    }\n    getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const chart = this.chart;\n        const labels = chart.data.labels || [];\n        const value = formatNumber(meta._parsed[index], chart.options.locale);\n        return {\n            label: labels[index] || '',\n            value\n        };\n    }\n    getMaxBorderWidth(arcs) {\n        let max = 0;\n        const chart = this.chart;\n        let i, ilen, meta, controller, options;\n        if (!arcs) {\n            for(i = 0, ilen = chart.data.datasets.length; i < ilen; ++i){\n                if (chart.isDatasetVisible(i)) {\n                    meta = chart.getDatasetMeta(i);\n                    arcs = meta.data;\n                    controller = meta.controller;\n                    break;\n                }\n            }\n        }\n        if (!arcs) {\n            return 0;\n        }\n        for(i = 0, ilen = arcs.length; i < ilen; ++i){\n            options = controller.resolveDataElementOptions(i);\n            if (options.borderAlign !== 'inner') {\n                max = Math.max(max, options.borderWidth || 0, options.hoverBorderWidth || 0);\n            }\n        }\n        return max;\n    }\n    getMaxOffset(arcs) {\n        let max = 0;\n        for(let i = 0, ilen = arcs.length; i < ilen; ++i){\n            const options = this.resolveDataElementOptions(i);\n            max = Math.max(max, options.offset || 0, options.hoverOffset || 0);\n        }\n        return max;\n    }\n _getRingWeightOffset(datasetIndex) {\n        let ringWeightOffset = 0;\n        for(let i = 0; i < datasetIndex; ++i){\n            if (this.chart.isDatasetVisible(i)) {\n                ringWeightOffset += this._getRingWeight(i);\n            }\n        }\n        return ringWeightOffset;\n    }\n _getRingWeight(datasetIndex) {\n        return Math.max(valueOrDefault(this.chart.data.datasets[datasetIndex].weight, 1), 0);\n    }\n _getVisibleDatasetWeightTotal() {\n        return this._getRingWeightOffset(this.chart.data.datasets.length) || 1;\n    }\n}\n\nclass LineController extends DatasetController {\n    static id = 'line';\n static defaults = {\n        datasetElementType: 'line',\n        dataElementType: 'point',\n        showLine: true,\n        spanGaps: false\n    };\n static overrides = {\n        scales: {\n            _index_: {\n                type: 'category'\n            },\n            _value_: {\n                type: 'linear'\n            }\n        }\n    };\n    initialize() {\n        this.enableOptionSharing = true;\n        this.supportsDecimation = true;\n        super.initialize();\n    }\n    update(mode) {\n        const meta = this._cachedMeta;\n        const { dataset: line , data: points = [] , _dataset  } = meta;\n        const animationsDisabled = this.chart._animationsDisabled;\n        let { start , count  } = _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n        this._drawStart = start;\n        this._drawCount = count;\n        if (_scaleRangesChanged(meta)) {\n            start = 0;\n            count = points.length;\n        }\n        line._chart = this.chart;\n        line._datasetIndex = this.index;\n        line._decimated = !!_dataset._decimated;\n        line.points = points;\n        const options = this.resolveDatasetElementOptions(mode);\n        if (!this.options.showLine) {\n            options.borderWidth = 0;\n        }\n        options.segment = this.options.segment;\n        this.updateElement(line, undefined, {\n            animated: !animationsDisabled,\n            options\n        }, mode);\n        this.updateElements(points, start, count, mode);\n    }\n    updateElements(points, start, count, mode) {\n        const reset = mode === 'reset';\n        const { iScale , vScale , _stacked , _dataset  } = this._cachedMeta;\n        const { sharedOptions , includeOptions  } = this._getSharedOptions(start, mode);\n        const iAxis = iScale.axis;\n        const vAxis = vScale.axis;\n        const { spanGaps , segment  } = this.options;\n        const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n        const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n        const end = start + count;\n        const pointsCount = points.length;\n        let prevParsed = start > 0 && this.getParsed(start - 1);\n        for(let i = 0; i < pointsCount; ++i){\n            const point = points[i];\n            const properties = directUpdate ? point : {};\n            if (i < start || i >= end) {\n                properties.skip = true;\n                continue;\n            }\n            const parsed = this.getParsed(i);\n            const nullData = isNullOrUndef(parsed[vAxis]);\n            const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n            const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n            properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n            properties.stop = i > 0 && Math.abs(parsed[iAxis] - prevParsed[iAxis]) > maxGapLength;\n            if (segment) {\n                properties.parsed = parsed;\n                properties.raw = _dataset.data[i];\n            }\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n            }\n            if (!directUpdate) {\n                this.updateElement(point, i, properties, mode);\n            }\n            prevParsed = parsed;\n        }\n    }\n getMaxOverflow() {\n        const meta = this._cachedMeta;\n        const dataset = meta.dataset;\n        const border = dataset.options && dataset.options.borderWidth || 0;\n        const data = meta.data || [];\n        if (!data.length) {\n            return border;\n        }\n        const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n        const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n        return Math.max(border, firstPoint, lastPoint) / 2;\n    }\n    draw() {\n        const meta = this._cachedMeta;\n        meta.dataset.updateControlPoints(this.chart.chartArea, meta.iScale.axis);\n        super.draw();\n    }\n}\n\nclass PolarAreaController extends DatasetController {\n    static id = 'polarArea';\n static defaults = {\n        dataElementType: 'arc',\n        animation: {\n            animateRotate: true,\n            animateScale: true\n        },\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'x',\n                    'y',\n                    'startAngle',\n                    'endAngle',\n                    'innerRadius',\n                    'outerRadius'\n                ]\n            }\n        },\n        indexAxis: 'r',\n        startAngle: 0\n    };\n static overrides = {\n        aspectRatio: 1,\n        plugins: {\n            legend: {\n                labels: {\n                    generateLabels (chart) {\n                        const data = chart.data;\n                        if (data.labels.length && data.datasets.length) {\n                            const { labels: { pointStyle , color  }  } = chart.legend.options;\n                            return data.labels.map((label, i)=>{\n                                const meta = chart.getDatasetMeta(0);\n                                const style = meta.controller.getStyle(i);\n                                return {\n                                    text: label,\n                                    fillStyle: style.backgroundColor,\n                                    strokeStyle: style.borderColor,\n                                    fontColor: color,\n                                    lineWidth: style.borderWidth,\n                                    pointStyle: pointStyle,\n                                    hidden: !chart.getDataVisibility(i),\n                                    index: i\n                                };\n                            });\n                        }\n                        return [];\n                    }\n                },\n                onClick (e, legendItem, legend) {\n                    legend.chart.toggleDataVisibility(legendItem.index);\n                    legend.chart.update();\n                }\n            }\n        },\n        scales: {\n            r: {\n                type: 'radialLinear',\n                angleLines: {\n                    display: false\n                },\n                beginAtZero: true,\n                grid: {\n                    circular: true\n                },\n                pointLabels: {\n                    display: false\n                },\n                startAngle: 0\n            }\n        }\n    };\n    constructor(chart, datasetIndex){\n        super(chart, datasetIndex);\n        this.innerRadius = undefined;\n        this.outerRadius = undefined;\n    }\n    getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const chart = this.chart;\n        const labels = chart.data.labels || [];\n        const value = formatNumber(meta._parsed[index].r, chart.options.locale);\n        return {\n            label: labels[index] || '',\n            value\n        };\n    }\n    parseObjectData(meta, data, start, count) {\n        return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n    }\n    update(mode) {\n        const arcs = this._cachedMeta.data;\n        this._updateRadius();\n        this.updateElements(arcs, 0, arcs.length, mode);\n    }\n getMinMax() {\n        const meta = this._cachedMeta;\n        const range = {\n            min: Number.POSITIVE_INFINITY,\n            max: Number.NEGATIVE_INFINITY\n        };\n        meta.data.forEach((element, index)=>{\n            const parsed = this.getParsed(index).r;\n            if (!isNaN(parsed) && this.chart.getDataVisibility(index)) {\n                if (parsed < range.min) {\n                    range.min = parsed;\n                }\n                if (parsed > range.max) {\n                    range.max = parsed;\n                }\n            }\n        });\n        return range;\n    }\n _updateRadius() {\n        const chart = this.chart;\n        const chartArea = chart.chartArea;\n        const opts = chart.options;\n        const minSize = Math.min(chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);\n        const outerRadius = Math.max(minSize / 2, 0);\n        const innerRadius = Math.max(opts.cutoutPercentage ? outerRadius / 100 * opts.cutoutPercentage : 1, 0);\n        const radiusLength = (outerRadius - innerRadius) / chart.getVisibleDatasetCount();\n        this.outerRadius = outerRadius - radiusLength * this.index;\n        this.innerRadius = this.outerRadius - radiusLength;\n    }\n    updateElements(arcs, start, count, mode) {\n        const reset = mode === 'reset';\n        const chart = this.chart;\n        const opts = chart.options;\n        const animationOpts = opts.animation;\n        const scale = this._cachedMeta.rScale;\n        const centerX = scale.xCenter;\n        const centerY = scale.yCenter;\n        const datasetStartAngle = scale.getIndexAngle(0) - 0.5 * PI;\n        let angle = datasetStartAngle;\n        let i;\n        const defaultAngle = 360 / this.countVisibleElements();\n        for(i = 0; i < start; ++i){\n            angle += this._computeAngle(i, mode, defaultAngle);\n        }\n        for(i = start; i < start + count; i++){\n            const arc = arcs[i];\n            let startAngle = angle;\n            let endAngle = angle + this._computeAngle(i, mode, defaultAngle);\n            let outerRadius = chart.getDataVisibility(i) ? scale.getDistanceFromCenterForValue(this.getParsed(i).r) : 0;\n            angle = endAngle;\n            if (reset) {\n                if (animationOpts.animateScale) {\n                    outerRadius = 0;\n                }\n                if (animationOpts.animateRotate) {\n                    startAngle = endAngle = datasetStartAngle;\n                }\n            }\n            const properties = {\n                x: centerX,\n                y: centerY,\n                innerRadius: 0,\n                outerRadius,\n                startAngle,\n                endAngle,\n                options: this.resolveDataElementOptions(i, arc.active ? 'active' : mode)\n            };\n            this.updateElement(arc, i, properties, mode);\n        }\n    }\n    countVisibleElements() {\n        const meta = this._cachedMeta;\n        let count = 0;\n        meta.data.forEach((element, index)=>{\n            if (!isNaN(this.getParsed(index).r) && this.chart.getDataVisibility(index)) {\n                count++;\n            }\n        });\n        return count;\n    }\n _computeAngle(index, mode, defaultAngle) {\n        return this.chart.getDataVisibility(index) ? toRadians(this.resolveDataElementOptions(index, mode).angle || defaultAngle) : 0;\n    }\n}\n\nclass PieController extends DoughnutController {\n    static id = 'pie';\n static defaults = {\n        cutout: 0,\n        rotation: 0,\n        circumference: 360,\n        radius: '100%'\n    };\n}\n\nclass RadarController extends DatasetController {\n    static id = 'radar';\n static defaults = {\n        datasetElementType: 'line',\n        dataElementType: 'point',\n        indexAxis: 'r',\n        showLine: true,\n        elements: {\n            line: {\n                fill: 'start'\n            }\n        }\n    };\n static overrides = {\n        aspectRatio: 1,\n        scales: {\n            r: {\n                type: 'radialLinear'\n            }\n        }\n    };\n getLabelAndValue(index) {\n        const vScale = this._cachedMeta.vScale;\n        const parsed = this.getParsed(index);\n        return {\n            label: vScale.getLabels()[index],\n            value: '' + vScale.getLabelForValue(parsed[vScale.axis])\n        };\n    }\n    parseObjectData(meta, data, start, count) {\n        return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n    }\n    update(mode) {\n        const meta = this._cachedMeta;\n        const line = meta.dataset;\n        const points = meta.data || [];\n        const labels = meta.iScale.getLabels();\n        line.points = points;\n        if (mode !== 'resize') {\n            const options = this.resolveDatasetElementOptions(mode);\n            if (!this.options.showLine) {\n                options.borderWidth = 0;\n            }\n            const properties = {\n                _loop: true,\n                _fullLoop: labels.length === points.length,\n                options\n            };\n            this.updateElement(line, undefined, properties, mode);\n        }\n        this.updateElements(points, 0, points.length, mode);\n    }\n    updateElements(points, start, count, mode) {\n        const scale = this._cachedMeta.rScale;\n        const reset = mode === 'reset';\n        for(let i = start; i < start + count; i++){\n            const point = points[i];\n            const options = this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n            const pointPosition = scale.getPointPositionForValue(i, this.getParsed(i).r);\n            const x = reset ? scale.xCenter : pointPosition.x;\n            const y = reset ? scale.yCenter : pointPosition.y;\n            const properties = {\n                x,\n                y,\n                angle: pointPosition.angle,\n                skip: isNaN(x) || isNaN(y),\n                options\n            };\n            this.updateElement(point, i, properties, mode);\n        }\n    }\n}\n\nclass ScatterController extends DatasetController {\n    static id = 'scatter';\n static defaults = {\n        datasetElementType: false,\n        dataElementType: 'point',\n        showLine: false,\n        fill: false\n    };\n static overrides = {\n        interaction: {\n            mode: 'point'\n        },\n        scales: {\n            x: {\n                type: 'linear'\n            },\n            y: {\n                type: 'linear'\n            }\n        }\n    };\n getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const labels = this.chart.data.labels || [];\n        const { xScale , yScale  } = meta;\n        const parsed = this.getParsed(index);\n        const x = xScale.getLabelForValue(parsed.x);\n        const y = yScale.getLabelForValue(parsed.y);\n        return {\n            label: labels[index] || '',\n            value: '(' + x + ', ' + y + ')'\n        };\n    }\n    update(mode) {\n        const meta = this._cachedMeta;\n        const { data: points = []  } = meta;\n        const animationsDisabled = this.chart._animationsDisabled;\n        let { start , count  } = _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n        this._drawStart = start;\n        this._drawCount = count;\n        if (_scaleRangesChanged(meta)) {\n            start = 0;\n            count = points.length;\n        }\n        if (this.options.showLine) {\n            const { dataset: line , _dataset  } = meta;\n            line._chart = this.chart;\n            line._datasetIndex = this.index;\n            line._decimated = !!_dataset._decimated;\n            line.points = points;\n            const options = this.resolveDatasetElementOptions(mode);\n            options.segment = this.options.segment;\n            this.updateElement(line, undefined, {\n                animated: !animationsDisabled,\n                options\n            }, mode);\n        }\n        this.updateElements(points, start, count, mode);\n    }\n    addElements() {\n        const { showLine  } = this.options;\n        if (!this.datasetElementType && showLine) {\n            this.datasetElementType = this.chart.registry.getElement('line');\n        }\n        super.addElements();\n    }\n    updateElements(points, start, count, mode) {\n        const reset = mode === 'reset';\n        const { iScale , vScale , _stacked , _dataset  } = this._cachedMeta;\n        const firstOpts = this.resolveDataElementOptions(start, mode);\n        const sharedOptions = this.getSharedOptions(firstOpts);\n        const includeOptions = this.includeOptions(mode, sharedOptions);\n        const iAxis = iScale.axis;\n        const vAxis = vScale.axis;\n        const { spanGaps , segment  } = this.options;\n        const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n        const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n        let prevParsed = start > 0 && this.getParsed(start - 1);\n        for(let i = start; i < start + count; ++i){\n            const point = points[i];\n            const parsed = this.getParsed(i);\n            const properties = directUpdate ? point : {};\n            const nullData = isNullOrUndef(parsed[vAxis]);\n            const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n            const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n            properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n            properties.stop = i > 0 && Math.abs(parsed[iAxis] - prevParsed[iAxis]) > maxGapLength;\n            if (segment) {\n                properties.parsed = parsed;\n                properties.raw = _dataset.data[i];\n            }\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n            }\n            if (!directUpdate) {\n                this.updateElement(point, i, properties, mode);\n            }\n            prevParsed = parsed;\n        }\n        this.updateSharedOptions(sharedOptions, mode, firstOpts);\n    }\n getMaxOverflow() {\n        const meta = this._cachedMeta;\n        const data = meta.data || [];\n        if (!this.options.showLine) {\n            let max = 0;\n            for(let i = data.length - 1; i >= 0; --i){\n                max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n            }\n            return max > 0 && max;\n        }\n        const dataset = meta.dataset;\n        const border = dataset.options && dataset.options.borderWidth || 0;\n        if (!data.length) {\n            return border;\n        }\n        const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n        const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n        return Math.max(border, firstPoint, lastPoint) / 2;\n    }\n}\n\nvar controllers = /*#__PURE__*/Object.freeze({\n__proto__: null,\nBarController: BarController,\nBubbleController: BubbleController,\nDoughnutController: DoughnutController,\nLineController: LineController,\nPieController: PieController,\nPolarAreaController: PolarAreaController,\nRadarController: RadarController,\nScatterController: ScatterController\n});\n\n/**\n * @namespace Chart._adapters\n * @since 2.8.0\n * @private\n */ function abstract() {\n    throw new Error('This method is not implemented: Check that a complete date adapter is provided.');\n}\n/**\n * Date adapter (current used by the time scale)\n * @namespace Chart._adapters._date\n * @memberof Chart._adapters\n * @private\n */ class DateAdapterBase {\n    /**\n   * Override default date adapter methods.\n   * Accepts type parameter to define options type.\n   * @example\n   * Chart._adapters._date.override<{myAdapterOption: string}>({\n   *   init() {\n   *     console.log(this.options.myAdapterOption);\n   *   }\n   * })\n   */ static override(members) {\n        Object.assign(DateAdapterBase.prototype, members);\n    }\n    options;\n    constructor(options){\n        this.options = options || {};\n    }\n    // eslint-disable-next-line @typescript-eslint/no-empty-function\n    init() {}\n    formats() {\n        return abstract();\n    }\n    parse() {\n        return abstract();\n    }\n    format() {\n        return abstract();\n    }\n    add() {\n        return abstract();\n    }\n    diff() {\n        return abstract();\n    }\n    startOf() {\n        return abstract();\n    }\n    endOf() {\n        return abstract();\n    }\n}\nvar adapters = {\n    _date: DateAdapterBase\n};\n\nfunction binarySearch(metaset, axis, value, intersect) {\n    const { controller , data , _sorted  } = metaset;\n    const iScale = controller._cachedMeta.iScale;\n    if (iScale && axis === iScale.axis && axis !== 'r' && _sorted && data.length) {\n        const lookupMethod = iScale._reversePixels ? _rlookupByKey : _lookupByKey;\n        if (!intersect) {\n            return lookupMethod(data, axis, value);\n        } else if (controller._sharedOptions) {\n            const el = data[0];\n            const range = typeof el.getRange === 'function' && el.getRange(axis);\n            if (range) {\n                const start = lookupMethod(data, axis, value - range);\n                const end = lookupMethod(data, axis, value + range);\n                return {\n                    lo: start.lo,\n                    hi: end.hi\n                };\n            }\n        }\n    }\n    return {\n        lo: 0,\n        hi: data.length - 1\n    };\n}\n function evaluateInteractionItems(chart, axis, position, handler, intersect) {\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    const value = position[axis];\n    for(let i = 0, ilen = metasets.length; i < ilen; ++i){\n        const { index , data  } = metasets[i];\n        const { lo , hi  } = binarySearch(metasets[i], axis, value, intersect);\n        for(let j = lo; j <= hi; ++j){\n            const element = data[j];\n            if (!element.skip) {\n                handler(element, index, j);\n            }\n        }\n    }\n}\n function getDistanceMetricForAxis(axis) {\n    const useX = axis.indexOf('x') !== -1;\n    const useY = axis.indexOf('y') !== -1;\n    return function(pt1, pt2) {\n        const deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;\n        const deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;\n        return Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));\n    };\n}\n function getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) {\n    const items = [];\n    if (!includeInvisible && !chart.isPointInArea(position)) {\n        return items;\n    }\n    const evaluationFunc = function(element, datasetIndex, index) {\n        if (!includeInvisible && !_isPointInArea(element, chart.chartArea, 0)) {\n            return;\n        }\n        if (element.inRange(position.x, position.y, useFinalPosition)) {\n            items.push({\n                element,\n                datasetIndex,\n                index\n            });\n        }\n    };\n    evaluateInteractionItems(chart, axis, position, evaluationFunc, true);\n    return items;\n}\n function getNearestRadialItems(chart, position, axis, useFinalPosition) {\n    let items = [];\n    function evaluationFunc(element, datasetIndex, index) {\n        const { startAngle , endAngle  } = element.getProps([\n            'startAngle',\n            'endAngle'\n        ], useFinalPosition);\n        const { angle  } = getAngleFromPoint(element, {\n            x: position.x,\n            y: position.y\n        });\n        if (_angleBetween(angle, startAngle, endAngle)) {\n            items.push({\n                element,\n                datasetIndex,\n                index\n            });\n        }\n    }\n    evaluateInteractionItems(chart, axis, position, evaluationFunc);\n    return items;\n}\n function getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n    let items = [];\n    const distanceMetric = getDistanceMetricForAxis(axis);\n    let minDistance = Number.POSITIVE_INFINITY;\n    function evaluationFunc(element, datasetIndex, index) {\n        const inRange = element.inRange(position.x, position.y, useFinalPosition);\n        if (intersect && !inRange) {\n            return;\n        }\n        const center = element.getCenterPoint(useFinalPosition);\n        const pointInArea = !!includeInvisible || chart.isPointInArea(center);\n        if (!pointInArea && !inRange) {\n            return;\n        }\n        const distance = distanceMetric(position, center);\n        if (distance < minDistance) {\n            items = [\n                {\n                    element,\n                    datasetIndex,\n                    index\n                }\n            ];\n            minDistance = distance;\n        } else if (distance === minDistance) {\n            items.push({\n                element,\n                datasetIndex,\n                index\n            });\n        }\n    }\n    evaluateInteractionItems(chart, axis, position, evaluationFunc);\n    return items;\n}\n function getNearestItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n    if (!includeInvisible && !chart.isPointInArea(position)) {\n        return [];\n    }\n    return axis === 'r' && !intersect ? getNearestRadialItems(chart, position, axis, useFinalPosition) : getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible);\n}\n function getAxisItems(chart, position, axis, intersect, useFinalPosition) {\n    const items = [];\n    const rangeMethod = axis === 'x' ? 'inXRange' : 'inYRange';\n    let intersectsItem = false;\n    evaluateInteractionItems(chart, axis, position, (element, datasetIndex, index)=>{\n        if (element[rangeMethod](position[axis], useFinalPosition)) {\n            items.push({\n                element,\n                datasetIndex,\n                index\n            });\n            intersectsItem = intersectsItem || element.inRange(position.x, position.y, useFinalPosition);\n        }\n    });\n    if (intersect && !intersectsItem) {\n        return [];\n    }\n    return items;\n}\n var Interaction = {\n    evaluateInteractionItems,\n    modes: {\n index (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            const axis = options.axis || 'x';\n            const includeInvisible = options.includeInvisible || false;\n            const items = options.intersect ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) : getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n            const elements = [];\n            if (!items.length) {\n                return [];\n            }\n            chart.getSortedVisibleDatasetMetas().forEach((meta)=>{\n                const index = items[0].index;\n                const element = meta.data[index];\n                if (element && !element.skip) {\n                    elements.push({\n                        element,\n                        datasetIndex: meta.index,\n                        index\n                    });\n                }\n            });\n            return elements;\n        },\n dataset (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            const axis = options.axis || 'xy';\n            const includeInvisible = options.includeInvisible || false;\n            let items = options.intersect ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) : getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n            if (items.length > 0) {\n                const datasetIndex = items[0].datasetIndex;\n                const data = chart.getDatasetMeta(datasetIndex).data;\n                items = [];\n                for(let i = 0; i < data.length; ++i){\n                    items.push({\n                        element: data[i],\n                        datasetIndex,\n                        index: i\n                    });\n                }\n            }\n            return items;\n        },\n point (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            const axis = options.axis || 'xy';\n            const includeInvisible = options.includeInvisible || false;\n            return getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible);\n        },\n nearest (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            const axis = options.axis || 'xy';\n            const includeInvisible = options.includeInvisible || false;\n            return getNearestItems(chart, position, axis, options.intersect, useFinalPosition, includeInvisible);\n        },\n x (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            return getAxisItems(chart, position, 'x', options.intersect, useFinalPosition);\n        },\n y (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            return getAxisItems(chart, position, 'y', options.intersect, useFinalPosition);\n        }\n    }\n};\n\nconst STATIC_POSITIONS = [\n    'left',\n    'top',\n    'right',\n    'bottom'\n];\nfunction filterByPosition(array, position) {\n    return array.filter((v)=>v.pos === position);\n}\nfunction filterDynamicPositionByAxis(array, axis) {\n    return array.filter((v)=>STATIC_POSITIONS.indexOf(v.pos) === -1 && v.box.axis === axis);\n}\nfunction sortByWeight(array, reverse) {\n    return array.sort((a, b)=>{\n        const v0 = reverse ? b : a;\n        const v1 = reverse ? a : b;\n        return v0.weight === v1.weight ? v0.index - v1.index : v0.weight - v1.weight;\n    });\n}\nfunction wrapBoxes(boxes) {\n    const layoutBoxes = [];\n    let i, ilen, box, pos, stack, stackWeight;\n    for(i = 0, ilen = (boxes || []).length; i < ilen; ++i){\n        box = boxes[i];\n        ({ position: pos , options: { stack , stackWeight =1  }  } = box);\n        layoutBoxes.push({\n            index: i,\n            box,\n            pos,\n            horizontal: box.isHorizontal(),\n            weight: box.weight,\n            stack: stack && pos + stack,\n            stackWeight\n        });\n    }\n    return layoutBoxes;\n}\nfunction buildStacks(layouts) {\n    const stacks = {};\n    for (const wrap of layouts){\n        const { stack , pos , stackWeight  } = wrap;\n        if (!stack || !STATIC_POSITIONS.includes(pos)) {\n            continue;\n        }\n        const _stack = stacks[stack] || (stacks[stack] = {\n            count: 0,\n            placed: 0,\n            weight: 0,\n            size: 0\n        });\n        _stack.count++;\n        _stack.weight += stackWeight;\n    }\n    return stacks;\n}\n function setLayoutDims(layouts, params) {\n    const stacks = buildStacks(layouts);\n    const { vBoxMaxWidth , hBoxMaxHeight  } = params;\n    let i, ilen, layout;\n    for(i = 0, ilen = layouts.length; i < ilen; ++i){\n        layout = layouts[i];\n        const { fullSize  } = layout.box;\n        const stack = stacks[layout.stack];\n        const factor = stack && layout.stackWeight / stack.weight;\n        if (layout.horizontal) {\n            layout.width = factor ? factor * vBoxMaxWidth : fullSize && params.availableWidth;\n            layout.height = hBoxMaxHeight;\n        } else {\n            layout.width = vBoxMaxWidth;\n            layout.height = factor ? factor * hBoxMaxHeight : fullSize && params.availableHeight;\n        }\n    }\n    return stacks;\n}\nfunction buildLayoutBoxes(boxes) {\n    const layoutBoxes = wrapBoxes(boxes);\n    const fullSize = sortByWeight(layoutBoxes.filter((wrap)=>wrap.box.fullSize), true);\n    const left = sortByWeight(filterByPosition(layoutBoxes, 'left'), true);\n    const right = sortByWeight(filterByPosition(layoutBoxes, 'right'));\n    const top = sortByWeight(filterByPosition(layoutBoxes, 'top'), true);\n    const bottom = sortByWeight(filterByPosition(layoutBoxes, 'bottom'));\n    const centerHorizontal = filterDynamicPositionByAxis(layoutBoxes, 'x');\n    const centerVertical = filterDynamicPositionByAxis(layoutBoxes, 'y');\n    return {\n        fullSize,\n        leftAndTop: left.concat(top),\n        rightAndBottom: right.concat(centerVertical).concat(bottom).concat(centerHorizontal),\n        chartArea: filterByPosition(layoutBoxes, 'chartArea'),\n        vertical: left.concat(right).concat(centerVertical),\n        horizontal: top.concat(bottom).concat(centerHorizontal)\n    };\n}\nfunction getCombinedMax(maxPadding, chartArea, a, b) {\n    return Math.max(maxPadding[a], chartArea[a]) + Math.max(maxPadding[b], chartArea[b]);\n}\nfunction updateMaxPadding(maxPadding, boxPadding) {\n    maxPadding.top = Math.max(maxPadding.top, boxPadding.top);\n    maxPadding.left = Math.max(maxPadding.left, boxPadding.left);\n    maxPadding.bottom = Math.max(maxPadding.bottom, boxPadding.bottom);\n    maxPadding.right = Math.max(maxPadding.right, boxPadding.right);\n}\nfunction updateDims(chartArea, params, layout, stacks) {\n    const { pos , box  } = layout;\n    const maxPadding = chartArea.maxPadding;\n    if (!isObject(pos)) {\n        if (layout.size) {\n            chartArea[pos] -= layout.size;\n        }\n        const stack = stacks[layout.stack] || {\n            size: 0,\n            count: 1\n        };\n        stack.size = Math.max(stack.size, layout.horizontal ? box.height : box.width);\n        layout.size = stack.size / stack.count;\n        chartArea[pos] += layout.size;\n    }\n    if (box.getPadding) {\n        updateMaxPadding(maxPadding, box.getPadding());\n    }\n    const newWidth = Math.max(0, params.outerWidth - getCombinedMax(maxPadding, chartArea, 'left', 'right'));\n    const newHeight = Math.max(0, params.outerHeight - getCombinedMax(maxPadding, chartArea, 'top', 'bottom'));\n    const widthChanged = newWidth !== chartArea.w;\n    const heightChanged = newHeight !== chartArea.h;\n    chartArea.w = newWidth;\n    chartArea.h = newHeight;\n    return layout.horizontal ? {\n        same: widthChanged,\n        other: heightChanged\n    } : {\n        same: heightChanged,\n        other: widthChanged\n    };\n}\nfunction handleMaxPadding(chartArea) {\n    const maxPadding = chartArea.maxPadding;\n    function updatePos(pos) {\n        const change = Math.max(maxPadding[pos] - chartArea[pos], 0);\n        chartArea[pos] += change;\n        return change;\n    }\n    chartArea.y += updatePos('top');\n    chartArea.x += updatePos('left');\n    updatePos('right');\n    updatePos('bottom');\n}\nfunction getMargins(horizontal, chartArea) {\n    const maxPadding = chartArea.maxPadding;\n    function marginForPositions(positions) {\n        const margin = {\n            left: 0,\n            top: 0,\n            right: 0,\n            bottom: 0\n        };\n        positions.forEach((pos)=>{\n            margin[pos] = Math.max(chartArea[pos], maxPadding[pos]);\n        });\n        return margin;\n    }\n    return horizontal ? marginForPositions([\n        'left',\n        'right'\n    ]) : marginForPositions([\n        'top',\n        'bottom'\n    ]);\n}\nfunction fitBoxes(boxes, chartArea, params, stacks) {\n    const refitBoxes = [];\n    let i, ilen, layout, box, refit, changed;\n    for(i = 0, ilen = boxes.length, refit = 0; i < ilen; ++i){\n        layout = boxes[i];\n        box = layout.box;\n        box.update(layout.width || chartArea.w, layout.height || chartArea.h, getMargins(layout.horizontal, chartArea));\n        const { same , other  } = updateDims(chartArea, params, layout, stacks);\n        refit |= same && refitBoxes.length;\n        changed = changed || other;\n        if (!box.fullSize) {\n            refitBoxes.push(layout);\n        }\n    }\n    return refit && fitBoxes(refitBoxes, chartArea, params, stacks) || changed;\n}\nfunction setBoxDims(box, left, top, width, height) {\n    box.top = top;\n    box.left = left;\n    box.right = left + width;\n    box.bottom = top + height;\n    box.width = width;\n    box.height = height;\n}\nfunction placeBoxes(boxes, chartArea, params, stacks) {\n    const userPadding = params.padding;\n    let { x , y  } = chartArea;\n    for (const layout of boxes){\n        const box = layout.box;\n        const stack = stacks[layout.stack] || {\n            count: 1,\n            placed: 0,\n            weight: 1\n        };\n        const weight = layout.stackWeight / stack.weight || 1;\n        if (layout.horizontal) {\n            const width = chartArea.w * weight;\n            const height = stack.size || box.height;\n            if (defined(stack.start)) {\n                y = stack.start;\n            }\n            if (box.fullSize) {\n                setBoxDims(box, userPadding.left, y, params.outerWidth - userPadding.right - userPadding.left, height);\n            } else {\n                setBoxDims(box, chartArea.left + stack.placed, y, width, height);\n            }\n            stack.start = y;\n            stack.placed += width;\n            y = box.bottom;\n        } else {\n            const height = chartArea.h * weight;\n            const width = stack.size || box.width;\n            if (defined(stack.start)) {\n                x = stack.start;\n            }\n            if (box.fullSize) {\n                setBoxDims(box, x, userPadding.top, width, params.outerHeight - userPadding.bottom - userPadding.top);\n            } else {\n                setBoxDims(box, x, chartArea.top + stack.placed, width, height);\n            }\n            stack.start = x;\n            stack.placed += height;\n            x = box.right;\n        }\n    }\n    chartArea.x = x;\n    chartArea.y = y;\n}\nvar layouts = {\n addBox (chart, item) {\n        if (!chart.boxes) {\n            chart.boxes = [];\n        }\n        item.fullSize = item.fullSize || false;\n        item.position = item.position || 'top';\n        item.weight = item.weight || 0;\n        item._layers = item._layers || function() {\n            return [\n                {\n                    z: 0,\n                    draw (chartArea) {\n                        item.draw(chartArea);\n                    }\n                }\n            ];\n        };\n        chart.boxes.push(item);\n    },\n removeBox (chart, layoutItem) {\n        const index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;\n        if (index !== -1) {\n            chart.boxes.splice(index, 1);\n        }\n    },\n configure (chart, item, options) {\n        item.fullSize = options.fullSize;\n        item.position = options.position;\n        item.weight = options.weight;\n    },\n update (chart, width, height, minPadding) {\n        if (!chart) {\n            return;\n        }\n        const padding = toPadding(chart.options.layout.padding);\n        const availableWidth = Math.max(width - padding.width, 0);\n        const availableHeight = Math.max(height - padding.height, 0);\n        const boxes = buildLayoutBoxes(chart.boxes);\n        const verticalBoxes = boxes.vertical;\n        const horizontalBoxes = boxes.horizontal;\n        each(chart.boxes, (box)=>{\n            if (typeof box.beforeLayout === 'function') {\n                box.beforeLayout();\n            }\n        });\n        const visibleVerticalBoxCount = verticalBoxes.reduce((total, wrap)=>wrap.box.options && wrap.box.options.display === false ? total : total + 1, 0) || 1;\n        const params = Object.freeze({\n            outerWidth: width,\n            outerHeight: height,\n            padding,\n            availableWidth,\n            availableHeight,\n            vBoxMaxWidth: availableWidth / 2 / visibleVerticalBoxCount,\n            hBoxMaxHeight: availableHeight / 2\n        });\n        const maxPadding = Object.assign({}, padding);\n        updateMaxPadding(maxPadding, toPadding(minPadding));\n        const chartArea = Object.assign({\n            maxPadding,\n            w: availableWidth,\n            h: availableHeight,\n            x: padding.left,\n            y: padding.top\n        }, padding);\n        const stacks = setLayoutDims(verticalBoxes.concat(horizontalBoxes), params);\n        fitBoxes(boxes.fullSize, chartArea, params, stacks);\n        fitBoxes(verticalBoxes, chartArea, params, stacks);\n        if (fitBoxes(horizontalBoxes, chartArea, params, stacks)) {\n            fitBoxes(verticalBoxes, chartArea, params, stacks);\n        }\n        handleMaxPadding(chartArea);\n        placeBoxes(boxes.leftAndTop, chartArea, params, stacks);\n        chartArea.x += chartArea.w;\n        chartArea.y += chartArea.h;\n        placeBoxes(boxes.rightAndBottom, chartArea, params, stacks);\n        chart.chartArea = {\n            left: chartArea.left,\n            top: chartArea.top,\n            right: chartArea.left + chartArea.w,\n            bottom: chartArea.top + chartArea.h,\n            height: chartArea.h,\n            width: chartArea.w\n        };\n        each(boxes.chartArea, (layout)=>{\n            const box = layout.box;\n            Object.assign(box, chart.chartArea);\n            box.update(chartArea.w, chartArea.h, {\n                left: 0,\n                top: 0,\n                right: 0,\n                bottom: 0\n            });\n        });\n    }\n};\n\nclass BasePlatform {\n acquireContext(canvas, aspectRatio) {}\n releaseContext(context) {\n        return false;\n    }\n addEventListener(chart, type, listener) {}\n removeEventListener(chart, type, listener) {}\n getDevicePixelRatio() {\n        return 1;\n    }\n getMaximumSize(element, width, height, aspectRatio) {\n        width = Math.max(0, width || element.width);\n        height = height || element.height;\n        return {\n            width,\n            height: Math.max(0, aspectRatio ? Math.floor(width / aspectRatio) : height)\n        };\n    }\n isAttached(canvas) {\n        return true;\n    }\n updateConfig(config) {\n    }\n}\n\nclass BasicPlatform extends BasePlatform {\n    acquireContext(item) {\n        return item && item.getContext && item.getContext('2d') || null;\n    }\n    updateConfig(config) {\n        config.options.animation = false;\n    }\n}\n\nconst EXPANDO_KEY = '$chartjs';\n const EVENT_TYPES = {\n    touchstart: 'mousedown',\n    touchmove: 'mousemove',\n    touchend: 'mouseup',\n    pointerenter: 'mouseenter',\n    pointerdown: 'mousedown',\n    pointermove: 'mousemove',\n    pointerup: 'mouseup',\n    pointerleave: 'mouseout',\n    pointerout: 'mouseout'\n};\nconst isNullOrEmpty = (value)=>value === null || value === '';\n function initCanvas(canvas, aspectRatio) {\n    const style = canvas.style;\n    const renderHeight = canvas.getAttribute('height');\n    const renderWidth = canvas.getAttribute('width');\n    canvas[EXPANDO_KEY] = {\n        initial: {\n            height: renderHeight,\n            width: renderWidth,\n            style: {\n                display: style.display,\n                height: style.height,\n                width: style.width\n            }\n        }\n    };\n    style.display = style.display || 'block';\n    style.boxSizing = style.boxSizing || 'border-box';\n    if (isNullOrEmpty(renderWidth)) {\n        const displayWidth = readUsedSize(canvas, 'width');\n        if (displayWidth !== undefined) {\n            canvas.width = displayWidth;\n        }\n    }\n    if (isNullOrEmpty(renderHeight)) {\n        if (canvas.style.height === '') {\n            canvas.height = canvas.width / (aspectRatio || 2);\n        } else {\n            const displayHeight = readUsedSize(canvas, 'height');\n            if (displayHeight !== undefined) {\n                canvas.height = displayHeight;\n            }\n        }\n    }\n    return canvas;\n}\nconst eventListenerOptions = supportsEventListenerOptions ? {\n    passive: true\n} : false;\nfunction addListener(node, type, listener) {\n    node.addEventListener(type, listener, eventListenerOptions);\n}\nfunction removeListener(chart, type, listener) {\n    chart.canvas.removeEventListener(type, listener, eventListenerOptions);\n}\nfunction fromNativeEvent(event, chart) {\n    const type = EVENT_TYPES[event.type] || event.type;\n    const { x , y  } = getRelativePosition(event, chart);\n    return {\n        type,\n        chart,\n        native: event,\n        x: x !== undefined ? x : null,\n        y: y !== undefined ? y : null\n    };\n}\nfunction nodeListContains(nodeList, canvas) {\n    for (const node of nodeList){\n        if (node === canvas || node.contains(canvas)) {\n            return true;\n        }\n    }\n}\nfunction createAttachObserver(chart, type, listener) {\n    const canvas = chart.canvas;\n    const observer = new MutationObserver((entries)=>{\n        let trigger = false;\n        for (const entry of entries){\n            trigger = trigger || nodeListContains(entry.addedNodes, canvas);\n            trigger = trigger && !nodeListContains(entry.removedNodes, canvas);\n        }\n        if (trigger) {\n            listener();\n        }\n    });\n    observer.observe(document, {\n        childList: true,\n        subtree: true\n    });\n    return observer;\n}\nfunction createDetachObserver(chart, type, listener) {\n    const canvas = chart.canvas;\n    const observer = new MutationObserver((entries)=>{\n        let trigger = false;\n        for (const entry of entries){\n            trigger = trigger || nodeListContains(entry.removedNodes, canvas);\n            trigger = trigger && !nodeListContains(entry.addedNodes, canvas);\n        }\n        if (trigger) {\n            listener();\n        }\n    });\n    observer.observe(document, {\n        childList: true,\n        subtree: true\n    });\n    return observer;\n}\nconst drpListeningCharts = new Map();\nlet oldDevicePixelRatio = 0;\nfunction onWindowResize() {\n    const dpr = window.devicePixelRatio;\n    if (dpr === oldDevicePixelRatio) {\n        return;\n    }\n    oldDevicePixelRatio = dpr;\n    drpListeningCharts.forEach((resize, chart)=>{\n        if (chart.currentDevicePixelRatio !== dpr) {\n            resize();\n        }\n    });\n}\nfunction listenDevicePixelRatioChanges(chart, resize) {\n    if (!drpListeningCharts.size) {\n        window.addEventListener('resize', onWindowResize);\n    }\n    drpListeningCharts.set(chart, resize);\n}\nfunction unlistenDevicePixelRatioChanges(chart) {\n    drpListeningCharts.delete(chart);\n    if (!drpListeningCharts.size) {\n        window.removeEventListener('resize', onWindowResize);\n    }\n}\nfunction createResizeObserver(chart, type, listener) {\n    const canvas = chart.canvas;\n    const container = canvas && _getParentNode(canvas);\n    if (!container) {\n        return;\n    }\n    const resize = throttled((width, height)=>{\n        const w = container.clientWidth;\n        listener(width, height);\n        if (w < container.clientWidth) {\n            listener();\n        }\n    }, window);\n    const observer = new ResizeObserver((entries)=>{\n        const entry = entries[0];\n        const width = entry.contentRect.width;\n        const height = entry.contentRect.height;\n        if (width === 0 && height === 0) {\n            return;\n        }\n        resize(width, height);\n    });\n    observer.observe(container);\n    listenDevicePixelRatioChanges(chart, resize);\n    return observer;\n}\nfunction releaseObserver(chart, type, observer) {\n    if (observer) {\n        observer.disconnect();\n    }\n    if (type === 'resize') {\n        unlistenDevicePixelRatioChanges(chart);\n    }\n}\nfunction createProxyAndListen(chart, type, listener) {\n    const canvas = chart.canvas;\n    const proxy = throttled((event)=>{\n        if (chart.ctx !== null) {\n            listener(fromNativeEvent(event, chart));\n        }\n    }, chart);\n    addListener(canvas, type, proxy);\n    return proxy;\n}\n class DomPlatform extends BasePlatform {\n acquireContext(canvas, aspectRatio) {\n        const context = canvas && canvas.getContext && canvas.getContext('2d');\n        if (context && context.canvas === canvas) {\n            initCanvas(canvas, aspectRatio);\n            return context;\n        }\n        return null;\n    }\n releaseContext(context) {\n        const canvas = context.canvas;\n        if (!canvas[EXPANDO_KEY]) {\n            return false;\n        }\n        const initial = canvas[EXPANDO_KEY].initial;\n        [\n            'height',\n            'width'\n        ].forEach((prop)=>{\n            const value = initial[prop];\n            if (isNullOrUndef(value)) {\n                canvas.removeAttribute(prop);\n            } else {\n                canvas.setAttribute(prop, value);\n            }\n        });\n        const style = initial.style || {};\n        Object.keys(style).forEach((key)=>{\n            canvas.style[key] = style[key];\n        });\n        canvas.width = canvas.width;\n        delete canvas[EXPANDO_KEY];\n        return true;\n    }\n addEventListener(chart, type, listener) {\n        this.removeEventListener(chart, type);\n        const proxies = chart.$proxies || (chart.$proxies = {});\n        const handlers = {\n            attach: createAttachObserver,\n            detach: createDetachObserver,\n            resize: createResizeObserver\n        };\n        const handler = handlers[type] || createProxyAndListen;\n        proxies[type] = handler(chart, type, listener);\n    }\n removeEventListener(chart, type) {\n        const proxies = chart.$proxies || (chart.$proxies = {});\n        const proxy = proxies[type];\n        if (!proxy) {\n            return;\n        }\n        const handlers = {\n            attach: releaseObserver,\n            detach: releaseObserver,\n            resize: releaseObserver\n        };\n        const handler = handlers[type] || removeListener;\n        handler(chart, type, proxy);\n        proxies[type] = undefined;\n    }\n    getDevicePixelRatio() {\n        return window.devicePixelRatio;\n    }\n getMaximumSize(canvas, width, height, aspectRatio) {\n        return getMaximumSize(canvas, width, height, aspectRatio);\n    }\n isAttached(canvas) {\n        const container = _getParentNode(canvas);\n        return !!(container && container.isConnected);\n    }\n}\n\nfunction _detectPlatform(canvas) {\n    if (!_isDomSupported() || typeof OffscreenCanvas !== 'undefined' && canvas instanceof OffscreenCanvas) {\n        return BasicPlatform;\n    }\n    return DomPlatform;\n}\n\nclass Element {\n    static defaults = {};\n    static defaultRoutes = undefined;\n    x;\n    y;\n    active = false;\n    options;\n    $animations;\n    tooltipPosition(useFinalPosition) {\n        const { x , y  } = this.getProps([\n            'x',\n            'y'\n        ], useFinalPosition);\n        return {\n            x,\n            y\n        };\n    }\n    hasValue() {\n        return isNumber(this.x) && isNumber(this.y);\n    }\n    getProps(props, final) {\n        const anims = this.$animations;\n        if (!final || !anims) {\n            // let's not create an object, if not needed\n            return this;\n        }\n        const ret = {};\n        props.forEach((prop)=>{\n            ret[prop] = anims[prop] && anims[prop].active() ? anims[prop]._to : this[prop];\n        });\n        return ret;\n    }\n}\n\nfunction autoSkip(scale, ticks) {\n    const tickOpts = scale.options.ticks;\n    const determinedMaxTicks = determineMaxTicks(scale);\n    const ticksLimit = Math.min(tickOpts.maxTicksLimit || determinedMaxTicks, determinedMaxTicks);\n    const majorIndices = tickOpts.major.enabled ? getMajorIndices(ticks) : [];\n    const numMajorIndices = majorIndices.length;\n    const first = majorIndices[0];\n    const last = majorIndices[numMajorIndices - 1];\n    const newTicks = [];\n    if (numMajorIndices > ticksLimit) {\n        skipMajors(ticks, newTicks, majorIndices, numMajorIndices / ticksLimit);\n        return newTicks;\n    }\n    const spacing = calculateSpacing(majorIndices, ticks, ticksLimit);\n    if (numMajorIndices > 0) {\n        let i, ilen;\n        const avgMajorSpacing = numMajorIndices > 1 ? Math.round((last - first) / (numMajorIndices - 1)) : null;\n        skip(ticks, newTicks, spacing, isNullOrUndef(avgMajorSpacing) ? 0 : first - avgMajorSpacing, first);\n        for(i = 0, ilen = numMajorIndices - 1; i < ilen; i++){\n            skip(ticks, newTicks, spacing, majorIndices[i], majorIndices[i + 1]);\n        }\n        skip(ticks, newTicks, spacing, last, isNullOrUndef(avgMajorSpacing) ? ticks.length : last + avgMajorSpacing);\n        return newTicks;\n    }\n    skip(ticks, newTicks, spacing);\n    return newTicks;\n}\nfunction determineMaxTicks(scale) {\n    const offset = scale.options.offset;\n    const tickLength = scale._tickSize();\n    const maxScale = scale._length / tickLength + (offset ? 0 : 1);\n    const maxChart = scale._maxLength / tickLength;\n    return Math.floor(Math.min(maxScale, maxChart));\n}\n function calculateSpacing(majorIndices, ticks, ticksLimit) {\n    const evenMajorSpacing = getEvenSpacing(majorIndices);\n    const spacing = ticks.length / ticksLimit;\n    if (!evenMajorSpacing) {\n        return Math.max(spacing, 1);\n    }\n    const factors = _factorize(evenMajorSpacing);\n    for(let i = 0, ilen = factors.length - 1; i < ilen; i++){\n        const factor = factors[i];\n        if (factor > spacing) {\n            return factor;\n        }\n    }\n    return Math.max(spacing, 1);\n}\n function getMajorIndices(ticks) {\n    const result = [];\n    let i, ilen;\n    for(i = 0, ilen = ticks.length; i < ilen; i++){\n        if (ticks[i].major) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n function skipMajors(ticks, newTicks, majorIndices, spacing) {\n    let count = 0;\n    let next = majorIndices[0];\n    let i;\n    spacing = Math.ceil(spacing);\n    for(i = 0; i < ticks.length; i++){\n        if (i === next) {\n            newTicks.push(ticks[i]);\n            count++;\n            next = majorIndices[count * spacing];\n        }\n    }\n}\n function skip(ticks, newTicks, spacing, majorStart, majorEnd) {\n    const start = valueOrDefault(majorStart, 0);\n    const end = Math.min(valueOrDefault(majorEnd, ticks.length), ticks.length);\n    let count = 0;\n    let length, i, next;\n    spacing = Math.ceil(spacing);\n    if (majorEnd) {\n        length = majorEnd - majorStart;\n        spacing = length / Math.floor(length / spacing);\n    }\n    next = start;\n    while(next < 0){\n        count++;\n        next = Math.round(start + count * spacing);\n    }\n    for(i = Math.max(start, 0); i < end; i++){\n        if (i === next) {\n            newTicks.push(ticks[i]);\n            count++;\n            next = Math.round(start + count * spacing);\n        }\n    }\n}\n function getEvenSpacing(arr) {\n    const len = arr.length;\n    let i, diff;\n    if (len < 2) {\n        return false;\n    }\n    for(diff = arr[0], i = 1; i < len; ++i){\n        if (arr[i] - arr[i - 1] !== diff) {\n            return false;\n        }\n    }\n    return diff;\n}\n\nconst reverseAlign = (align)=>align === 'left' ? 'right' : align === 'right' ? 'left' : align;\nconst offsetFromEdge = (scale, edge, offset)=>edge === 'top' || edge === 'left' ? scale[edge] + offset : scale[edge] - offset;\nconst getTicksLimit = (ticksLength, maxTicksLimit)=>Math.min(maxTicksLimit || ticksLength, ticksLength);\n function sample(arr, numItems) {\n    const result = [];\n    const increment = arr.length / numItems;\n    const len = arr.length;\n    let i = 0;\n    for(; i < len; i += increment){\n        result.push(arr[Math.floor(i)]);\n    }\n    return result;\n}\n function getPixelForGridLine(scale, index, offsetGridLines) {\n    const length = scale.ticks.length;\n    const validIndex = Math.min(index, length - 1);\n    const start = scale._startPixel;\n    const end = scale._endPixel;\n    const epsilon = 1e-6;\n    let lineValue = scale.getPixelForTick(validIndex);\n    let offset;\n    if (offsetGridLines) {\n        if (length === 1) {\n            offset = Math.max(lineValue - start, end - lineValue);\n        } else if (index === 0) {\n            offset = (scale.getPixelForTick(1) - lineValue) / 2;\n        } else {\n            offset = (lineValue - scale.getPixelForTick(validIndex - 1)) / 2;\n        }\n        lineValue += validIndex < index ? offset : -offset;\n        if (lineValue < start - epsilon || lineValue > end + epsilon) {\n            return;\n        }\n    }\n    return lineValue;\n}\n function garbageCollect(caches, length) {\n    each(caches, (cache)=>{\n        const gc = cache.gc;\n        const gcLen = gc.length / 2;\n        let i;\n        if (gcLen > length) {\n            for(i = 0; i < gcLen; ++i){\n                delete cache.data[gc[i]];\n            }\n            gc.splice(0, gcLen);\n        }\n    });\n}\n function getTickMarkLength(options) {\n    return options.drawTicks ? options.tickLength : 0;\n}\n function getTitleHeight(options, fallback) {\n    if (!options.display) {\n        return 0;\n    }\n    const font = toFont(options.font, fallback);\n    const padding = toPadding(options.padding);\n    const lines = isArray(options.text) ? options.text.length : 1;\n    return lines * font.lineHeight + padding.height;\n}\nfunction createScaleContext(parent, scale) {\n    return createContext(parent, {\n        scale,\n        type: 'scale'\n    });\n}\nfunction createTickContext(parent, index, tick) {\n    return createContext(parent, {\n        tick,\n        index,\n        type: 'tick'\n    });\n}\nfunction titleAlign(align, position, reverse) {\n     let ret = _toLeftRightCenter(align);\n    if (reverse && position !== 'right' || !reverse && position === 'right') {\n        ret = reverseAlign(ret);\n    }\n    return ret;\n}\nfunction titleArgs(scale, offset, position, align) {\n    const { top , left , bottom , right , chart  } = scale;\n    const { chartArea , scales  } = chart;\n    let rotation = 0;\n    let maxWidth, titleX, titleY;\n    const height = bottom - top;\n    const width = right - left;\n    if (scale.isHorizontal()) {\n        titleX = _alignStartEnd(align, left, right);\n        if (isObject(position)) {\n            const positionAxisID = Object.keys(position)[0];\n            const value = position[positionAxisID];\n            titleY = scales[positionAxisID].getPixelForValue(value) + height - offset;\n        } else if (position === 'center') {\n            titleY = (chartArea.bottom + chartArea.top) / 2 + height - offset;\n        } else {\n            titleY = offsetFromEdge(scale, position, offset);\n        }\n        maxWidth = right - left;\n    } else {\n        if (isObject(position)) {\n            const positionAxisID = Object.keys(position)[0];\n            const value = position[positionAxisID];\n            titleX = scales[positionAxisID].getPixelForValue(value) - width + offset;\n        } else if (position === 'center') {\n            titleX = (chartArea.left + chartArea.right) / 2 - width + offset;\n        } else {\n            titleX = offsetFromEdge(scale, position, offset);\n        }\n        titleY = _alignStartEnd(align, bottom, top);\n        rotation = position === 'left' ? -HALF_PI : HALF_PI;\n    }\n    return {\n        titleX,\n        titleY,\n        maxWidth,\n        rotation\n    };\n}\nclass Scale extends Element {\n    constructor(cfg){\n        super();\n         this.id = cfg.id;\n         this.type = cfg.type;\n         this.options = undefined;\n         this.ctx = cfg.ctx;\n         this.chart = cfg.chart;\n         this.top = undefined;\n         this.bottom = undefined;\n         this.left = undefined;\n         this.right = undefined;\n         this.width = undefined;\n         this.height = undefined;\n        this._margins = {\n            left: 0,\n            right: 0,\n            top: 0,\n            bottom: 0\n        };\n         this.maxWidth = undefined;\n         this.maxHeight = undefined;\n         this.paddingTop = undefined;\n         this.paddingBottom = undefined;\n         this.paddingLeft = undefined;\n         this.paddingRight = undefined;\n         this.axis = undefined;\n         this.labelRotation = undefined;\n        this.min = undefined;\n        this.max = undefined;\n        this._range = undefined;\n         this.ticks = [];\n         this._gridLineItems = null;\n         this._labelItems = null;\n         this._labelSizes = null;\n        this._length = 0;\n        this._maxLength = 0;\n        this._longestTextCache = {};\n         this._startPixel = undefined;\n         this._endPixel = undefined;\n        this._reversePixels = false;\n        this._userMax = undefined;\n        this._userMin = undefined;\n        this._suggestedMax = undefined;\n        this._suggestedMin = undefined;\n        this._ticksLength = 0;\n        this._borderValue = 0;\n        this._cache = {};\n        this._dataLimitsCached = false;\n        this.$context = undefined;\n    }\n init(options) {\n        this.options = options.setContext(this.getContext());\n        this.axis = options.axis;\n        this._userMin = this.parse(options.min);\n        this._userMax = this.parse(options.max);\n        this._suggestedMin = this.parse(options.suggestedMin);\n        this._suggestedMax = this.parse(options.suggestedMax);\n    }\n parse(raw, index) {\n        return raw;\n    }\n getUserBounds() {\n        let { _userMin , _userMax , _suggestedMin , _suggestedMax  } = this;\n        _userMin = finiteOrDefault(_userMin, Number.POSITIVE_INFINITY);\n        _userMax = finiteOrDefault(_userMax, Number.NEGATIVE_INFINITY);\n        _suggestedMin = finiteOrDefault(_suggestedMin, Number.POSITIVE_INFINITY);\n        _suggestedMax = finiteOrDefault(_suggestedMax, Number.NEGATIVE_INFINITY);\n        return {\n            min: finiteOrDefault(_userMin, _suggestedMin),\n            max: finiteOrDefault(_userMax, _suggestedMax),\n            minDefined: isNumberFinite(_userMin),\n            maxDefined: isNumberFinite(_userMax)\n        };\n    }\n getMinMax(canStack) {\n        let { min , max , minDefined , maxDefined  } = this.getUserBounds();\n        let range;\n        if (minDefined && maxDefined) {\n            return {\n                min,\n                max\n            };\n        }\n        const metas = this.getMatchingVisibleMetas();\n        for(let i = 0, ilen = metas.length; i < ilen; ++i){\n            range = metas[i].controller.getMinMax(this, canStack);\n            if (!minDefined) {\n                min = Math.min(min, range.min);\n            }\n            if (!maxDefined) {\n                max = Math.max(max, range.max);\n            }\n        }\n        min = maxDefined && min > max ? max : min;\n        max = minDefined && min > max ? min : max;\n        return {\n            min: finiteOrDefault(min, finiteOrDefault(max, min)),\n            max: finiteOrDefault(max, finiteOrDefault(min, max))\n        };\n    }\n getPadding() {\n        return {\n            left: this.paddingLeft || 0,\n            top: this.paddingTop || 0,\n            right: this.paddingRight || 0,\n            bottom: this.paddingBottom || 0\n        };\n    }\n getTicks() {\n        return this.ticks;\n    }\n getLabels() {\n        const data = this.chart.data;\n        return this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels || [];\n    }\n getLabelItems(chartArea = this.chart.chartArea) {\n        const items = this._labelItems || (this._labelItems = this._computeLabelItems(chartArea));\n        return items;\n    }\n    beforeLayout() {\n        this._cache = {};\n        this._dataLimitsCached = false;\n    }\n    beforeUpdate() {\n        callback(this.options.beforeUpdate, [\n            this\n        ]);\n    }\n update(maxWidth, maxHeight, margins) {\n        const { beginAtZero , grace , ticks: tickOpts  } = this.options;\n        const sampleSize = tickOpts.sampleSize;\n        this.beforeUpdate();\n        this.maxWidth = maxWidth;\n        this.maxHeight = maxHeight;\n        this._margins = margins = Object.assign({\n            left: 0,\n            right: 0,\n            top: 0,\n            bottom: 0\n        }, margins);\n        this.ticks = null;\n        this._labelSizes = null;\n        this._gridLineItems = null;\n        this._labelItems = null;\n        this.beforeSetDimensions();\n        this.setDimensions();\n        this.afterSetDimensions();\n        this._maxLength = this.isHorizontal() ? this.width + margins.left + margins.right : this.height + margins.top + margins.bottom;\n        if (!this._dataLimitsCached) {\n            this.beforeDataLimits();\n            this.determineDataLimits();\n            this.afterDataLimits();\n            this._range = _addGrace(this, grace, beginAtZero);\n            this._dataLimitsCached = true;\n        }\n        this.beforeBuildTicks();\n        this.ticks = this.buildTicks() || [];\n        this.afterBuildTicks();\n        const samplingEnabled = sampleSize < this.ticks.length;\n        this._convertTicksToLabels(samplingEnabled ? sample(this.ticks, sampleSize) : this.ticks);\n        this.configure();\n        this.beforeCalculateLabelRotation();\n        this.calculateLabelRotation();\n        this.afterCalculateLabelRotation();\n        if (tickOpts.display && (tickOpts.autoSkip || tickOpts.source === 'auto')) {\n            this.ticks = autoSkip(this, this.ticks);\n            this._labelSizes = null;\n            this.afterAutoSkip();\n        }\n        if (samplingEnabled) {\n            this._convertTicksToLabels(this.ticks);\n        }\n        this.beforeFit();\n        this.fit();\n        this.afterFit();\n        this.afterUpdate();\n    }\n configure() {\n        let reversePixels = this.options.reverse;\n        let startPixel, endPixel;\n        if (this.isHorizontal()) {\n            startPixel = this.left;\n            endPixel = this.right;\n        } else {\n            startPixel = this.top;\n            endPixel = this.bottom;\n            reversePixels = !reversePixels;\n        }\n        this._startPixel = startPixel;\n        this._endPixel = endPixel;\n        this._reversePixels = reversePixels;\n        this._length = endPixel - startPixel;\n        this._alignToPixels = this.options.alignToPixels;\n    }\n    afterUpdate() {\n        callback(this.options.afterUpdate, [\n            this\n        ]);\n    }\n    beforeSetDimensions() {\n        callback(this.options.beforeSetDimensions, [\n            this\n        ]);\n    }\n    setDimensions() {\n        if (this.isHorizontal()) {\n            this.width = this.maxWidth;\n            this.left = 0;\n            this.right = this.width;\n        } else {\n            this.height = this.maxHeight;\n            this.top = 0;\n            this.bottom = this.height;\n        }\n        this.paddingLeft = 0;\n        this.paddingTop = 0;\n        this.paddingRight = 0;\n        this.paddingBottom = 0;\n    }\n    afterSetDimensions() {\n        callback(this.options.afterSetDimensions, [\n            this\n        ]);\n    }\n    _callHooks(name) {\n        this.chart.notifyPlugins(name, this.getContext());\n        callback(this.options[name], [\n            this\n        ]);\n    }\n    beforeDataLimits() {\n        this._callHooks('beforeDataLimits');\n    }\n    determineDataLimits() {}\n    afterDataLimits() {\n        this._callHooks('afterDataLimits');\n    }\n    beforeBuildTicks() {\n        this._callHooks('beforeBuildTicks');\n    }\n buildTicks() {\n        return [];\n    }\n    afterBuildTicks() {\n        this._callHooks('afterBuildTicks');\n    }\n    beforeTickToLabelConversion() {\n        callback(this.options.beforeTickToLabelConversion, [\n            this\n        ]);\n    }\n generateTickLabels(ticks) {\n        const tickOpts = this.options.ticks;\n        let i, ilen, tick;\n        for(i = 0, ilen = ticks.length; i < ilen; i++){\n            tick = ticks[i];\n            tick.label = callback(tickOpts.callback, [\n                tick.value,\n                i,\n                ticks\n            ], this);\n        }\n    }\n    afterTickToLabelConversion() {\n        callback(this.options.afterTickToLabelConversion, [\n            this\n        ]);\n    }\n    beforeCalculateLabelRotation() {\n        callback(this.options.beforeCalculateLabelRotation, [\n            this\n        ]);\n    }\n    calculateLabelRotation() {\n        const options = this.options;\n        const tickOpts = options.ticks;\n        const numTicks = getTicksLimit(this.ticks.length, options.ticks.maxTicksLimit);\n        const minRotation = tickOpts.minRotation || 0;\n        const maxRotation = tickOpts.maxRotation;\n        let labelRotation = minRotation;\n        let tickWidth, maxHeight, maxLabelDiagonal;\n        if (!this._isVisible() || !tickOpts.display || minRotation >= maxRotation || numTicks <= 1 || !this.isHorizontal()) {\n            this.labelRotation = minRotation;\n            return;\n        }\n        const labelSizes = this._getLabelSizes();\n        const maxLabelWidth = labelSizes.widest.width;\n        const maxLabelHeight = labelSizes.highest.height;\n        const maxWidth = _limitValue(this.chart.width - maxLabelWidth, 0, this.maxWidth);\n        tickWidth = options.offset ? this.maxWidth / numTicks : maxWidth / (numTicks - 1);\n        if (maxLabelWidth + 6 > tickWidth) {\n            tickWidth = maxWidth / (numTicks - (options.offset ? 0.5 : 1));\n            maxHeight = this.maxHeight - getTickMarkLength(options.grid) - tickOpts.padding - getTitleHeight(options.title, this.chart.options.font);\n            maxLabelDiagonal = Math.sqrt(maxLabelWidth * maxLabelWidth + maxLabelHeight * maxLabelHeight);\n            labelRotation = toDegrees(Math.min(Math.asin(_limitValue((labelSizes.highest.height + 6) / tickWidth, -1, 1)), Math.asin(_limitValue(maxHeight / maxLabelDiagonal, -1, 1)) - Math.asin(_limitValue(maxLabelHeight / maxLabelDiagonal, -1, 1))));\n            labelRotation = Math.max(minRotation, Math.min(maxRotation, labelRotation));\n        }\n        this.labelRotation = labelRotation;\n    }\n    afterCalculateLabelRotation() {\n        callback(this.options.afterCalculateLabelRotation, [\n            this\n        ]);\n    }\n    afterAutoSkip() {}\n    beforeFit() {\n        callback(this.options.beforeFit, [\n            this\n        ]);\n    }\n    fit() {\n        const minSize = {\n            width: 0,\n            height: 0\n        };\n        const { chart , options: { ticks: tickOpts , title: titleOpts , grid: gridOpts  }  } = this;\n        const display = this._isVisible();\n        const isHorizontal = this.isHorizontal();\n        if (display) {\n            const titleHeight = getTitleHeight(titleOpts, chart.options.font);\n            if (isHorizontal) {\n                minSize.width = this.maxWidth;\n                minSize.height = getTickMarkLength(gridOpts) + titleHeight;\n            } else {\n                minSize.height = this.maxHeight;\n                minSize.width = getTickMarkLength(gridOpts) + titleHeight;\n            }\n            if (tickOpts.display && this.ticks.length) {\n                const { first , last , widest , highest  } = this._getLabelSizes();\n                const tickPadding = tickOpts.padding * 2;\n                const angleRadians = toRadians(this.labelRotation);\n                const cos = Math.cos(angleRadians);\n                const sin = Math.sin(angleRadians);\n                if (isHorizontal) {\n                    const labelHeight = tickOpts.mirror ? 0 : sin * widest.width + cos * highest.height;\n                    minSize.height = Math.min(this.maxHeight, minSize.height + labelHeight + tickPadding);\n                } else {\n                    const labelWidth = tickOpts.mirror ? 0 : cos * widest.width + sin * highest.height;\n                    minSize.width = Math.min(this.maxWidth, minSize.width + labelWidth + tickPadding);\n                }\n                this._calculatePadding(first, last, sin, cos);\n            }\n        }\n        this._handleMargins();\n        if (isHorizontal) {\n            this.width = this._length = chart.width - this._margins.left - this._margins.right;\n            this.height = minSize.height;\n        } else {\n            this.width = minSize.width;\n            this.height = this._length = chart.height - this._margins.top - this._margins.bottom;\n        }\n    }\n    _calculatePadding(first, last, sin, cos) {\n        const { ticks: { align , padding  } , position  } = this.options;\n        const isRotated = this.labelRotation !== 0;\n        const labelsBelowTicks = position !== 'top' && this.axis === 'x';\n        if (this.isHorizontal()) {\n            const offsetLeft = this.getPixelForTick(0) - this.left;\n            const offsetRight = this.right - this.getPixelForTick(this.ticks.length - 1);\n            let paddingLeft = 0;\n            let paddingRight = 0;\n            if (isRotated) {\n                if (labelsBelowTicks) {\n                    paddingLeft = cos * first.width;\n                    paddingRight = sin * last.height;\n                } else {\n                    paddingLeft = sin * first.height;\n                    paddingRight = cos * last.width;\n                }\n            } else if (align === 'start') {\n                paddingRight = last.width;\n            } else if (align === 'end') {\n                paddingLeft = first.width;\n            } else if (align !== 'inner') {\n                paddingLeft = first.width / 2;\n                paddingRight = last.width / 2;\n            }\n            this.paddingLeft = Math.max((paddingLeft - offsetLeft + padding) * this.width / (this.width - offsetLeft), 0);\n            this.paddingRight = Math.max((paddingRight - offsetRight + padding) * this.width / (this.width - offsetRight), 0);\n        } else {\n            let paddingTop = last.height / 2;\n            let paddingBottom = first.height / 2;\n            if (align === 'start') {\n                paddingTop = 0;\n                paddingBottom = first.height;\n            } else if (align === 'end') {\n                paddingTop = last.height;\n                paddingBottom = 0;\n            }\n            this.paddingTop = paddingTop + padding;\n            this.paddingBottom = paddingBottom + padding;\n        }\n    }\n _handleMargins() {\n        if (this._margins) {\n            this._margins.left = Math.max(this.paddingLeft, this._margins.left);\n            this._margins.top = Math.max(this.paddingTop, this._margins.top);\n            this._margins.right = Math.max(this.paddingRight, this._margins.right);\n            this._margins.bottom = Math.max(this.paddingBottom, this._margins.bottom);\n        }\n    }\n    afterFit() {\n        callback(this.options.afterFit, [\n            this\n        ]);\n    }\n isHorizontal() {\n        const { axis , position  } = this.options;\n        return position === 'top' || position === 'bottom' || axis === 'x';\n    }\n isFullSize() {\n        return this.options.fullSize;\n    }\n _convertTicksToLabels(ticks) {\n        this.beforeTickToLabelConversion();\n        this.generateTickLabels(ticks);\n        let i, ilen;\n        for(i = 0, ilen = ticks.length; i < ilen; i++){\n            if (isNullOrUndef(ticks[i].label)) {\n                ticks.splice(i, 1);\n                ilen--;\n                i--;\n            }\n        }\n        this.afterTickToLabelConversion();\n    }\n _getLabelSizes() {\n        let labelSizes = this._labelSizes;\n        if (!labelSizes) {\n            const sampleSize = this.options.ticks.sampleSize;\n            let ticks = this.ticks;\n            if (sampleSize < ticks.length) {\n                ticks = sample(ticks, sampleSize);\n            }\n            this._labelSizes = labelSizes = this._computeLabelSizes(ticks, ticks.length, this.options.ticks.maxTicksLimit);\n        }\n        return labelSizes;\n    }\n _computeLabelSizes(ticks, length, maxTicksLimit) {\n        const { ctx , _longestTextCache: caches  } = this;\n        const widths = [];\n        const heights = [];\n        const increment = Math.floor(length / getTicksLimit(length, maxTicksLimit));\n        let widestLabelSize = 0;\n        let highestLabelSize = 0;\n        let i, j, jlen, label, tickFont, fontString, cache, lineHeight, width, height, nestedLabel;\n        for(i = 0; i < length; i += increment){\n            label = ticks[i].label;\n            tickFont = this._resolveTickFontOptions(i);\n            ctx.font = fontString = tickFont.string;\n            cache = caches[fontString] = caches[fontString] || {\n                data: {},\n                gc: []\n            };\n            lineHeight = tickFont.lineHeight;\n            width = height = 0;\n            if (!isNullOrUndef(label) && !isArray(label)) {\n                width = _measureText(ctx, cache.data, cache.gc, width, label);\n                height = lineHeight;\n            } else if (isArray(label)) {\n                for(j = 0, jlen = label.length; j < jlen; ++j){\n                    nestedLabel =  label[j];\n                    if (!isNullOrUndef(nestedLabel) && !isArray(nestedLabel)) {\n                        width = _measureText(ctx, cache.data, cache.gc, width, nestedLabel);\n                        height += lineHeight;\n                    }\n                }\n            }\n            widths.push(width);\n            heights.push(height);\n            widestLabelSize = Math.max(width, widestLabelSize);\n            highestLabelSize = Math.max(height, highestLabelSize);\n        }\n        garbageCollect(caches, length);\n        const widest = widths.indexOf(widestLabelSize);\n        const highest = heights.indexOf(highestLabelSize);\n        const valueAt = (idx)=>({\n                width: widths[idx] || 0,\n                height: heights[idx] || 0\n            });\n        return {\n            first: valueAt(0),\n            last: valueAt(length - 1),\n            widest: valueAt(widest),\n            highest: valueAt(highest),\n            widths,\n            heights\n        };\n    }\n getLabelForValue(value) {\n        return value;\n    }\n getPixelForValue(value, index) {\n        return NaN;\n    }\n getValueForPixel(pixel) {}\n getPixelForTick(index) {\n        const ticks = this.ticks;\n        if (index < 0 || index > ticks.length - 1) {\n            return null;\n        }\n        return this.getPixelForValue(ticks[index].value);\n    }\n getPixelForDecimal(decimal) {\n        if (this._reversePixels) {\n            decimal = 1 - decimal;\n        }\n        const pixel = this._startPixel + decimal * this._length;\n        return _int16Range(this._alignToPixels ? _alignPixel(this.chart, pixel, 0) : pixel);\n    }\n getDecimalForPixel(pixel) {\n        const decimal = (pixel - this._startPixel) / this._length;\n        return this._reversePixels ? 1 - decimal : decimal;\n    }\n getBasePixel() {\n        return this.getPixelForValue(this.getBaseValue());\n    }\n getBaseValue() {\n        const { min , max  } = this;\n        return min < 0 && max < 0 ? max : min > 0 && max > 0 ? min : 0;\n    }\n getContext(index) {\n        const ticks = this.ticks || [];\n        if (index >= 0 && index < ticks.length) {\n            const tick = ticks[index];\n            return tick.$context || (tick.$context = createTickContext(this.getContext(), index, tick));\n        }\n        return this.$context || (this.$context = createScaleContext(this.chart.getContext(), this));\n    }\n _tickSize() {\n        const optionTicks = this.options.ticks;\n        const rot = toRadians(this.labelRotation);\n        const cos = Math.abs(Math.cos(rot));\n        const sin = Math.abs(Math.sin(rot));\n        const labelSizes = this._getLabelSizes();\n        const padding = optionTicks.autoSkipPadding || 0;\n        const w = labelSizes ? labelSizes.widest.width + padding : 0;\n        const h = labelSizes ? labelSizes.highest.height + padding : 0;\n        return this.isHorizontal() ? h * cos > w * sin ? w / cos : h / sin : h * sin < w * cos ? h / cos : w / sin;\n    }\n _isVisible() {\n        const display = this.options.display;\n        if (display !== 'auto') {\n            return !!display;\n        }\n        return this.getMatchingVisibleMetas().length > 0;\n    }\n _computeGridLineItems(chartArea) {\n        const axis = this.axis;\n        const chart = this.chart;\n        const options = this.options;\n        const { grid , position , border  } = options;\n        const offset = grid.offset;\n        const isHorizontal = this.isHorizontal();\n        const ticks = this.ticks;\n        const ticksLength = ticks.length + (offset ? 1 : 0);\n        const tl = getTickMarkLength(grid);\n        const items = [];\n        const borderOpts = border.setContext(this.getContext());\n        const axisWidth = borderOpts.display ? borderOpts.width : 0;\n        const axisHalfWidth = axisWidth / 2;\n        const alignBorderValue = function(pixel) {\n            return _alignPixel(chart, pixel, axisWidth);\n        };\n        let borderValue, i, lineValue, alignedLineValue;\n        let tx1, ty1, tx2, ty2, x1, y1, x2, y2;\n        if (position === 'top') {\n            borderValue = alignBorderValue(this.bottom);\n            ty1 = this.bottom - tl;\n            ty2 = borderValue - axisHalfWidth;\n            y1 = alignBorderValue(chartArea.top) + axisHalfWidth;\n            y2 = chartArea.bottom;\n        } else if (position === 'bottom') {\n            borderValue = alignBorderValue(this.top);\n            y1 = chartArea.top;\n            y2 = alignBorderValue(chartArea.bottom) - axisHalfWidth;\n            ty1 = borderValue + axisHalfWidth;\n            ty2 = this.top + tl;\n        } else if (position === 'left') {\n            borderValue = alignBorderValue(this.right);\n            tx1 = this.right - tl;\n            tx2 = borderValue - axisHalfWidth;\n            x1 = alignBorderValue(chartArea.left) + axisHalfWidth;\n            x2 = chartArea.right;\n        } else if (position === 'right') {\n            borderValue = alignBorderValue(this.left);\n            x1 = chartArea.left;\n            x2 = alignBorderValue(chartArea.right) - axisHalfWidth;\n            tx1 = borderValue + axisHalfWidth;\n            tx2 = this.left + tl;\n        } else if (axis === 'x') {\n            if (position === 'center') {\n                borderValue = alignBorderValue((chartArea.top + chartArea.bottom) / 2 + 0.5);\n            } else if (isObject(position)) {\n                const positionAxisID = Object.keys(position)[0];\n                const value = position[positionAxisID];\n                borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n            }\n            y1 = chartArea.top;\n            y2 = chartArea.bottom;\n            ty1 = borderValue + axisHalfWidth;\n            ty2 = ty1 + tl;\n        } else if (axis === 'y') {\n            if (position === 'center') {\n                borderValue = alignBorderValue((chartArea.left + chartArea.right) / 2);\n            } else if (isObject(position)) {\n                const positionAxisID = Object.keys(position)[0];\n                const value = position[positionAxisID];\n                borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n            }\n            tx1 = borderValue - axisHalfWidth;\n            tx2 = tx1 - tl;\n            x1 = chartArea.left;\n            x2 = chartArea.right;\n        }\n        const limit = valueOrDefault(options.ticks.maxTicksLimit, ticksLength);\n        const step = Math.max(1, Math.ceil(ticksLength / limit));\n        for(i = 0; i < ticksLength; i += step){\n            const context = this.getContext(i);\n            const optsAtIndex = grid.setContext(context);\n            const optsAtIndexBorder = border.setContext(context);\n            const lineWidth = optsAtIndex.lineWidth;\n            const lineColor = optsAtIndex.color;\n            const borderDash = optsAtIndexBorder.dash || [];\n            const borderDashOffset = optsAtIndexBorder.dashOffset;\n            const tickWidth = optsAtIndex.tickWidth;\n            const tickColor = optsAtIndex.tickColor;\n            const tickBorderDash = optsAtIndex.tickBorderDash || [];\n            const tickBorderDashOffset = optsAtIndex.tickBorderDashOffset;\n            lineValue = getPixelForGridLine(this, i, offset);\n            if (lineValue === undefined) {\n                continue;\n            }\n            alignedLineValue = _alignPixel(chart, lineValue, lineWidth);\n            if (isHorizontal) {\n                tx1 = tx2 = x1 = x2 = alignedLineValue;\n            } else {\n                ty1 = ty2 = y1 = y2 = alignedLineValue;\n            }\n            items.push({\n                tx1,\n                ty1,\n                tx2,\n                ty2,\n                x1,\n                y1,\n                x2,\n                y2,\n                width: lineWidth,\n                color: lineColor,\n                borderDash,\n                borderDashOffset,\n                tickWidth,\n                tickColor,\n                tickBorderDash,\n                tickBorderDashOffset\n            });\n        }\n        this._ticksLength = ticksLength;\n        this._borderValue = borderValue;\n        return items;\n    }\n _computeLabelItems(chartArea) {\n        const axis = this.axis;\n        const options = this.options;\n        const { position , ticks: optionTicks  } = options;\n        const isHorizontal = this.isHorizontal();\n        const ticks = this.ticks;\n        const { align , crossAlign , padding , mirror  } = optionTicks;\n        const tl = getTickMarkLength(options.grid);\n        const tickAndPadding = tl + padding;\n        const hTickAndPadding = mirror ? -padding : tickAndPadding;\n        const rotation = -toRadians(this.labelRotation);\n        const items = [];\n        let i, ilen, tick, label, x, y, textAlign, pixel, font, lineHeight, lineCount, textOffset;\n        let textBaseline = 'middle';\n        if (position === 'top') {\n            y = this.bottom - hTickAndPadding;\n            textAlign = this._getXAxisLabelAlignment();\n        } else if (position === 'bottom') {\n            y = this.top + hTickAndPadding;\n            textAlign = this._getXAxisLabelAlignment();\n        } else if (position === 'left') {\n            const ret = this._getYAxisLabelAlignment(tl);\n            textAlign = ret.textAlign;\n            x = ret.x;\n        } else if (position === 'right') {\n            const ret = this._getYAxisLabelAlignment(tl);\n            textAlign = ret.textAlign;\n            x = ret.x;\n        } else if (axis === 'x') {\n            if (position === 'center') {\n                y = (chartArea.top + chartArea.bottom) / 2 + tickAndPadding;\n            } else if (isObject(position)) {\n                const positionAxisID = Object.keys(position)[0];\n                const value = position[positionAxisID];\n                y = this.chart.scales[positionAxisID].getPixelForValue(value) + tickAndPadding;\n            }\n            textAlign = this._getXAxisLabelAlignment();\n        } else if (axis === 'y') {\n            if (position === 'center') {\n                x = (chartArea.left + chartArea.right) / 2 - tickAndPadding;\n            } else if (isObject(position)) {\n                const positionAxisID = Object.keys(position)[0];\n                const value = position[positionAxisID];\n                x = this.chart.scales[positionAxisID].getPixelForValue(value);\n            }\n            textAlign = this._getYAxisLabelAlignment(tl).textAlign;\n        }\n        if (axis === 'y') {\n            if (align === 'start') {\n                textBaseline = 'top';\n            } else if (align === 'end') {\n                textBaseline = 'bottom';\n            }\n        }\n        const labelSizes = this._getLabelSizes();\n        for(i = 0, ilen = ticks.length; i < ilen; ++i){\n            tick = ticks[i];\n            label = tick.label;\n            const optsAtIndex = optionTicks.setContext(this.getContext(i));\n            pixel = this.getPixelForTick(i) + optionTicks.labelOffset;\n            font = this._resolveTickFontOptions(i);\n            lineHeight = font.lineHeight;\n            lineCount = isArray(label) ? label.length : 1;\n            const halfCount = lineCount / 2;\n            const color = optsAtIndex.color;\n            const strokeColor = optsAtIndex.textStrokeColor;\n            const strokeWidth = optsAtIndex.textStrokeWidth;\n            let tickTextAlign = textAlign;\n            if (isHorizontal) {\n                x = pixel;\n                if (textAlign === 'inner') {\n                    if (i === ilen - 1) {\n                        tickTextAlign = !this.options.reverse ? 'right' : 'left';\n                    } else if (i === 0) {\n                        tickTextAlign = !this.options.reverse ? 'left' : 'right';\n                    } else {\n                        tickTextAlign = 'center';\n                    }\n                }\n                if (position === 'top') {\n                    if (crossAlign === 'near' || rotation !== 0) {\n                        textOffset = -lineCount * lineHeight + lineHeight / 2;\n                    } else if (crossAlign === 'center') {\n                        textOffset = -labelSizes.highest.height / 2 - halfCount * lineHeight + lineHeight;\n                    } else {\n                        textOffset = -labelSizes.highest.height + lineHeight / 2;\n                    }\n                } else {\n                    if (crossAlign === 'near' || rotation !== 0) {\n                        textOffset = lineHeight / 2;\n                    } else if (crossAlign === 'center') {\n                        textOffset = labelSizes.highest.height / 2 - halfCount * lineHeight;\n                    } else {\n                        textOffset = labelSizes.highest.height - lineCount * lineHeight;\n                    }\n                }\n                if (mirror) {\n                    textOffset *= -1;\n                }\n                if (rotation !== 0 && !optsAtIndex.showLabelBackdrop) {\n                    x += lineHeight / 2 * Math.sin(rotation);\n                }\n            } else {\n                y = pixel;\n                textOffset = (1 - lineCount) * lineHeight / 2;\n            }\n            let backdrop;\n            if (optsAtIndex.showLabelBackdrop) {\n                const labelPadding = toPadding(optsAtIndex.backdropPadding);\n                const height = labelSizes.heights[i];\n                const width = labelSizes.widths[i];\n                let top = textOffset - labelPadding.top;\n                let left = 0 - labelPadding.left;\n                switch(textBaseline){\n                    case 'middle':\n                        top -= height / 2;\n                        break;\n                    case 'bottom':\n                        top -= height;\n                        break;\n                }\n                switch(textAlign){\n                    case 'center':\n                        left -= width / 2;\n                        break;\n                    case 'right':\n                        left -= width;\n                        break;\n                }\n                backdrop = {\n                    left,\n                    top,\n                    width: width + labelPadding.width,\n                    height: height + labelPadding.height,\n                    color: optsAtIndex.backdropColor\n                };\n            }\n            items.push({\n                label,\n                font,\n                textOffset,\n                options: {\n                    rotation,\n                    color,\n                    strokeColor,\n                    strokeWidth,\n                    textAlign: tickTextAlign,\n                    textBaseline,\n                    translation: [\n                        x,\n                        y\n                    ],\n                    backdrop\n                }\n            });\n        }\n        return items;\n    }\n    _getXAxisLabelAlignment() {\n        const { position , ticks  } = this.options;\n        const rotation = -toRadians(this.labelRotation);\n        if (rotation) {\n            return position === 'top' ? 'left' : 'right';\n        }\n        let align = 'center';\n        if (ticks.align === 'start') {\n            align = 'left';\n        } else if (ticks.align === 'end') {\n            align = 'right';\n        } else if (ticks.align === 'inner') {\n            align = 'inner';\n        }\n        return align;\n    }\n    _getYAxisLabelAlignment(tl) {\n        const { position , ticks: { crossAlign , mirror , padding  }  } = this.options;\n        const labelSizes = this._getLabelSizes();\n        const tickAndPadding = tl + padding;\n        const widest = labelSizes.widest.width;\n        let textAlign;\n        let x;\n        if (position === 'left') {\n            if (mirror) {\n                x = this.right + padding;\n                if (crossAlign === 'near') {\n                    textAlign = 'left';\n                } else if (crossAlign === 'center') {\n                    textAlign = 'center';\n                    x += widest / 2;\n                } else {\n                    textAlign = 'right';\n                    x += widest;\n                }\n            } else {\n                x = this.right - tickAndPadding;\n                if (crossAlign === 'near') {\n                    textAlign = 'right';\n                } else if (crossAlign === 'center') {\n                    textAlign = 'center';\n                    x -= widest / 2;\n                } else {\n                    textAlign = 'left';\n                    x = this.left;\n                }\n            }\n        } else if (position === 'right') {\n            if (mirror) {\n                x = this.left + padding;\n                if (crossAlign === 'near') {\n                    textAlign = 'right';\n                } else if (crossAlign === 'center') {\n                    textAlign = 'center';\n                    x -= widest / 2;\n                } else {\n                    textAlign = 'left';\n                    x -= widest;\n                }\n            } else {\n                x = this.left + tickAndPadding;\n                if (crossAlign === 'near') {\n                    textAlign = 'left';\n                } else if (crossAlign === 'center') {\n                    textAlign = 'center';\n                    x += widest / 2;\n                } else {\n                    textAlign = 'right';\n                    x = this.right;\n                }\n            }\n        } else {\n            textAlign = 'right';\n        }\n        return {\n            textAlign,\n            x\n        };\n    }\n _computeLabelArea() {\n        if (this.options.ticks.mirror) {\n            return;\n        }\n        const chart = this.chart;\n        const position = this.options.position;\n        if (position === 'left' || position === 'right') {\n            return {\n                top: 0,\n                left: this.left,\n                bottom: chart.height,\n                right: this.right\n            };\n        }\n        if (position === 'top' || position === 'bottom') {\n            return {\n                top: this.top,\n                left: 0,\n                bottom: this.bottom,\n                right: chart.width\n            };\n        }\n    }\n drawBackground() {\n        const { ctx , options: { backgroundColor  } , left , top , width , height  } = this;\n        if (backgroundColor) {\n            ctx.save();\n            ctx.fillStyle = backgroundColor;\n            ctx.fillRect(left, top, width, height);\n            ctx.restore();\n        }\n    }\n    getLineWidthForValue(value) {\n        const grid = this.options.grid;\n        if (!this._isVisible() || !grid.display) {\n            return 0;\n        }\n        const ticks = this.ticks;\n        const index = ticks.findIndex((t)=>t.value === value);\n        if (index >= 0) {\n            const opts = grid.setContext(this.getContext(index));\n            return opts.lineWidth;\n        }\n        return 0;\n    }\n drawGrid(chartArea) {\n        const grid = this.options.grid;\n        const ctx = this.ctx;\n        const items = this._gridLineItems || (this._gridLineItems = this._computeGridLineItems(chartArea));\n        let i, ilen;\n        const drawLine = (p1, p2, style)=>{\n            if (!style.width || !style.color) {\n                return;\n            }\n            ctx.save();\n            ctx.lineWidth = style.width;\n            ctx.strokeStyle = style.color;\n            ctx.setLineDash(style.borderDash || []);\n            ctx.lineDashOffset = style.borderDashOffset;\n            ctx.beginPath();\n            ctx.moveTo(p1.x, p1.y);\n            ctx.lineTo(p2.x, p2.y);\n            ctx.stroke();\n            ctx.restore();\n        };\n        if (grid.display) {\n            for(i = 0, ilen = items.length; i < ilen; ++i){\n                const item = items[i];\n                if (grid.drawOnChartArea) {\n                    drawLine({\n                        x: item.x1,\n                        y: item.y1\n                    }, {\n                        x: item.x2,\n                        y: item.y2\n                    }, item);\n                }\n                if (grid.drawTicks) {\n                    drawLine({\n                        x: item.tx1,\n                        y: item.ty1\n                    }, {\n                        x: item.tx2,\n                        y: item.ty2\n                    }, {\n                        color: item.tickColor,\n                        width: item.tickWidth,\n                        borderDash: item.tickBorderDash,\n                        borderDashOffset: item.tickBorderDashOffset\n                    });\n                }\n            }\n        }\n    }\n drawBorder() {\n        const { chart , ctx , options: { border , grid  }  } = this;\n        const borderOpts = border.setContext(this.getContext());\n        const axisWidth = border.display ? borderOpts.width : 0;\n        if (!axisWidth) {\n            return;\n        }\n        const lastLineWidth = grid.setContext(this.getContext(0)).lineWidth;\n        const borderValue = this._borderValue;\n        let x1, x2, y1, y2;\n        if (this.isHorizontal()) {\n            x1 = _alignPixel(chart, this.left, axisWidth) - axisWidth / 2;\n            x2 = _alignPixel(chart, this.right, lastLineWidth) + lastLineWidth / 2;\n            y1 = y2 = borderValue;\n        } else {\n            y1 = _alignPixel(chart, this.top, axisWidth) - axisWidth / 2;\n            y2 = _alignPixel(chart, this.bottom, lastLineWidth) + lastLineWidth / 2;\n            x1 = x2 = borderValue;\n        }\n        ctx.save();\n        ctx.lineWidth = borderOpts.width;\n        ctx.strokeStyle = borderOpts.color;\n        ctx.beginPath();\n        ctx.moveTo(x1, y1);\n        ctx.lineTo(x2, y2);\n        ctx.stroke();\n        ctx.restore();\n    }\n drawLabels(chartArea) {\n        const optionTicks = this.options.ticks;\n        if (!optionTicks.display) {\n            return;\n        }\n        const ctx = this.ctx;\n        const area = this._computeLabelArea();\n        if (area) {\n            clipArea(ctx, area);\n        }\n        const items = this.getLabelItems(chartArea);\n        for (const item of items){\n            const renderTextOptions = item.options;\n            const tickFont = item.font;\n            const label = item.label;\n            const y = item.textOffset;\n            renderText(ctx, label, 0, y, tickFont, renderTextOptions);\n        }\n        if (area) {\n            unclipArea(ctx);\n        }\n    }\n drawTitle() {\n        const { ctx , options: { position , title , reverse  }  } = this;\n        if (!title.display) {\n            return;\n        }\n        const font = toFont(title.font);\n        const padding = toPadding(title.padding);\n        const align = title.align;\n        let offset = font.lineHeight / 2;\n        if (position === 'bottom' || position === 'center' || isObject(position)) {\n            offset += padding.bottom;\n            if (isArray(title.text)) {\n                offset += font.lineHeight * (title.text.length - 1);\n            }\n        } else {\n            offset += padding.top;\n        }\n        const { titleX , titleY , maxWidth , rotation  } = titleArgs(this, offset, position, align);\n        renderText(ctx, title.text, 0, 0, font, {\n            color: title.color,\n            maxWidth,\n            rotation,\n            textAlign: titleAlign(align, position, reverse),\n            textBaseline: 'middle',\n            translation: [\n                titleX,\n                titleY\n            ]\n        });\n    }\n    draw(chartArea) {\n        if (!this._isVisible()) {\n            return;\n        }\n        this.drawBackground();\n        this.drawGrid(chartArea);\n        this.drawBorder();\n        this.drawTitle();\n        this.drawLabels(chartArea);\n    }\n _layers() {\n        const opts = this.options;\n        const tz = opts.ticks && opts.ticks.z || 0;\n        const gz = valueOrDefault(opts.grid && opts.grid.z, -1);\n        const bz = valueOrDefault(opts.border && opts.border.z, 0);\n        if (!this._isVisible() || this.draw !== Scale.prototype.draw) {\n            return [\n                {\n                    z: tz,\n                    draw: (chartArea)=>{\n                        this.draw(chartArea);\n                    }\n                }\n            ];\n        }\n        return [\n            {\n                z: gz,\n                draw: (chartArea)=>{\n                    this.drawBackground();\n                    this.drawGrid(chartArea);\n                    this.drawTitle();\n                }\n            },\n            {\n                z: bz,\n                draw: ()=>{\n                    this.drawBorder();\n                }\n            },\n            {\n                z: tz,\n                draw: (chartArea)=>{\n                    this.drawLabels(chartArea);\n                }\n            }\n        ];\n    }\n getMatchingVisibleMetas(type) {\n        const metas = this.chart.getSortedVisibleDatasetMetas();\n        const axisID = this.axis + 'AxisID';\n        const result = [];\n        let i, ilen;\n        for(i = 0, ilen = metas.length; i < ilen; ++i){\n            const meta = metas[i];\n            if (meta[axisID] === this.id && (!type || meta.type === type)) {\n                result.push(meta);\n            }\n        }\n        return result;\n    }\n _resolveTickFontOptions(index) {\n        const opts = this.options.ticks.setContext(this.getContext(index));\n        return toFont(opts.font);\n    }\n _maxDigits() {\n        const fontSize = this._resolveTickFontOptions(0).lineHeight;\n        return (this.isHorizontal() ? this.width : this.height) / fontSize;\n    }\n}\n\nclass TypedRegistry {\n    constructor(type, scope, override){\n        this.type = type;\n        this.scope = scope;\n        this.override = override;\n        this.items = Object.create(null);\n    }\n    isForType(type) {\n        return Object.prototype.isPrototypeOf.call(this.type.prototype, type.prototype);\n    }\n register(item) {\n        const proto = Object.getPrototypeOf(item);\n        let parentScope;\n        if (isIChartComponent(proto)) {\n            parentScope = this.register(proto);\n        }\n        const items = this.items;\n        const id = item.id;\n        const scope = this.scope + '.' + id;\n        if (!id) {\n            throw new Error('class does not have id: ' + item);\n        }\n        if (id in items) {\n            return scope;\n        }\n        items[id] = item;\n        registerDefaults(item, scope, parentScope);\n        if (this.override) {\n            defaults.override(item.id, item.overrides);\n        }\n        return scope;\n    }\n get(id) {\n        return this.items[id];\n    }\n unregister(item) {\n        const items = this.items;\n        const id = item.id;\n        const scope = this.scope;\n        if (id in items) {\n            delete items[id];\n        }\n        if (scope && id in defaults[scope]) {\n            delete defaults[scope][id];\n            if (this.override) {\n                delete overrides[id];\n            }\n        }\n    }\n}\nfunction registerDefaults(item, scope, parentScope) {\n    const itemDefaults = merge(Object.create(null), [\n        parentScope ? defaults.get(parentScope) : {},\n        defaults.get(scope),\n        item.defaults\n    ]);\n    defaults.set(scope, itemDefaults);\n    if (item.defaultRoutes) {\n        routeDefaults(scope, item.defaultRoutes);\n    }\n    if (item.descriptors) {\n        defaults.describe(scope, item.descriptors);\n    }\n}\nfunction routeDefaults(scope, routes) {\n    Object.keys(routes).forEach((property)=>{\n        const propertyParts = property.split('.');\n        const sourceName = propertyParts.pop();\n        const sourceScope = [\n            scope\n        ].concat(propertyParts).join('.');\n        const parts = routes[property].split('.');\n        const targetName = parts.pop();\n        const targetScope = parts.join('.');\n        defaults.route(sourceScope, sourceName, targetScope, targetName);\n    });\n}\nfunction isIChartComponent(proto) {\n    return 'id' in proto && 'defaults' in proto;\n}\n\nclass Registry {\n    constructor(){\n        this.controllers = new TypedRegistry(DatasetController, 'datasets', true);\n        this.elements = new TypedRegistry(Element, 'elements');\n        this.plugins = new TypedRegistry(Object, 'plugins');\n        this.scales = new TypedRegistry(Scale, 'scales');\n        this._typedRegistries = [\n            this.controllers,\n            this.scales,\n            this.elements\n        ];\n    }\n add(...args) {\n        this._each('register', args);\n    }\n    remove(...args) {\n        this._each('unregister', args);\n    }\n addControllers(...args) {\n        this._each('register', args, this.controllers);\n    }\n addElements(...args) {\n        this._each('register', args, this.elements);\n    }\n addPlugins(...args) {\n        this._each('register', args, this.plugins);\n    }\n addScales(...args) {\n        this._each('register', args, this.scales);\n    }\n getController(id) {\n        return this._get(id, this.controllers, 'controller');\n    }\n getElement(id) {\n        return this._get(id, this.elements, 'element');\n    }\n getPlugin(id) {\n        return this._get(id, this.plugins, 'plugin');\n    }\n getScale(id) {\n        return this._get(id, this.scales, 'scale');\n    }\n removeControllers(...args) {\n        this._each('unregister', args, this.controllers);\n    }\n removeElements(...args) {\n        this._each('unregister', args, this.elements);\n    }\n removePlugins(...args) {\n        this._each('unregister', args, this.plugins);\n    }\n removeScales(...args) {\n        this._each('unregister', args, this.scales);\n    }\n _each(method, args, typedRegistry) {\n        [\n            ...args\n        ].forEach((arg)=>{\n            const reg = typedRegistry || this._getRegistryForType(arg);\n            if (typedRegistry || reg.isForType(arg) || reg === this.plugins && arg.id) {\n                this._exec(method, reg, arg);\n            } else {\n                each(arg, (item)=>{\n                    const itemReg = typedRegistry || this._getRegistryForType(item);\n                    this._exec(method, itemReg, item);\n                });\n            }\n        });\n    }\n _exec(method, registry, component) {\n        const camelMethod = _capitalize(method);\n        callback(component['before' + camelMethod], [], component);\n        registry[method](component);\n        callback(component['after' + camelMethod], [], component);\n    }\n _getRegistryForType(type) {\n        for(let i = 0; i < this._typedRegistries.length; i++){\n            const reg = this._typedRegistries[i];\n            if (reg.isForType(type)) {\n                return reg;\n            }\n        }\n        return this.plugins;\n    }\n _get(id, typedRegistry, type) {\n        const item = typedRegistry.get(id);\n        if (item === undefined) {\n            throw new Error('\"' + id + '\" is not a registered ' + type + '.');\n        }\n        return item;\n    }\n}\nvar registry = /* #__PURE__ */ new Registry();\n\nclass PluginService {\n    constructor(){\n        this._init = [];\n    }\n notify(chart, hook, args, filter) {\n        if (hook === 'beforeInit') {\n            this._init = this._createDescriptors(chart, true);\n            this._notify(this._init, chart, 'install');\n        }\n        const descriptors = filter ? this._descriptors(chart).filter(filter) : this._descriptors(chart);\n        const result = this._notify(descriptors, chart, hook, args);\n        if (hook === 'afterDestroy') {\n            this._notify(descriptors, chart, 'stop');\n            this._notify(this._init, chart, 'uninstall');\n        }\n        return result;\n    }\n _notify(descriptors, chart, hook, args) {\n        args = args || {};\n        for (const descriptor of descriptors){\n            const plugin = descriptor.plugin;\n            const method = plugin[hook];\n            const params = [\n                chart,\n                args,\n                descriptor.options\n            ];\n            if (callback(method, params, plugin) === false && args.cancelable) {\n                return false;\n            }\n        }\n        return true;\n    }\n    invalidate() {\n        if (!isNullOrUndef(this._cache)) {\n            this._oldCache = this._cache;\n            this._cache = undefined;\n        }\n    }\n _descriptors(chart) {\n        if (this._cache) {\n            return this._cache;\n        }\n        const descriptors = this._cache = this._createDescriptors(chart);\n        this._notifyStateChanges(chart);\n        return descriptors;\n    }\n    _createDescriptors(chart, all) {\n        const config = chart && chart.config;\n        const options = valueOrDefault(config.options && config.options.plugins, {});\n        const plugins = allPlugins(config);\n        return options === false && !all ? [] : createDescriptors(chart, plugins, options, all);\n    }\n _notifyStateChanges(chart) {\n        const previousDescriptors = this._oldCache || [];\n        const descriptors = this._cache;\n        const diff = (a, b)=>a.filter((x)=>!b.some((y)=>x.plugin.id === y.plugin.id));\n        this._notify(diff(previousDescriptors, descriptors), chart, 'stop');\n        this._notify(diff(descriptors, previousDescriptors), chart, 'start');\n    }\n}\n function allPlugins(config) {\n    const localIds = {};\n    const plugins = [];\n    const keys = Object.keys(registry.plugins.items);\n    for(let i = 0; i < keys.length; i++){\n        plugins.push(registry.getPlugin(keys[i]));\n    }\n    const local = config.plugins || [];\n    for(let i = 0; i < local.length; i++){\n        const plugin = local[i];\n        if (plugins.indexOf(plugin) === -1) {\n            plugins.push(plugin);\n            localIds[plugin.id] = true;\n        }\n    }\n    return {\n        plugins,\n        localIds\n    };\n}\nfunction getOpts(options, all) {\n    if (!all && options === false) {\n        return null;\n    }\n    if (options === true) {\n        return {};\n    }\n    return options;\n}\nfunction createDescriptors(chart, { plugins , localIds  }, options, all) {\n    const result = [];\n    const context = chart.getContext();\n    for (const plugin of plugins){\n        const id = plugin.id;\n        const opts = getOpts(options[id], all);\n        if (opts === null) {\n            continue;\n        }\n        result.push({\n            plugin,\n            options: pluginOpts(chart.config, {\n                plugin,\n                local: localIds[id]\n            }, opts, context)\n        });\n    }\n    return result;\n}\nfunction pluginOpts(config, { plugin , local  }, opts, context) {\n    const keys = config.pluginScopeKeys(plugin);\n    const scopes = config.getOptionScopes(opts, keys);\n    if (local && plugin.defaults) {\n        scopes.push(plugin.defaults);\n    }\n    return config.createResolver(scopes, context, [\n        ''\n    ], {\n        scriptable: false,\n        indexable: false,\n        allKeys: true\n    });\n}\n\nfunction getIndexAxis(type, options) {\n    const datasetDefaults = defaults.datasets[type] || {};\n    const datasetOptions = (options.datasets || {})[type] || {};\n    return datasetOptions.indexAxis || options.indexAxis || datasetDefaults.indexAxis || 'x';\n}\nfunction getAxisFromDefaultScaleID(id, indexAxis) {\n    let axis = id;\n    if (id === '_index_') {\n        axis = indexAxis;\n    } else if (id === '_value_') {\n        axis = indexAxis === 'x' ? 'y' : 'x';\n    }\n    return axis;\n}\nfunction getDefaultScaleIDFromAxis(axis, indexAxis) {\n    return axis === indexAxis ? '_index_' : '_value_';\n}\nfunction idMatchesAxis(id) {\n    if (id === 'x' || id === 'y' || id === 'r') {\n        return id;\n    }\n}\nfunction axisFromPosition(position) {\n    if (position === 'top' || position === 'bottom') {\n        return 'x';\n    }\n    if (position === 'left' || position === 'right') {\n        return 'y';\n    }\n}\nfunction determineAxis(id, ...scaleOptions) {\n    if (idMatchesAxis(id)) {\n        return id;\n    }\n    for (const opts of scaleOptions){\n        const axis = opts.axis || axisFromPosition(opts.position) || id.length > 1 && idMatchesAxis(id[0].toLowerCase());\n        if (axis) {\n            return axis;\n        }\n    }\n    throw new Error(`Cannot determine type of '${id}' axis. Please provide 'axis' or 'position' option.`);\n}\nfunction getAxisFromDataset(id, axis, dataset) {\n    if (dataset[axis + 'AxisID'] === id) {\n        return {\n            axis\n        };\n    }\n}\nfunction retrieveAxisFromDatasets(id, config) {\n    if (config.data && config.data.datasets) {\n        const boundDs = config.data.datasets.filter((d)=>d.xAxisID === id || d.yAxisID === id);\n        if (boundDs.length) {\n            return getAxisFromDataset(id, 'x', boundDs[0]) || getAxisFromDataset(id, 'y', boundDs[0]);\n        }\n    }\n    return {};\n}\nfunction mergeScaleConfig(config, options) {\n    const chartDefaults = overrides[config.type] || {\n        scales: {}\n    };\n    const configScales = options.scales || {};\n    const chartIndexAxis = getIndexAxis(config.type, options);\n    const scales = Object.create(null);\n    Object.keys(configScales).forEach((id)=>{\n        const scaleConf = configScales[id];\n        if (!isObject(scaleConf)) {\n            return console.error(`Invalid scale configuration for scale: ${id}`);\n        }\n        if (scaleConf._proxy) {\n            return console.warn(`Ignoring resolver passed as options for scale: ${id}`);\n        }\n        const axis = determineAxis(id, scaleConf, retrieveAxisFromDatasets(id, config), defaults.scales[scaleConf.type]);\n        const defaultId = getDefaultScaleIDFromAxis(axis, chartIndexAxis);\n        const defaultScaleOptions = chartDefaults.scales || {};\n        scales[id] = mergeIf(Object.create(null), [\n            {\n                axis\n            },\n            scaleConf,\n            defaultScaleOptions[axis],\n            defaultScaleOptions[defaultId]\n        ]);\n    });\n    config.data.datasets.forEach((dataset)=>{\n        const type = dataset.type || config.type;\n        const indexAxis = dataset.indexAxis || getIndexAxis(type, options);\n        const datasetDefaults = overrides[type] || {};\n        const defaultScaleOptions = datasetDefaults.scales || {};\n        Object.keys(defaultScaleOptions).forEach((defaultID)=>{\n            const axis = getAxisFromDefaultScaleID(defaultID, indexAxis);\n            const id = dataset[axis + 'AxisID'] || axis;\n            scales[id] = scales[id] || Object.create(null);\n            mergeIf(scales[id], [\n                {\n                    axis\n                },\n                configScales[id],\n                defaultScaleOptions[defaultID]\n            ]);\n        });\n    });\n    Object.keys(scales).forEach((key)=>{\n        const scale = scales[key];\n        mergeIf(scale, [\n            defaults.scales[scale.type],\n            defaults.scale\n        ]);\n    });\n    return scales;\n}\nfunction initOptions(config) {\n    const options = config.options || (config.options = {});\n    options.plugins = valueOrDefault(options.plugins, {});\n    options.scales = mergeScaleConfig(config, options);\n}\nfunction initData(data) {\n    data = data || {};\n    data.datasets = data.datasets || [];\n    data.labels = data.labels || [];\n    return data;\n}\nfunction initConfig(config) {\n    config = config || {};\n    config.data = initData(config.data);\n    initOptions(config);\n    return config;\n}\nconst keyCache = new Map();\nconst keysCached = new Set();\nfunction cachedKeys(cacheKey, generate) {\n    let keys = keyCache.get(cacheKey);\n    if (!keys) {\n        keys = generate();\n        keyCache.set(cacheKey, keys);\n        keysCached.add(keys);\n    }\n    return keys;\n}\nconst addIfFound = (set, obj, key)=>{\n    const opts = resolveObjectKey(obj, key);\n    if (opts !== undefined) {\n        set.add(opts);\n    }\n};\nclass Config {\n    constructor(config){\n        this._config = initConfig(config);\n        this._scopeCache = new Map();\n        this._resolverCache = new Map();\n    }\n    get platform() {\n        return this._config.platform;\n    }\n    get type() {\n        return this._config.type;\n    }\n    set type(type) {\n        this._config.type = type;\n    }\n    get data() {\n        return this._config.data;\n    }\n    set data(data) {\n        this._config.data = initData(data);\n    }\n    get options() {\n        return this._config.options;\n    }\n    set options(options) {\n        this._config.options = options;\n    }\n    get plugins() {\n        return this._config.plugins;\n    }\n    update() {\n        const config = this._config;\n        this.clearCache();\n        initOptions(config);\n    }\n    clearCache() {\n        this._scopeCache.clear();\n        this._resolverCache.clear();\n    }\n datasetScopeKeys(datasetType) {\n        return cachedKeys(datasetType, ()=>[\n                [\n                    `datasets.${datasetType}`,\n                    ''\n                ]\n            ]);\n    }\n datasetAnimationScopeKeys(datasetType, transition) {\n        return cachedKeys(`${datasetType}.transition.${transition}`, ()=>[\n                [\n                    `datasets.${datasetType}.transitions.${transition}`,\n                    `transitions.${transition}`\n                ],\n                [\n                    `datasets.${datasetType}`,\n                    ''\n                ]\n            ]);\n    }\n datasetElementScopeKeys(datasetType, elementType) {\n        return cachedKeys(`${datasetType}-${elementType}`, ()=>[\n                [\n                    `datasets.${datasetType}.elements.${elementType}`,\n                    `datasets.${datasetType}`,\n                    `elements.${elementType}`,\n                    ''\n                ]\n            ]);\n    }\n pluginScopeKeys(plugin) {\n        const id = plugin.id;\n        const type = this.type;\n        return cachedKeys(`${type}-plugin-${id}`, ()=>[\n                [\n                    `plugins.${id}`,\n                    ...plugin.additionalOptionScopes || []\n                ]\n            ]);\n    }\n _cachedScopes(mainScope, resetCache) {\n        const _scopeCache = this._scopeCache;\n        let cache = _scopeCache.get(mainScope);\n        if (!cache || resetCache) {\n            cache = new Map();\n            _scopeCache.set(mainScope, cache);\n        }\n        return cache;\n    }\n getOptionScopes(mainScope, keyLists, resetCache) {\n        const { options , type  } = this;\n        const cache = this._cachedScopes(mainScope, resetCache);\n        const cached = cache.get(keyLists);\n        if (cached) {\n            return cached;\n        }\n        const scopes = new Set();\n        keyLists.forEach((keys)=>{\n            if (mainScope) {\n                scopes.add(mainScope);\n                keys.forEach((key)=>addIfFound(scopes, mainScope, key));\n            }\n            keys.forEach((key)=>addIfFound(scopes, options, key));\n            keys.forEach((key)=>addIfFound(scopes, overrides[type] || {}, key));\n            keys.forEach((key)=>addIfFound(scopes, defaults, key));\n            keys.forEach((key)=>addIfFound(scopes, descriptors, key));\n        });\n        const array = Array.from(scopes);\n        if (array.length === 0) {\n            array.push(Object.create(null));\n        }\n        if (keysCached.has(keyLists)) {\n            cache.set(keyLists, array);\n        }\n        return array;\n    }\n chartOptionScopes() {\n        const { options , type  } = this;\n        return [\n            options,\n            overrides[type] || {},\n            defaults.datasets[type] || {},\n            {\n                type\n            },\n            defaults,\n            descriptors\n        ];\n    }\n resolveNamedOptions(scopes, names, context, prefixes = [\n        ''\n    ]) {\n        const result = {\n            $shared: true\n        };\n        const { resolver , subPrefixes  } = getResolver(this._resolverCache, scopes, prefixes);\n        let options = resolver;\n        if (needContext(resolver, names)) {\n            result.$shared = false;\n            context = isFunction(context) ? context() : context;\n            const subResolver = this.createResolver(scopes, context, subPrefixes);\n            options = _attachContext(resolver, context, subResolver);\n        }\n        for (const prop of names){\n            result[prop] = options[prop];\n        }\n        return result;\n    }\n createResolver(scopes, context, prefixes = [\n        ''\n    ], descriptorDefaults) {\n        const { resolver  } = getResolver(this._resolverCache, scopes, prefixes);\n        return isObject(context) ? _attachContext(resolver, context, undefined, descriptorDefaults) : resolver;\n    }\n}\nfunction getResolver(resolverCache, scopes, prefixes) {\n    let cache = resolverCache.get(scopes);\n    if (!cache) {\n        cache = new Map();\n        resolverCache.set(scopes, cache);\n    }\n    const cacheKey = prefixes.join();\n    let cached = cache.get(cacheKey);\n    if (!cached) {\n        const resolver = _createResolver(scopes, prefixes);\n        cached = {\n            resolver,\n            subPrefixes: prefixes.filter((p)=>!p.toLowerCase().includes('hover'))\n        };\n        cache.set(cacheKey, cached);\n    }\n    return cached;\n}\nconst hasFunction = (value)=>isObject(value) && Object.getOwnPropertyNames(value).reduce((acc, key)=>acc || isFunction(value[key]), false);\nfunction needContext(proxy, names) {\n    const { isScriptable , isIndexable  } = _descriptors(proxy);\n    for (const prop of names){\n        const scriptable = isScriptable(prop);\n        const indexable = isIndexable(prop);\n        const value = (indexable || scriptable) && proxy[prop];\n        if (scriptable && (isFunction(value) || hasFunction(value)) || indexable && isArray(value)) {\n            return true;\n        }\n    }\n    return false;\n}\n\nvar version = \"4.3.0\";\n\nconst KNOWN_POSITIONS = [\n    'top',\n    'bottom',\n    'left',\n    'right',\n    'chartArea'\n];\nfunction positionIsHorizontal(position, axis) {\n    return position === 'top' || position === 'bottom' || KNOWN_POSITIONS.indexOf(position) === -1 && axis === 'x';\n}\nfunction compare2Level(l1, l2) {\n    return function(a, b) {\n        return a[l1] === b[l1] ? a[l2] - b[l2] : a[l1] - b[l1];\n    };\n}\nfunction onAnimationsComplete(context) {\n    const chart = context.chart;\n    const animationOptions = chart.options.animation;\n    chart.notifyPlugins('afterRender');\n    callback(animationOptions && animationOptions.onComplete, [\n        context\n    ], chart);\n}\nfunction onAnimationProgress(context) {\n    const chart = context.chart;\n    const animationOptions = chart.options.animation;\n    callback(animationOptions && animationOptions.onProgress, [\n        context\n    ], chart);\n}\n function getCanvas(item) {\n    if (_isDomSupported() && typeof item === 'string') {\n        item = document.getElementById(item);\n    } else if (item && item.length) {\n        item = item[0];\n    }\n    if (item && item.canvas) {\n        item = item.canvas;\n    }\n    return item;\n}\nconst instances = {};\nconst getChart = (key)=>{\n    const canvas = getCanvas(key);\n    return Object.values(instances).filter((c)=>c.canvas === canvas).pop();\n};\nfunction moveNumericKeys(obj, start, move) {\n    const keys = Object.keys(obj);\n    for (const key of keys){\n        const intKey = +key;\n        if (intKey >= start) {\n            const value = obj[key];\n            delete obj[key];\n            if (move > 0 || intKey > start) {\n                obj[intKey + move] = value;\n            }\n        }\n    }\n}\n function determineLastEvent(e, lastEvent, inChartArea, isClick) {\n    if (!inChartArea || e.type === 'mouseout') {\n        return null;\n    }\n    if (isClick) {\n        return lastEvent;\n    }\n    return e;\n}\nfunction getDatasetArea(meta) {\n    const { xScale , yScale  } = meta;\n    if (xScale && yScale) {\n        return {\n            left: xScale.left,\n            right: xScale.right,\n            top: yScale.top,\n            bottom: yScale.bottom\n        };\n    }\n}\nclass Chart {\n    static defaults = defaults;\n    static instances = instances;\n    static overrides = overrides;\n    static registry = registry;\n    static version = version;\n    static getChart = getChart;\n    static register(...items) {\n        registry.add(...items);\n        invalidatePlugins();\n    }\n    static unregister(...items) {\n        registry.remove(...items);\n        invalidatePlugins();\n    }\n    constructor(item, userConfig){\n        const config = this.config = new Config(userConfig);\n        const initialCanvas = getCanvas(item);\n        const existingChart = getChart(initialCanvas);\n        if (existingChart) {\n            throw new Error('Canvas is already in use. Chart with ID \\'' + existingChart.id + '\\'' + ' must be destroyed before the canvas with ID \\'' + existingChart.canvas.id + '\\' can be reused.');\n        }\n        const options = config.createResolver(config.chartOptionScopes(), this.getContext());\n        this.platform = new (config.platform || _detectPlatform(initialCanvas))();\n        this.platform.updateConfig(config);\n        const context = this.platform.acquireContext(initialCanvas, options.aspectRatio);\n        const canvas = context && context.canvas;\n        const height = canvas && canvas.height;\n        const width = canvas && canvas.width;\n        this.id = uid();\n        this.ctx = context;\n        this.canvas = canvas;\n        this.width = width;\n        this.height = height;\n        this._options = options;\n        this._aspectRatio = this.aspectRatio;\n        this._layers = [];\n        this._metasets = [];\n        this._stacks = undefined;\n        this.boxes = [];\n        this.currentDevicePixelRatio = undefined;\n        this.chartArea = undefined;\n        this._active = [];\n        this._lastEvent = undefined;\n        this._listeners = {};\n         this._responsiveListeners = undefined;\n        this._sortedMetasets = [];\n        this.scales = {};\n        this._plugins = new PluginService();\n        this.$proxies = {};\n        this._hiddenIndices = {};\n        this.attached = false;\n        this._animationsDisabled = undefined;\n        this.$context = undefined;\n        this._doResize = debounce((mode)=>this.update(mode), options.resizeDelay || 0);\n        this._dataChanges = [];\n        instances[this.id] = this;\n        if (!context || !canvas) {\n            console.error(\"Failed to create chart: can't acquire context from the given item\");\n            return;\n        }\n        animator.listen(this, 'complete', onAnimationsComplete);\n        animator.listen(this, 'progress', onAnimationProgress);\n        this._initialize();\n        if (this.attached) {\n            this.update();\n        }\n    }\n    get aspectRatio() {\n        const { options: { aspectRatio , maintainAspectRatio  } , width , height , _aspectRatio  } = this;\n        if (!isNullOrUndef(aspectRatio)) {\n            return aspectRatio;\n        }\n        if (maintainAspectRatio && _aspectRatio) {\n            return _aspectRatio;\n        }\n        return height ? width / height : null;\n    }\n    get data() {\n        return this.config.data;\n    }\n    set data(data) {\n        this.config.data = data;\n    }\n    get options() {\n        return this._options;\n    }\n    set options(options) {\n        this.config.options = options;\n    }\n    get registry() {\n        return registry;\n    }\n _initialize() {\n        this.notifyPlugins('beforeInit');\n        if (this.options.responsive) {\n            this.resize();\n        } else {\n            retinaScale(this, this.options.devicePixelRatio);\n        }\n        this.bindEvents();\n        this.notifyPlugins('afterInit');\n        return this;\n    }\n    clear() {\n        clearCanvas(this.canvas, this.ctx);\n        return this;\n    }\n    stop() {\n        animator.stop(this);\n        return this;\n    }\n resize(width, height) {\n        if (!animator.running(this)) {\n            this._resize(width, height);\n        } else {\n            this._resizeBeforeDraw = {\n                width,\n                height\n            };\n        }\n    }\n    _resize(width, height) {\n        const options = this.options;\n        const canvas = this.canvas;\n        const aspectRatio = options.maintainAspectRatio && this.aspectRatio;\n        const newSize = this.platform.getMaximumSize(canvas, width, height, aspectRatio);\n        const newRatio = options.devicePixelRatio || this.platform.getDevicePixelRatio();\n        const mode = this.width ? 'resize' : 'attach';\n        this.width = newSize.width;\n        this.height = newSize.height;\n        this._aspectRatio = this.aspectRatio;\n        if (!retinaScale(this, newRatio, true)) {\n            return;\n        }\n        this.notifyPlugins('resize', {\n            size: newSize\n        });\n        callback(options.onResize, [\n            this,\n            newSize\n        ], this);\n        if (this.attached) {\n            if (this._doResize(mode)) {\n                this.render();\n            }\n        }\n    }\n    ensureScalesHaveIDs() {\n        const options = this.options;\n        const scalesOptions = options.scales || {};\n        each(scalesOptions, (axisOptions, axisID)=>{\n            axisOptions.id = axisID;\n        });\n    }\n buildOrUpdateScales() {\n        const options = this.options;\n        const scaleOpts = options.scales;\n        const scales = this.scales;\n        const updated = Object.keys(scales).reduce((obj, id)=>{\n            obj[id] = false;\n            return obj;\n        }, {});\n        let items = [];\n        if (scaleOpts) {\n            items = items.concat(Object.keys(scaleOpts).map((id)=>{\n                const scaleOptions = scaleOpts[id];\n                const axis = determineAxis(id, scaleOptions);\n                const isRadial = axis === 'r';\n                const isHorizontal = axis === 'x';\n                return {\n                    options: scaleOptions,\n                    dposition: isRadial ? 'chartArea' : isHorizontal ? 'bottom' : 'left',\n                    dtype: isRadial ? 'radialLinear' : isHorizontal ? 'category' : 'linear'\n                };\n            }));\n        }\n        each(items, (item)=>{\n            const scaleOptions = item.options;\n            const id = scaleOptions.id;\n            const axis = determineAxis(id, scaleOptions);\n            const scaleType = valueOrDefault(scaleOptions.type, item.dtype);\n            if (scaleOptions.position === undefined || positionIsHorizontal(scaleOptions.position, axis) !== positionIsHorizontal(item.dposition)) {\n                scaleOptions.position = item.dposition;\n            }\n            updated[id] = true;\n            let scale = null;\n            if (id in scales && scales[id].type === scaleType) {\n                scale = scales[id];\n            } else {\n                const scaleClass = registry.getScale(scaleType);\n                scale = new scaleClass({\n                    id,\n                    type: scaleType,\n                    ctx: this.ctx,\n                    chart: this\n                });\n                scales[scale.id] = scale;\n            }\n            scale.init(scaleOptions, options);\n        });\n        each(updated, (hasUpdated, id)=>{\n            if (!hasUpdated) {\n                delete scales[id];\n            }\n        });\n        each(scales, (scale)=>{\n            layouts.configure(this, scale, scale.options);\n            layouts.addBox(this, scale);\n        });\n    }\n _updateMetasets() {\n        const metasets = this._metasets;\n        const numData = this.data.datasets.length;\n        const numMeta = metasets.length;\n        metasets.sort((a, b)=>a.index - b.index);\n        if (numMeta > numData) {\n            for(let i = numData; i < numMeta; ++i){\n                this._destroyDatasetMeta(i);\n            }\n            metasets.splice(numData, numMeta - numData);\n        }\n        this._sortedMetasets = metasets.slice(0).sort(compare2Level('order', 'index'));\n    }\n _removeUnreferencedMetasets() {\n        const { _metasets: metasets , data: { datasets  }  } = this;\n        if (metasets.length > datasets.length) {\n            delete this._stacks;\n        }\n        metasets.forEach((meta, index)=>{\n            if (datasets.filter((x)=>x === meta._dataset).length === 0) {\n                this._destroyDatasetMeta(index);\n            }\n        });\n    }\n    buildOrUpdateControllers() {\n        const newControllers = [];\n        const datasets = this.data.datasets;\n        let i, ilen;\n        this._removeUnreferencedMetasets();\n        for(i = 0, ilen = datasets.length; i < ilen; i++){\n            const dataset = datasets[i];\n            let meta = this.getDatasetMeta(i);\n            const type = dataset.type || this.config.type;\n            if (meta.type && meta.type !== type) {\n                this._destroyDatasetMeta(i);\n                meta = this.getDatasetMeta(i);\n            }\n            meta.type = type;\n            meta.indexAxis = dataset.indexAxis || getIndexAxis(type, this.options);\n            meta.order = dataset.order || 0;\n            meta.index = i;\n            meta.label = '' + dataset.label;\n            meta.visible = this.isDatasetVisible(i);\n            if (meta.controller) {\n                meta.controller.updateIndex(i);\n                meta.controller.linkScales();\n            } else {\n                const ControllerClass = registry.getController(type);\n                const { datasetElementType , dataElementType  } = defaults.datasets[type];\n                Object.assign(ControllerClass, {\n                    dataElementType: registry.getElement(dataElementType),\n                    datasetElementType: datasetElementType && registry.getElement(datasetElementType)\n                });\n                meta.controller = new ControllerClass(this, i);\n                newControllers.push(meta.controller);\n            }\n        }\n        this._updateMetasets();\n        return newControllers;\n    }\n _resetElements() {\n        each(this.data.datasets, (dataset, datasetIndex)=>{\n            this.getDatasetMeta(datasetIndex).controller.reset();\n        }, this);\n    }\n reset() {\n        this._resetElements();\n        this.notifyPlugins('reset');\n    }\n    update(mode) {\n        const config = this.config;\n        config.update();\n        const options = this._options = config.createResolver(config.chartOptionScopes(), this.getContext());\n        const animsDisabled = this._animationsDisabled = !options.animation;\n        this._updateScales();\n        this._checkEventBindings();\n        this._updateHiddenIndices();\n        this._plugins.invalidate();\n        if (this.notifyPlugins('beforeUpdate', {\n            mode,\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        const newControllers = this.buildOrUpdateControllers();\n        this.notifyPlugins('beforeElementsUpdate');\n        let minPadding = 0;\n        for(let i = 0, ilen = this.data.datasets.length; i < ilen; i++){\n            const { controller  } = this.getDatasetMeta(i);\n            const reset = !animsDisabled && newControllers.indexOf(controller) === -1;\n            controller.buildOrUpdateElements(reset);\n            minPadding = Math.max(+controller.getMaxOverflow(), minPadding);\n        }\n        minPadding = this._minPadding = options.layout.autoPadding ? minPadding : 0;\n        this._updateLayout(minPadding);\n        if (!animsDisabled) {\n            each(newControllers, (controller)=>{\n                controller.reset();\n            });\n        }\n        this._updateDatasets(mode);\n        this.notifyPlugins('afterUpdate', {\n            mode\n        });\n        this._layers.sort(compare2Level('z', '_idx'));\n        const { _active , _lastEvent  } = this;\n        if (_lastEvent) {\n            this._eventHandler(_lastEvent, true);\n        } else if (_active.length) {\n            this._updateHoverStyles(_active, _active, true);\n        }\n        this.render();\n    }\n _updateScales() {\n        each(this.scales, (scale)=>{\n            layouts.removeBox(this, scale);\n        });\n        this.ensureScalesHaveIDs();\n        this.buildOrUpdateScales();\n    }\n _checkEventBindings() {\n        const options = this.options;\n        const existingEvents = new Set(Object.keys(this._listeners));\n        const newEvents = new Set(options.events);\n        if (!setsEqual(existingEvents, newEvents) || !!this._responsiveListeners !== options.responsive) {\n            this.unbindEvents();\n            this.bindEvents();\n        }\n    }\n _updateHiddenIndices() {\n        const { _hiddenIndices  } = this;\n        const changes = this._getUniformDataChanges() || [];\n        for (const { method , start , count  } of changes){\n            const move = method === '_removeElements' ? -count : count;\n            moveNumericKeys(_hiddenIndices, start, move);\n        }\n    }\n _getUniformDataChanges() {\n        const _dataChanges = this._dataChanges;\n        if (!_dataChanges || !_dataChanges.length) {\n            return;\n        }\n        this._dataChanges = [];\n        const datasetCount = this.data.datasets.length;\n        const makeSet = (idx)=>new Set(_dataChanges.filter((c)=>c[0] === idx).map((c, i)=>i + ',' + c.splice(1).join(',')));\n        const changeSet = makeSet(0);\n        for(let i = 1; i < datasetCount; i++){\n            if (!setsEqual(changeSet, makeSet(i))) {\n                return;\n            }\n        }\n        return Array.from(changeSet).map((c)=>c.split(',')).map((a)=>({\n                method: a[1],\n                start: +a[2],\n                count: +a[3]\n            }));\n    }\n _updateLayout(minPadding) {\n        if (this.notifyPlugins('beforeLayout', {\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        layouts.update(this, this.width, this.height, minPadding);\n        const area = this.chartArea;\n        const noArea = area.width <= 0 || area.height <= 0;\n        this._layers = [];\n        each(this.boxes, (box)=>{\n            if (noArea && box.position === 'chartArea') {\n                return;\n            }\n            if (box.configure) {\n                box.configure();\n            }\n            this._layers.push(...box._layers());\n        }, this);\n        this._layers.forEach((item, index)=>{\n            item._idx = index;\n        });\n        this.notifyPlugins('afterLayout');\n    }\n _updateDatasets(mode) {\n        if (this.notifyPlugins('beforeDatasetsUpdate', {\n            mode,\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        for(let i = 0, ilen = this.data.datasets.length; i < ilen; ++i){\n            this.getDatasetMeta(i).controller.configure();\n        }\n        for(let i = 0, ilen = this.data.datasets.length; i < ilen; ++i){\n            this._updateDataset(i, isFunction(mode) ? mode({\n                datasetIndex: i\n            }) : mode);\n        }\n        this.notifyPlugins('afterDatasetsUpdate', {\n            mode\n        });\n    }\n _updateDataset(index, mode) {\n        const meta = this.getDatasetMeta(index);\n        const args = {\n            meta,\n            index,\n            mode,\n            cancelable: true\n        };\n        if (this.notifyPlugins('beforeDatasetUpdate', args) === false) {\n            return;\n        }\n        meta.controller._update(mode);\n        args.cancelable = false;\n        this.notifyPlugins('afterDatasetUpdate', args);\n    }\n    render() {\n        if (this.notifyPlugins('beforeRender', {\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        if (animator.has(this)) {\n            if (this.attached && !animator.running(this)) {\n                animator.start(this);\n            }\n        } else {\n            this.draw();\n            onAnimationsComplete({\n                chart: this\n            });\n        }\n    }\n    draw() {\n        let i;\n        if (this._resizeBeforeDraw) {\n            const { width , height  } = this._resizeBeforeDraw;\n            this._resize(width, height);\n            this._resizeBeforeDraw = null;\n        }\n        this.clear();\n        if (this.width <= 0 || this.height <= 0) {\n            return;\n        }\n        if (this.notifyPlugins('beforeDraw', {\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        const layers = this._layers;\n        for(i = 0; i < layers.length && layers[i].z <= 0; ++i){\n            layers[i].draw(this.chartArea);\n        }\n        this._drawDatasets();\n        for(; i < layers.length; ++i){\n            layers[i].draw(this.chartArea);\n        }\n        this.notifyPlugins('afterDraw');\n    }\n _getSortedDatasetMetas(filterVisible) {\n        const metasets = this._sortedMetasets;\n        const result = [];\n        let i, ilen;\n        for(i = 0, ilen = metasets.length; i < ilen; ++i){\n            const meta = metasets[i];\n            if (!filterVisible || meta.visible) {\n                result.push(meta);\n            }\n        }\n        return result;\n    }\n getSortedVisibleDatasetMetas() {\n        return this._getSortedDatasetMetas(true);\n    }\n _drawDatasets() {\n        if (this.notifyPlugins('beforeDatasetsDraw', {\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        const metasets = this.getSortedVisibleDatasetMetas();\n        for(let i = metasets.length - 1; i >= 0; --i){\n            this._drawDataset(metasets[i]);\n        }\n        this.notifyPlugins('afterDatasetsDraw');\n    }\n _drawDataset(meta) {\n        const ctx = this.ctx;\n        const clip = meta._clip;\n        const useClip = !clip.disabled;\n        const area = getDatasetArea(meta) || this.chartArea;\n        const args = {\n            meta,\n            index: meta.index,\n            cancelable: true\n        };\n        if (this.notifyPlugins('beforeDatasetDraw', args) === false) {\n            return;\n        }\n        if (useClip) {\n            clipArea(ctx, {\n                left: clip.left === false ? 0 : area.left - clip.left,\n                right: clip.right === false ? this.width : area.right + clip.right,\n                top: clip.top === false ? 0 : area.top - clip.top,\n                bottom: clip.bottom === false ? this.height : area.bottom + clip.bottom\n            });\n        }\n        meta.controller.draw();\n        if (useClip) {\n            unclipArea(ctx);\n        }\n        args.cancelable = false;\n        this.notifyPlugins('afterDatasetDraw', args);\n    }\n isPointInArea(point) {\n        return _isPointInArea(point, this.chartArea, this._minPadding);\n    }\n    getElementsAtEventForMode(e, mode, options, useFinalPosition) {\n        const method = Interaction.modes[mode];\n        if (typeof method === 'function') {\n            return method(this, e, options, useFinalPosition);\n        }\n        return [];\n    }\n    getDatasetMeta(datasetIndex) {\n        const dataset = this.data.datasets[datasetIndex];\n        const metasets = this._metasets;\n        let meta = metasets.filter((x)=>x && x._dataset === dataset).pop();\n        if (!meta) {\n            meta = {\n                type: null,\n                data: [],\n                dataset: null,\n                controller: null,\n                hidden: null,\n                xAxisID: null,\n                yAxisID: null,\n                order: dataset && dataset.order || 0,\n                index: datasetIndex,\n                _dataset: dataset,\n                _parsed: [],\n                _sorted: false\n            };\n            metasets.push(meta);\n        }\n        return meta;\n    }\n    getContext() {\n        return this.$context || (this.$context = createContext(null, {\n            chart: this,\n            type: 'chart'\n        }));\n    }\n    getVisibleDatasetCount() {\n        return this.getSortedVisibleDatasetMetas().length;\n    }\n    isDatasetVisible(datasetIndex) {\n        const dataset = this.data.datasets[datasetIndex];\n        if (!dataset) {\n            return false;\n        }\n        const meta = this.getDatasetMeta(datasetIndex);\n        return typeof meta.hidden === 'boolean' ? !meta.hidden : !dataset.hidden;\n    }\n    setDatasetVisibility(datasetIndex, visible) {\n        const meta = this.getDatasetMeta(datasetIndex);\n        meta.hidden = !visible;\n    }\n    toggleDataVisibility(index) {\n        this._hiddenIndices[index] = !this._hiddenIndices[index];\n    }\n    getDataVisibility(index) {\n        return !this._hiddenIndices[index];\n    }\n _updateVisibility(datasetIndex, dataIndex, visible) {\n        const mode = visible ? 'show' : 'hide';\n        const meta = this.getDatasetMeta(datasetIndex);\n        const anims = meta.controller._resolveAnimations(undefined, mode);\n        if (defined(dataIndex)) {\n            meta.data[dataIndex].hidden = !visible;\n            this.update();\n        } else {\n            this.setDatasetVisibility(datasetIndex, visible);\n            anims.update(meta, {\n                visible\n            });\n            this.update((ctx)=>ctx.datasetIndex === datasetIndex ? mode : undefined);\n        }\n    }\n    hide(datasetIndex, dataIndex) {\n        this._updateVisibility(datasetIndex, dataIndex, false);\n    }\n    show(datasetIndex, dataIndex) {\n        this._updateVisibility(datasetIndex, dataIndex, true);\n    }\n _destroyDatasetMeta(datasetIndex) {\n        const meta = this._metasets[datasetIndex];\n        if (meta && meta.controller) {\n            meta.controller._destroy();\n        }\n        delete this._metasets[datasetIndex];\n    }\n    _stop() {\n        let i, ilen;\n        this.stop();\n        animator.remove(this);\n        for(i = 0, ilen = this.data.datasets.length; i < ilen; ++i){\n            this._destroyDatasetMeta(i);\n        }\n    }\n    destroy() {\n        this.notifyPlugins('beforeDestroy');\n        const { canvas , ctx  } = this;\n        this._stop();\n        this.config.clearCache();\n        if (canvas) {\n            this.unbindEvents();\n            clearCanvas(canvas, ctx);\n            this.platform.releaseContext(ctx);\n            this.canvas = null;\n            this.ctx = null;\n        }\n        delete instances[this.id];\n        this.notifyPlugins('afterDestroy');\n    }\n    toBase64Image(...args) {\n        return this.canvas.toDataURL(...args);\n    }\n bindEvents() {\n        this.bindUserEvents();\n        if (this.options.responsive) {\n            this.bindResponsiveEvents();\n        } else {\n            this.attached = true;\n        }\n    }\n bindUserEvents() {\n        const listeners = this._listeners;\n        const platform = this.platform;\n        const _add = (type, listener)=>{\n            platform.addEventListener(this, type, listener);\n            listeners[type] = listener;\n        };\n        const listener = (e, x, y)=>{\n            e.offsetX = x;\n            e.offsetY = y;\n            this._eventHandler(e);\n        };\n        each(this.options.events, (type)=>_add(type, listener));\n    }\n bindResponsiveEvents() {\n        if (!this._responsiveListeners) {\n            this._responsiveListeners = {};\n        }\n        const listeners = this._responsiveListeners;\n        const platform = this.platform;\n        const _add = (type, listener)=>{\n            platform.addEventListener(this, type, listener);\n            listeners[type] = listener;\n        };\n        const _remove = (type, listener)=>{\n            if (listeners[type]) {\n                platform.removeEventListener(this, type, listener);\n                delete listeners[type];\n            }\n        };\n        const listener = (width, height)=>{\n            if (this.canvas) {\n                this.resize(width, height);\n            }\n        };\n        let detached;\n        const attached = ()=>{\n            _remove('attach', attached);\n            this.attached = true;\n            this.resize();\n            _add('resize', listener);\n            _add('detach', detached);\n        };\n        detached = ()=>{\n            this.attached = false;\n            _remove('resize', listener);\n            this._stop();\n            this._resize(0, 0);\n            _add('attach', attached);\n        };\n        if (platform.isAttached(this.canvas)) {\n            attached();\n        } else {\n            detached();\n        }\n    }\n unbindEvents() {\n        each(this._listeners, (listener, type)=>{\n            this.platform.removeEventListener(this, type, listener);\n        });\n        this._listeners = {};\n        each(this._responsiveListeners, (listener, type)=>{\n            this.platform.removeEventListener(this, type, listener);\n        });\n        this._responsiveListeners = undefined;\n    }\n    updateHoverStyle(items, mode, enabled) {\n        const prefix = enabled ? 'set' : 'remove';\n        let meta, item, i, ilen;\n        if (mode === 'dataset') {\n            meta = this.getDatasetMeta(items[0].datasetIndex);\n            meta.controller['_' + prefix + 'DatasetHoverStyle']();\n        }\n        for(i = 0, ilen = items.length; i < ilen; ++i){\n            item = items[i];\n            const controller = item && this.getDatasetMeta(item.datasetIndex).controller;\n            if (controller) {\n                controller[prefix + 'HoverStyle'](item.element, item.datasetIndex, item.index);\n            }\n        }\n    }\n getActiveElements() {\n        return this._active || [];\n    }\n setActiveElements(activeElements) {\n        const lastActive = this._active || [];\n        const active = activeElements.map(({ datasetIndex , index  })=>{\n            const meta = this.getDatasetMeta(datasetIndex);\n            if (!meta) {\n                throw new Error('No dataset found at index ' + datasetIndex);\n            }\n            return {\n                datasetIndex,\n                element: meta.data[index],\n                index\n            };\n        });\n        const changed = !_elementsEqual(active, lastActive);\n        if (changed) {\n            this._active = active;\n            this._lastEvent = null;\n            this._updateHoverStyles(active, lastActive);\n        }\n    }\n notifyPlugins(hook, args, filter) {\n        return this._plugins.notify(this, hook, args, filter);\n    }\n isPluginEnabled(pluginId) {\n        return this._plugins._cache.filter((p)=>p.plugin.id === pluginId).length === 1;\n    }\n _updateHoverStyles(active, lastActive, replay) {\n        const hoverOptions = this.options.hover;\n        const diff = (a, b)=>a.filter((x)=>!b.some((y)=>x.datasetIndex === y.datasetIndex && x.index === y.index));\n        const deactivated = diff(lastActive, active);\n        const activated = replay ? active : diff(active, lastActive);\n        if (deactivated.length) {\n            this.updateHoverStyle(deactivated, hoverOptions.mode, false);\n        }\n        if (activated.length && hoverOptions.mode) {\n            this.updateHoverStyle(activated, hoverOptions.mode, true);\n        }\n    }\n _eventHandler(e, replay) {\n        const args = {\n            event: e,\n            replay,\n            cancelable: true,\n            inChartArea: this.isPointInArea(e)\n        };\n        const eventFilter = (plugin)=>(plugin.options.events || this.options.events).includes(e.native.type);\n        if (this.notifyPlugins('beforeEvent', args, eventFilter) === false) {\n            return;\n        }\n        const changed = this._handleEvent(e, replay, args.inChartArea);\n        args.cancelable = false;\n        this.notifyPlugins('afterEvent', args, eventFilter);\n        if (changed || args.changed) {\n            this.render();\n        }\n        return this;\n    }\n _handleEvent(e, replay, inChartArea) {\n        const { _active: lastActive = [] , options  } = this;\n        const useFinalPosition = replay;\n        const active = this._getActiveElements(e, lastActive, inChartArea, useFinalPosition);\n        const isClick = _isClickEvent(e);\n        const lastEvent = determineLastEvent(e, this._lastEvent, inChartArea, isClick);\n        if (inChartArea) {\n            this._lastEvent = null;\n            callback(options.onHover, [\n                e,\n                active,\n                this\n            ], this);\n            if (isClick) {\n                callback(options.onClick, [\n                    e,\n                    active,\n                    this\n                ], this);\n            }\n        }\n        const changed = !_elementsEqual(active, lastActive);\n        if (changed || replay) {\n            this._active = active;\n            this._updateHoverStyles(active, lastActive, replay);\n        }\n        this._lastEvent = lastEvent;\n        return changed;\n    }\n _getActiveElements(e, lastActive, inChartArea, useFinalPosition) {\n        if (e.type === 'mouseout') {\n            return [];\n        }\n        if (!inChartArea) {\n            return lastActive;\n        }\n        const hoverOptions = this.options.hover;\n        return this.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions, useFinalPosition);\n    }\n}\nfunction invalidatePlugins() {\n    return each(Chart.instances, (chart)=>chart._plugins.invalidate());\n}\n\nfunction clipArc(ctx, element, endAngle) {\n    const { startAngle , pixelMargin , x , y , outerRadius , innerRadius  } = element;\n    let angleMargin = pixelMargin / outerRadius;\n    // Draw an inner border by clipping the arc and drawing a double-width border\n    // Enlarge the clipping arc by 0.33 pixels to eliminate glitches between borders\n    ctx.beginPath();\n    ctx.arc(x, y, outerRadius, startAngle - angleMargin, endAngle + angleMargin);\n    if (innerRadius > pixelMargin) {\n        angleMargin = pixelMargin / innerRadius;\n        ctx.arc(x, y, innerRadius, endAngle + angleMargin, startAngle - angleMargin, true);\n    } else {\n        ctx.arc(x, y, pixelMargin, endAngle + HALF_PI, startAngle - HALF_PI);\n    }\n    ctx.closePath();\n    ctx.clip();\n}\nfunction toRadiusCorners(value) {\n    return _readValueToProps(value, [\n        'outerStart',\n        'outerEnd',\n        'innerStart',\n        'innerEnd'\n    ]);\n}\n/**\n * Parse border radius from the provided options\n */ function parseBorderRadius$1(arc, innerRadius, outerRadius, angleDelta) {\n    const o = toRadiusCorners(arc.options.borderRadius);\n    const halfThickness = (outerRadius - innerRadius) / 2;\n    const innerLimit = Math.min(halfThickness, angleDelta * innerRadius / 2);\n    // Outer limits are complicated. We want to compute the available angular distance at\n    // a radius of outerRadius - borderRadius because for small angular distances, this term limits.\n    // We compute at r = outerRadius - borderRadius because this circle defines the center of the border corners.\n    //\n    // If the borderRadius is large, that value can become negative.\n    // This causes the outer borders to lose their radius entirely, which is rather unexpected. To solve that, if borderRadius > outerRadius\n    // we know that the thickness term will dominate and compute the limits at that point\n    const computeOuterLimit = (val)=>{\n        const outerArcLimit = (outerRadius - Math.min(halfThickness, val)) * angleDelta / 2;\n        return _limitValue(val, 0, Math.min(halfThickness, outerArcLimit));\n    };\n    return {\n        outerStart: computeOuterLimit(o.outerStart),\n        outerEnd: computeOuterLimit(o.outerEnd),\n        innerStart: _limitValue(o.innerStart, 0, innerLimit),\n        innerEnd: _limitValue(o.innerEnd, 0, innerLimit)\n    };\n}\n/**\n * Convert (r, ùúÉ) to (x, y)\n */ function rThetaToXY(r, theta, x, y) {\n    return {\n        x: x + r * Math.cos(theta),\n        y: y + r * Math.sin(theta)\n    };\n}\n/**\n * Path the arc, respecting border radius by separating into left and right halves.\n *\n *   Start      End\n *\n *    1--->a--->2    Outer\n *   /           \\\n *   8           3\n *   |           |\n *   |           |\n *   7           4\n *   \\           /\n *    6<---b<---5    Inner\n */ function pathArc(ctx, element, offset, spacing, end, circular) {\n    const { x , y , startAngle: start , pixelMargin , innerRadius: innerR  } = element;\n    const outerRadius = Math.max(element.outerRadius + spacing + offset - pixelMargin, 0);\n    const innerRadius = innerR > 0 ? innerR + spacing + offset + pixelMargin : 0;\n    let spacingOffset = 0;\n    const alpha = end - start;\n    if (spacing) {\n        // When spacing is present, it is the same for all items\n        // So we adjust the start and end angle of the arc such that\n        // the distance is the same as it would be without the spacing\n        const noSpacingInnerRadius = innerR > 0 ? innerR - spacing : 0;\n        const noSpacingOuterRadius = outerRadius > 0 ? outerRadius - spacing : 0;\n        const avNogSpacingRadius = (noSpacingInnerRadius + noSpacingOuterRadius) / 2;\n        const adjustedAngle = avNogSpacingRadius !== 0 ? alpha * avNogSpacingRadius / (avNogSpacingRadius + spacing) : alpha;\n        spacingOffset = (alpha - adjustedAngle) / 2;\n    }\n    const beta = Math.max(0.001, alpha * outerRadius - offset / PI) / outerRadius;\n    const angleOffset = (alpha - beta) / 2;\n    const startAngle = start + angleOffset + spacingOffset;\n    const endAngle = end - angleOffset - spacingOffset;\n    const { outerStart , outerEnd , innerStart , innerEnd  } = parseBorderRadius$1(element, innerRadius, outerRadius, endAngle - startAngle);\n    const outerStartAdjustedRadius = outerRadius - outerStart;\n    const outerEndAdjustedRadius = outerRadius - outerEnd;\n    const outerStartAdjustedAngle = startAngle + outerStart / outerStartAdjustedRadius;\n    const outerEndAdjustedAngle = endAngle - outerEnd / outerEndAdjustedRadius;\n    const innerStartAdjustedRadius = innerRadius + innerStart;\n    const innerEndAdjustedRadius = innerRadius + innerEnd;\n    const innerStartAdjustedAngle = startAngle + innerStart / innerStartAdjustedRadius;\n    const innerEndAdjustedAngle = endAngle - innerEnd / innerEndAdjustedRadius;\n    ctx.beginPath();\n    if (circular) {\n        // The first arc segments from point 1 to point a to point 2\n        const outerMidAdjustedAngle = (outerStartAdjustedAngle + outerEndAdjustedAngle) / 2;\n        ctx.arc(x, y, outerRadius, outerStartAdjustedAngle, outerMidAdjustedAngle);\n        ctx.arc(x, y, outerRadius, outerMidAdjustedAngle, outerEndAdjustedAngle);\n        // The corner segment from point 2 to point 3\n        if (outerEnd > 0) {\n            const pCenter = rThetaToXY(outerEndAdjustedRadius, outerEndAdjustedAngle, x, y);\n            ctx.arc(pCenter.x, pCenter.y, outerEnd, outerEndAdjustedAngle, endAngle + HALF_PI);\n        }\n        // The line from point 3 to point 4\n        const p4 = rThetaToXY(innerEndAdjustedRadius, endAngle, x, y);\n        ctx.lineTo(p4.x, p4.y);\n        // The corner segment from point 4 to point 5\n        if (innerEnd > 0) {\n            const pCenter = rThetaToXY(innerEndAdjustedRadius, innerEndAdjustedAngle, x, y);\n            ctx.arc(pCenter.x, pCenter.y, innerEnd, endAngle + HALF_PI, innerEndAdjustedAngle + Math.PI);\n        }\n        // The inner arc from point 5 to point b to point 6\n        const innerMidAdjustedAngle = (endAngle - innerEnd / innerRadius + (startAngle + innerStart / innerRadius)) / 2;\n        ctx.arc(x, y, innerRadius, endAngle - innerEnd / innerRadius, innerMidAdjustedAngle, true);\n        ctx.arc(x, y, innerRadius, innerMidAdjustedAngle, startAngle + innerStart / innerRadius, true);\n        // The corner segment from point 6 to point 7\n        if (innerStart > 0) {\n            const pCenter = rThetaToXY(innerStartAdjustedRadius, innerStartAdjustedAngle, x, y);\n            ctx.arc(pCenter.x, pCenter.y, innerStart, innerStartAdjustedAngle + Math.PI, startAngle - HALF_PI);\n        }\n        // The line from point 7 to point 8\n        const p8 = rThetaToXY(outerStartAdjustedRadius, startAngle, x, y);\n        ctx.lineTo(p8.x, p8.y);\n        // The corner segment from point 8 to point 1\n        if (outerStart > 0) {\n            const pCenter = rThetaToXY(outerStartAdjustedRadius, outerStartAdjustedAngle, x, y);\n            ctx.arc(pCenter.x, pCenter.y, outerStart, startAngle - HALF_PI, outerStartAdjustedAngle);\n        }\n    } else {\n        ctx.moveTo(x, y);\n        const outerStartX = Math.cos(outerStartAdjustedAngle) * outerRadius + x;\n        const outerStartY = Math.sin(outerStartAdjustedAngle) * outerRadius + y;\n        ctx.lineTo(outerStartX, outerStartY);\n        const outerEndX = Math.cos(outerEndAdjustedAngle) * outerRadius + x;\n        const outerEndY = Math.sin(outerEndAdjustedAngle) * outerRadius + y;\n        ctx.lineTo(outerEndX, outerEndY);\n    }\n    ctx.closePath();\n}\nfunction drawArc(ctx, element, offset, spacing, circular) {\n    const { fullCircles , startAngle , circumference  } = element;\n    let endAngle = element.endAngle;\n    if (fullCircles) {\n        pathArc(ctx, element, offset, spacing, endAngle, circular);\n        for(let i = 0; i < fullCircles; ++i){\n            ctx.fill();\n        }\n        if (!isNaN(circumference)) {\n            endAngle = startAngle + (circumference % TAU || TAU);\n        }\n    }\n    pathArc(ctx, element, offset, spacing, endAngle, circular);\n    ctx.fill();\n    return endAngle;\n}\nfunction drawBorder(ctx, element, offset, spacing, circular) {\n    const { fullCircles , startAngle , circumference , options  } = element;\n    const { borderWidth , borderJoinStyle , borderDash , borderDashOffset  } = options;\n    const inner = options.borderAlign === 'inner';\n    if (!borderWidth) {\n        return;\n    }\n    ctx.setLineDash(borderDash || []);\n    ctx.lineDashOffset = borderDashOffset;\n    if (inner) {\n        ctx.lineWidth = borderWidth * 2;\n        ctx.lineJoin = borderJoinStyle || 'round';\n    } else {\n        ctx.lineWidth = borderWidth;\n        ctx.lineJoin = borderJoinStyle || 'bevel';\n    }\n    let endAngle = element.endAngle;\n    if (fullCircles) {\n        pathArc(ctx, element, offset, spacing, endAngle, circular);\n        for(let i = 0; i < fullCircles; ++i){\n            ctx.stroke();\n        }\n        if (!isNaN(circumference)) {\n            endAngle = startAngle + (circumference % TAU || TAU);\n        }\n    }\n    if (inner) {\n        clipArc(ctx, element, endAngle);\n    }\n    if (!fullCircles) {\n        pathArc(ctx, element, offset, spacing, endAngle, circular);\n        ctx.stroke();\n    }\n}\nclass ArcElement extends Element {\n    static id = 'arc';\n    static defaults = {\n        borderAlign: 'center',\n        borderColor: '#fff',\n        borderDash: [],\n        borderDashOffset: 0,\n        borderJoinStyle: undefined,\n        borderRadius: 0,\n        borderWidth: 2,\n        offset: 0,\n        spacing: 0,\n        angle: undefined,\n        circular: true\n    };\n    static defaultRoutes = {\n        backgroundColor: 'backgroundColor'\n    };\n    static descriptors = {\n        _scriptable: true,\n        _indexable: (name)=>name !== 'borderDash'\n    };\n    circumference;\n    endAngle;\n    fullCircles;\n    innerRadius;\n    outerRadius;\n    pixelMargin;\n    startAngle;\n    constructor(cfg){\n        super();\n        this.options = undefined;\n        this.circumference = undefined;\n        this.startAngle = undefined;\n        this.endAngle = undefined;\n        this.innerRadius = undefined;\n        this.outerRadius = undefined;\n        this.pixelMargin = 0;\n        this.fullCircles = 0;\n        if (cfg) {\n            Object.assign(this, cfg);\n        }\n    }\n    inRange(chartX, chartY, useFinalPosition) {\n        const point = this.getProps([\n            'x',\n            'y'\n        ], useFinalPosition);\n        const { angle , distance  } = getAngleFromPoint(point, {\n            x: chartX,\n            y: chartY\n        });\n        const { startAngle , endAngle , innerRadius , outerRadius , circumference  } = this.getProps([\n            'startAngle',\n            'endAngle',\n            'innerRadius',\n            'outerRadius',\n            'circumference'\n        ], useFinalPosition);\n        const rAdjust = (this.options.spacing + this.options.borderWidth) / 2;\n        const _circumference = valueOrDefault(circumference, endAngle - startAngle);\n        const betweenAngles = _circumference >= TAU || _angleBetween(angle, startAngle, endAngle);\n        const withinRadius = _isBetween(distance, innerRadius + rAdjust, outerRadius + rAdjust);\n        return betweenAngles && withinRadius;\n    }\n    getCenterPoint(useFinalPosition) {\n        const { x , y , startAngle , endAngle , innerRadius , outerRadius  } = this.getProps([\n            'x',\n            'y',\n            'startAngle',\n            'endAngle',\n            'innerRadius',\n            'outerRadius'\n        ], useFinalPosition);\n        const { offset , spacing  } = this.options;\n        const halfAngle = (startAngle + endAngle) / 2;\n        const halfRadius = (innerRadius + outerRadius + spacing + offset) / 2;\n        return {\n            x: x + Math.cos(halfAngle) * halfRadius,\n            y: y + Math.sin(halfAngle) * halfRadius\n        };\n    }\n    tooltipPosition(useFinalPosition) {\n        return this.getCenterPoint(useFinalPosition);\n    }\n    draw(ctx) {\n        const { options , circumference  } = this;\n        const offset = (options.offset || 0) / 4;\n        const spacing = (options.spacing || 0) / 2;\n        const circular = options.circular;\n        this.pixelMargin = options.borderAlign === 'inner' ? 0.33 : 0;\n        this.fullCircles = circumference > TAU ? Math.floor(circumference / TAU) : 0;\n        if (circumference === 0 || this.innerRadius < 0 || this.outerRadius < 0) {\n            return;\n        }\n        ctx.save();\n        const halfAngle = (this.startAngle + this.endAngle) / 2;\n        ctx.translate(Math.cos(halfAngle) * offset, Math.sin(halfAngle) * offset);\n        const fix = 1 - Math.sin(Math.min(PI, circumference || 0));\n        const radiusOffset = offset * fix;\n        ctx.fillStyle = options.backgroundColor;\n        ctx.strokeStyle = options.borderColor;\n        drawArc(ctx, this, radiusOffset, spacing, circular);\n        drawBorder(ctx, this, radiusOffset, spacing, circular);\n        ctx.restore();\n    }\n}\n\nfunction setStyle(ctx, options, style = options) {\n    ctx.lineCap = valueOrDefault(style.borderCapStyle, options.borderCapStyle);\n    ctx.setLineDash(valueOrDefault(style.borderDash, options.borderDash));\n    ctx.lineDashOffset = valueOrDefault(style.borderDashOffset, options.borderDashOffset);\n    ctx.lineJoin = valueOrDefault(style.borderJoinStyle, options.borderJoinStyle);\n    ctx.lineWidth = valueOrDefault(style.borderWidth, options.borderWidth);\n    ctx.strokeStyle = valueOrDefault(style.borderColor, options.borderColor);\n}\nfunction lineTo(ctx, previous, target) {\n    ctx.lineTo(target.x, target.y);\n}\n function getLineMethod(options) {\n    if (options.stepped) {\n        return _steppedLineTo;\n    }\n    if (options.tension || options.cubicInterpolationMode === 'monotone') {\n        return _bezierCurveTo;\n    }\n    return lineTo;\n}\nfunction pathVars(points, segment, params = {}) {\n    const count = points.length;\n    const { start: paramsStart = 0 , end: paramsEnd = count - 1  } = params;\n    const { start: segmentStart , end: segmentEnd  } = segment;\n    const start = Math.max(paramsStart, segmentStart);\n    const end = Math.min(paramsEnd, segmentEnd);\n    const outside = paramsStart < segmentStart && paramsEnd < segmentStart || paramsStart > segmentEnd && paramsEnd > segmentEnd;\n    return {\n        count,\n        start,\n        loop: segment.loop,\n        ilen: end < start && !outside ? count + end - start : end - start\n    };\n}\n function pathSegment(ctx, line, segment, params) {\n    const { points , options  } = line;\n    const { count , start , loop , ilen  } = pathVars(points, segment, params);\n    const lineMethod = getLineMethod(options);\n    let { move =true , reverse  } = params || {};\n    let i, point, prev;\n    for(i = 0; i <= ilen; ++i){\n        point = points[(start + (reverse ? ilen - i : i)) % count];\n        if (point.skip) {\n            continue;\n        } else if (move) {\n            ctx.moveTo(point.x, point.y);\n            move = false;\n        } else {\n            lineMethod(ctx, prev, point, reverse, options.stepped);\n        }\n        prev = point;\n    }\n    if (loop) {\n        point = points[(start + (reverse ? ilen : 0)) % count];\n        lineMethod(ctx, prev, point, reverse, options.stepped);\n    }\n    return !!loop;\n}\n function fastPathSegment(ctx, line, segment, params) {\n    const points = line.points;\n    const { count , start , ilen  } = pathVars(points, segment, params);\n    const { move =true , reverse  } = params || {};\n    let avgX = 0;\n    let countX = 0;\n    let i, point, prevX, minY, maxY, lastY;\n    const pointIndex = (index)=>(start + (reverse ? ilen - index : index)) % count;\n    const drawX = ()=>{\n        if (minY !== maxY) {\n            ctx.lineTo(avgX, maxY);\n            ctx.lineTo(avgX, minY);\n            ctx.lineTo(avgX, lastY);\n        }\n    };\n    if (move) {\n        point = points[pointIndex(0)];\n        ctx.moveTo(point.x, point.y);\n    }\n    for(i = 0; i <= ilen; ++i){\n        point = points[pointIndex(i)];\n        if (point.skip) {\n            continue;\n        }\n        const x = point.x;\n        const y = point.y;\n        const truncX = x | 0;\n        if (truncX === prevX) {\n            if (y < minY) {\n                minY = y;\n            } else if (y > maxY) {\n                maxY = y;\n            }\n            avgX = (countX * avgX + x) / ++countX;\n        } else {\n            drawX();\n            ctx.lineTo(x, y);\n            prevX = truncX;\n            countX = 0;\n            minY = maxY = y;\n        }\n        lastY = y;\n    }\n    drawX();\n}\n function _getSegmentMethod(line) {\n    const opts = line.options;\n    const borderDash = opts.borderDash && opts.borderDash.length;\n    const useFastPath = !line._decimated && !line._loop && !opts.tension && opts.cubicInterpolationMode !== 'monotone' && !opts.stepped && !borderDash;\n    return useFastPath ? fastPathSegment : pathSegment;\n}\n function _getInterpolationMethod(options) {\n    if (options.stepped) {\n        return _steppedInterpolation;\n    }\n    if (options.tension || options.cubicInterpolationMode === 'monotone') {\n        return _bezierInterpolation;\n    }\n    return _pointInLine;\n}\nfunction strokePathWithCache(ctx, line, start, count) {\n    let path = line._path;\n    if (!path) {\n        path = line._path = new Path2D();\n        if (line.path(path, start, count)) {\n            path.closePath();\n        }\n    }\n    setStyle(ctx, line.options);\n    ctx.stroke(path);\n}\nfunction strokePathDirect(ctx, line, start, count) {\n    const { segments , options  } = line;\n    const segmentMethod = _getSegmentMethod(line);\n    for (const segment of segments){\n        setStyle(ctx, options, segment.style);\n        ctx.beginPath();\n        if (segmentMethod(ctx, line, segment, {\n            start,\n            end: start + count - 1\n        })) {\n            ctx.closePath();\n        }\n        ctx.stroke();\n    }\n}\nconst usePath2D = typeof Path2D === 'function';\nfunction draw(ctx, line, start, count) {\n    if (usePath2D && !line.options.segment) {\n        strokePathWithCache(ctx, line, start, count);\n    } else {\n        strokePathDirect(ctx, line, start, count);\n    }\n}\nclass LineElement extends Element {\n    static id = 'line';\n static defaults = {\n        borderCapStyle: 'butt',\n        borderDash: [],\n        borderDashOffset: 0,\n        borderJoinStyle: 'miter',\n        borderWidth: 3,\n        capBezierPoints: true,\n        cubicInterpolationMode: 'default',\n        fill: false,\n        spanGaps: false,\n        stepped: false,\n        tension: 0\n    };\n static defaultRoutes = {\n        backgroundColor: 'backgroundColor',\n        borderColor: 'borderColor'\n    };\n    static descriptors = {\n        _scriptable: true,\n        _indexable: (name)=>name !== 'borderDash' && name !== 'fill'\n    };\n    constructor(cfg){\n        super();\n        this.animated = true;\n        this.options = undefined;\n        this._chart = undefined;\n        this._loop = undefined;\n        this._fullLoop = undefined;\n        this._path = undefined;\n        this._points = undefined;\n        this._segments = undefined;\n        this._decimated = false;\n        this._pointsUpdated = false;\n        this._datasetIndex = undefined;\n        if (cfg) {\n            Object.assign(this, cfg);\n        }\n    }\n    updateControlPoints(chartArea, indexAxis) {\n        const options = this.options;\n        if ((options.tension || options.cubicInterpolationMode === 'monotone') && !options.stepped && !this._pointsUpdated) {\n            const loop = options.spanGaps ? this._loop : this._fullLoop;\n            _updateBezierControlPoints(this._points, options, chartArea, loop, indexAxis);\n            this._pointsUpdated = true;\n        }\n    }\n    set points(points) {\n        this._points = points;\n        delete this._segments;\n        delete this._path;\n        this._pointsUpdated = false;\n    }\n    get points() {\n        return this._points;\n    }\n    get segments() {\n        return this._segments || (this._segments = _computeSegments(this, this.options.segment));\n    }\n first() {\n        const segments = this.segments;\n        const points = this.points;\n        return segments.length && points[segments[0].start];\n    }\n last() {\n        const segments = this.segments;\n        const points = this.points;\n        const count = segments.length;\n        return count && points[segments[count - 1].end];\n    }\n interpolate(point, property) {\n        const options = this.options;\n        const value = point[property];\n        const points = this.points;\n        const segments = _boundSegments(this, {\n            property,\n            start: value,\n            end: value\n        });\n        if (!segments.length) {\n            return;\n        }\n        const result = [];\n        const _interpolate = _getInterpolationMethod(options);\n        let i, ilen;\n        for(i = 0, ilen = segments.length; i < ilen; ++i){\n            const { start , end  } = segments[i];\n            const p1 = points[start];\n            const p2 = points[end];\n            if (p1 === p2) {\n                result.push(p1);\n                continue;\n            }\n            const t = Math.abs((value - p1[property]) / (p2[property] - p1[property]));\n            const interpolated = _interpolate(p1, p2, t, options.stepped);\n            interpolated[property] = point[property];\n            result.push(interpolated);\n        }\n        return result.length === 1 ? result[0] : result;\n    }\n pathSegment(ctx, segment, params) {\n        const segmentMethod = _getSegmentMethod(this);\n        return segmentMethod(ctx, this, segment, params);\n    }\n path(ctx, start, count) {\n        const segments = this.segments;\n        const segmentMethod = _getSegmentMethod(this);\n        let loop = this._loop;\n        start = start || 0;\n        count = count || this.points.length - start;\n        for (const segment of segments){\n            loop &= segmentMethod(ctx, this, segment, {\n                start,\n                end: start + count - 1\n            });\n        }\n        return !!loop;\n    }\n draw(ctx, chartArea, start, count) {\n        const options = this.options || {};\n        const points = this.points || [];\n        if (points.length && options.borderWidth) {\n            ctx.save();\n            draw(ctx, this, start, count);\n            ctx.restore();\n        }\n        if (this.animated) {\n            this._pointsUpdated = false;\n            this._path = undefined;\n        }\n    }\n}\n\nfunction inRange$1(el, pos, axis, useFinalPosition) {\n    const options = el.options;\n    const { [axis]: value  } = el.getProps([\n        axis\n    ], useFinalPosition);\n    return Math.abs(pos - value) < options.radius + options.hitRadius;\n}\nclass PointElement extends Element {\n    static id = 'point';\n    parsed;\n    skip;\n    stop;\n    /**\n   * @type {any}\n   */ static defaults = {\n        borderWidth: 1,\n        hitRadius: 1,\n        hoverBorderWidth: 1,\n        hoverRadius: 4,\n        pointStyle: 'circle',\n        radius: 3,\n        rotation: 0\n    };\n    /**\n   * @type {any}\n   */ static defaultRoutes = {\n        backgroundColor: 'backgroundColor',\n        borderColor: 'borderColor'\n    };\n    constructor(cfg){\n        super();\n        this.options = undefined;\n        this.parsed = undefined;\n        this.skip = undefined;\n        this.stop = undefined;\n        if (cfg) {\n            Object.assign(this, cfg);\n        }\n    }\n    inRange(mouseX, mouseY, useFinalPosition) {\n        const options = this.options;\n        const { x , y  } = this.getProps([\n            'x',\n            'y'\n        ], useFinalPosition);\n        return Math.pow(mouseX - x, 2) + Math.pow(mouseY - y, 2) < Math.pow(options.hitRadius + options.radius, 2);\n    }\n    inXRange(mouseX, useFinalPosition) {\n        return inRange$1(this, mouseX, 'x', useFinalPosition);\n    }\n    inYRange(mouseY, useFinalPosition) {\n        return inRange$1(this, mouseY, 'y', useFinalPosition);\n    }\n    getCenterPoint(useFinalPosition) {\n        const { x , y  } = this.getProps([\n            'x',\n            'y'\n        ], useFinalPosition);\n        return {\n            x,\n            y\n        };\n    }\n    size(options) {\n        options = options || this.options || {};\n        let radius = options.radius || 0;\n        radius = Math.max(radius, radius && options.hoverRadius || 0);\n        const borderWidth = radius && options.borderWidth || 0;\n        return (radius + borderWidth) * 2;\n    }\n    draw(ctx, area) {\n        const options = this.options;\n        if (this.skip || options.radius < 0.1 || !_isPointInArea(this, area, this.size(options) / 2)) {\n            return;\n        }\n        ctx.strokeStyle = options.borderColor;\n        ctx.lineWidth = options.borderWidth;\n        ctx.fillStyle = options.backgroundColor;\n        drawPoint(ctx, options, this.x, this.y);\n    }\n    getRange() {\n        const options = this.options || {};\n        // @ts-expect-error Fallbacks should never be hit in practice\n        return options.radius + options.hitRadius;\n    }\n}\n\nfunction getBarBounds(bar, useFinalPosition) {\n    const { x , y , base , width , height  } =  bar.getProps([\n        'x',\n        'y',\n        'base',\n        'width',\n        'height'\n    ], useFinalPosition);\n    let left, right, top, bottom, half;\n    if (bar.horizontal) {\n        half = height / 2;\n        left = Math.min(x, base);\n        right = Math.max(x, base);\n        top = y - half;\n        bottom = y + half;\n    } else {\n        half = width / 2;\n        left = x - half;\n        right = x + half;\n        top = Math.min(y, base);\n        bottom = Math.max(y, base);\n    }\n    return {\n        left,\n        top,\n        right,\n        bottom\n    };\n}\nfunction skipOrLimit(skip, value, min, max) {\n    return skip ? 0 : _limitValue(value, min, max);\n}\nfunction parseBorderWidth(bar, maxW, maxH) {\n    const value = bar.options.borderWidth;\n    const skip = bar.borderSkipped;\n    const o = toTRBL(value);\n    return {\n        t: skipOrLimit(skip.top, o.top, 0, maxH),\n        r: skipOrLimit(skip.right, o.right, 0, maxW),\n        b: skipOrLimit(skip.bottom, o.bottom, 0, maxH),\n        l: skipOrLimit(skip.left, o.left, 0, maxW)\n    };\n}\nfunction parseBorderRadius(bar, maxW, maxH) {\n    const { enableBorderRadius  } = bar.getProps([\n        'enableBorderRadius'\n    ]);\n    const value = bar.options.borderRadius;\n    const o = toTRBLCorners(value);\n    const maxR = Math.min(maxW, maxH);\n    const skip = bar.borderSkipped;\n    const enableBorder = enableBorderRadius || isObject(value);\n    return {\n        topLeft: skipOrLimit(!enableBorder || skip.top || skip.left, o.topLeft, 0, maxR),\n        topRight: skipOrLimit(!enableBorder || skip.top || skip.right, o.topRight, 0, maxR),\n        bottomLeft: skipOrLimit(!enableBorder || skip.bottom || skip.left, o.bottomLeft, 0, maxR),\n        bottomRight: skipOrLimit(!enableBorder || skip.bottom || skip.right, o.bottomRight, 0, maxR)\n    };\n}\nfunction boundingRects(bar) {\n    const bounds = getBarBounds(bar);\n    const width = bounds.right - bounds.left;\n    const height = bounds.bottom - bounds.top;\n    const border = parseBorderWidth(bar, width / 2, height / 2);\n    const radius = parseBorderRadius(bar, width / 2, height / 2);\n    return {\n        outer: {\n            x: bounds.left,\n            y: bounds.top,\n            w: width,\n            h: height,\n            radius\n        },\n        inner: {\n            x: bounds.left + border.l,\n            y: bounds.top + border.t,\n            w: width - border.l - border.r,\n            h: height - border.t - border.b,\n            radius: {\n                topLeft: Math.max(0, radius.topLeft - Math.max(border.t, border.l)),\n                topRight: Math.max(0, radius.topRight - Math.max(border.t, border.r)),\n                bottomLeft: Math.max(0, radius.bottomLeft - Math.max(border.b, border.l)),\n                bottomRight: Math.max(0, radius.bottomRight - Math.max(border.b, border.r))\n            }\n        }\n    };\n}\nfunction inRange(bar, x, y, useFinalPosition) {\n    const skipX = x === null;\n    const skipY = y === null;\n    const skipBoth = skipX && skipY;\n    const bounds = bar && !skipBoth && getBarBounds(bar, useFinalPosition);\n    return bounds && (skipX || _isBetween(x, bounds.left, bounds.right)) && (skipY || _isBetween(y, bounds.top, bounds.bottom));\n}\nfunction hasRadius(radius) {\n    return radius.topLeft || radius.topRight || radius.bottomLeft || radius.bottomRight;\n}\n function addNormalRectPath(ctx, rect) {\n    ctx.rect(rect.x, rect.y, rect.w, rect.h);\n}\nfunction inflateRect(rect, amount, refRect = {}) {\n    const x = rect.x !== refRect.x ? -amount : 0;\n    const y = rect.y !== refRect.y ? -amount : 0;\n    const w = (rect.x + rect.w !== refRect.x + refRect.w ? amount : 0) - x;\n    const h = (rect.y + rect.h !== refRect.y + refRect.h ? amount : 0) - y;\n    return {\n        x: rect.x + x,\n        y: rect.y + y,\n        w: rect.w + w,\n        h: rect.h + h,\n        radius: rect.radius\n    };\n}\nclass BarElement extends Element {\n    static id = 'bar';\n static defaults = {\n        borderSkipped: 'start',\n        borderWidth: 0,\n        borderRadius: 0,\n        inflateAmount: 'auto',\n        pointStyle: undefined\n    };\n static defaultRoutes = {\n        backgroundColor: 'backgroundColor',\n        borderColor: 'borderColor'\n    };\n    constructor(cfg){\n        super();\n        this.options = undefined;\n        this.horizontal = undefined;\n        this.base = undefined;\n        this.width = undefined;\n        this.height = undefined;\n        this.inflateAmount = undefined;\n        if (cfg) {\n            Object.assign(this, cfg);\n        }\n    }\n    draw(ctx) {\n        const { inflateAmount , options: { borderColor , backgroundColor  }  } = this;\n        const { inner , outer  } = boundingRects(this);\n        const addRectPath = hasRadius(outer.radius) ? addRoundedRectPath : addNormalRectPath;\n        ctx.save();\n        if (outer.w !== inner.w || outer.h !== inner.h) {\n            ctx.beginPath();\n            addRectPath(ctx, inflateRect(outer, inflateAmount, inner));\n            ctx.clip();\n            addRectPath(ctx, inflateRect(inner, -inflateAmount, outer));\n            ctx.fillStyle = borderColor;\n            ctx.fill('evenodd');\n        }\n        ctx.beginPath();\n        addRectPath(ctx, inflateRect(inner, inflateAmount));\n        ctx.fillStyle = backgroundColor;\n        ctx.fill();\n        ctx.restore();\n    }\n    inRange(mouseX, mouseY, useFinalPosition) {\n        return inRange(this, mouseX, mouseY, useFinalPosition);\n    }\n    inXRange(mouseX, useFinalPosition) {\n        return inRange(this, mouseX, null, useFinalPosition);\n    }\n    inYRange(mouseY, useFinalPosition) {\n        return inRange(this, null, mouseY, useFinalPosition);\n    }\n    getCenterPoint(useFinalPosition) {\n        const { x , y , base , horizontal  } =  this.getProps([\n            'x',\n            'y',\n            'base',\n            'horizontal'\n        ], useFinalPosition);\n        return {\n            x: horizontal ? (x + base) / 2 : x,\n            y: horizontal ? y : (y + base) / 2\n        };\n    }\n    getRange(axis) {\n        return axis === 'x' ? this.width / 2 : this.height / 2;\n    }\n}\n\nvar elements = /*#__PURE__*/Object.freeze({\n__proto__: null,\nArcElement: ArcElement,\nBarElement: BarElement,\nLineElement: LineElement,\nPointElement: PointElement\n});\n\nconst BORDER_COLORS = [\n    'rgb(54, 162, 235)',\n    'rgb(255, 99, 132)',\n    'rgb(255, 159, 64)',\n    'rgb(255, 205, 86)',\n    'rgb(75, 192, 192)',\n    'rgb(153, 102, 255)',\n    'rgb(201, 203, 207)' // grey\n];\n// Border colors with 50% transparency\nconst BACKGROUND_COLORS = /* #__PURE__ */ BORDER_COLORS.map((color)=>color.replace('rgb(', 'rgba(').replace(')', ', 0.5)'));\nfunction getBorderColor(i) {\n    return BORDER_COLORS[i % BORDER_COLORS.length];\n}\nfunction getBackgroundColor(i) {\n    return BACKGROUND_COLORS[i % BACKGROUND_COLORS.length];\n}\nfunction colorizeDefaultDataset(dataset, i) {\n    dataset.borderColor = getBorderColor(i);\n    dataset.backgroundColor = getBackgroundColor(i);\n    return ++i;\n}\nfunction colorizeDoughnutDataset(dataset, i) {\n    dataset.backgroundColor = dataset.data.map(()=>getBorderColor(i++));\n    return i;\n}\nfunction colorizePolarAreaDataset(dataset, i) {\n    dataset.backgroundColor = dataset.data.map(()=>getBackgroundColor(i++));\n    return i;\n}\nfunction getColorizer(chart) {\n    let i = 0;\n    return (dataset, datasetIndex)=>{\n        const controller = chart.getDatasetMeta(datasetIndex).controller;\n        if (controller instanceof DoughnutController) {\n            i = colorizeDoughnutDataset(dataset, i);\n        } else if (controller instanceof PolarAreaController) {\n            i = colorizePolarAreaDataset(dataset, i);\n        } else if (controller) {\n            i = colorizeDefaultDataset(dataset, i);\n        }\n    };\n}\nfunction containsColorsDefinitions(descriptors) {\n    let k;\n    for(k in descriptors){\n        if (descriptors[k].borderColor || descriptors[k].backgroundColor) {\n            return true;\n        }\n    }\n    return false;\n}\nfunction containsColorsDefinition(descriptor) {\n    return descriptor && (descriptor.borderColor || descriptor.backgroundColor);\n}\nvar plugin_colors = {\n    id: 'colors',\n    defaults: {\n        enabled: true,\n        forceOverride: false\n    },\n    beforeLayout (chart, _args, options) {\n        if (!options.enabled) {\n            return;\n        }\n        const { data: { datasets  } , options: chartOptions  } = chart.config;\n        const { elements  } = chartOptions;\n        if (!options.forceOverride && (containsColorsDefinitions(datasets) || containsColorsDefinition(chartOptions) || elements && containsColorsDefinitions(elements))) {\n            return;\n        }\n        const colorizer = getColorizer(chart);\n        datasets.forEach(colorizer);\n    }\n};\n\nfunction lttbDecimation(data, start, count, availableWidth, options) {\n const samples = options.samples || availableWidth;\n    if (samples >= count) {\n        return data.slice(start, start + count);\n    }\n    const decimated = [];\n    const bucketWidth = (count - 2) / (samples - 2);\n    let sampledIndex = 0;\n    const endIndex = start + count - 1;\n    let a = start;\n    let i, maxAreaPoint, maxArea, area, nextA;\n    decimated[sampledIndex++] = data[a];\n    for(i = 0; i < samples - 2; i++){\n        let avgX = 0;\n        let avgY = 0;\n        let j;\n        const avgRangeStart = Math.floor((i + 1) * bucketWidth) + 1 + start;\n        const avgRangeEnd = Math.min(Math.floor((i + 2) * bucketWidth) + 1, count) + start;\n        const avgRangeLength = avgRangeEnd - avgRangeStart;\n        for(j = avgRangeStart; j < avgRangeEnd; j++){\n            avgX += data[j].x;\n            avgY += data[j].y;\n        }\n        avgX /= avgRangeLength;\n        avgY /= avgRangeLength;\n        const rangeOffs = Math.floor(i * bucketWidth) + 1 + start;\n        const rangeTo = Math.min(Math.floor((i + 1) * bucketWidth) + 1, count) + start;\n        const { x: pointAx , y: pointAy  } = data[a];\n        maxArea = area = -1;\n        for(j = rangeOffs; j < rangeTo; j++){\n            area = 0.5 * Math.abs((pointAx - avgX) * (data[j].y - pointAy) - (pointAx - data[j].x) * (avgY - pointAy));\n            if (area > maxArea) {\n                maxArea = area;\n                maxAreaPoint = data[j];\n                nextA = j;\n            }\n        }\n        decimated[sampledIndex++] = maxAreaPoint;\n        a = nextA;\n    }\n    decimated[sampledIndex++] = data[endIndex];\n    return decimated;\n}\nfunction minMaxDecimation(data, start, count, availableWidth) {\n    let avgX = 0;\n    let countX = 0;\n    let i, point, x, y, prevX, minIndex, maxIndex, startIndex, minY, maxY;\n    const decimated = [];\n    const endIndex = start + count - 1;\n    const xMin = data[start].x;\n    const xMax = data[endIndex].x;\n    const dx = xMax - xMin;\n    for(i = start; i < start + count; ++i){\n        point = data[i];\n        x = (point.x - xMin) / dx * availableWidth;\n        y = point.y;\n        const truncX = x | 0;\n        if (truncX === prevX) {\n            if (y < minY) {\n                minY = y;\n                minIndex = i;\n            } else if (y > maxY) {\n                maxY = y;\n                maxIndex = i;\n            }\n            avgX = (countX * avgX + point.x) / ++countX;\n        } else {\n            const lastIndex = i - 1;\n            if (!isNullOrUndef(minIndex) && !isNullOrUndef(maxIndex)) {\n                const intermediateIndex1 = Math.min(minIndex, maxIndex);\n                const intermediateIndex2 = Math.max(minIndex, maxIndex);\n                if (intermediateIndex1 !== startIndex && intermediateIndex1 !== lastIndex) {\n                    decimated.push({\n                        ...data[intermediateIndex1],\n                        x: avgX\n                    });\n                }\n                if (intermediateIndex2 !== startIndex && intermediateIndex2 !== lastIndex) {\n                    decimated.push({\n                        ...data[intermediateIndex2],\n                        x: avgX\n                    });\n                }\n            }\n            if (i > 0 && lastIndex !== startIndex) {\n                decimated.push(data[lastIndex]);\n            }\n            decimated.push(point);\n            prevX = truncX;\n            countX = 0;\n            minY = maxY = y;\n            minIndex = maxIndex = startIndex = i;\n        }\n    }\n    return decimated;\n}\nfunction cleanDecimatedDataset(dataset) {\n    if (dataset._decimated) {\n        const data = dataset._data;\n        delete dataset._decimated;\n        delete dataset._data;\n        Object.defineProperty(dataset, 'data', {\n            configurable: true,\n            enumerable: true,\n            writable: true,\n            value: data\n        });\n    }\n}\nfunction cleanDecimatedData(chart) {\n    chart.data.datasets.forEach((dataset)=>{\n        cleanDecimatedDataset(dataset);\n    });\n}\nfunction getStartAndCountOfVisiblePointsSimplified(meta, points) {\n    const pointCount = points.length;\n    let start = 0;\n    let count;\n    const { iScale  } = meta;\n    const { min , max , minDefined , maxDefined  } = iScale.getUserBounds();\n    if (minDefined) {\n        start = _limitValue(_lookupByKey(points, iScale.axis, min).lo, 0, pointCount - 1);\n    }\n    if (maxDefined) {\n        count = _limitValue(_lookupByKey(points, iScale.axis, max).hi + 1, start, pointCount) - start;\n    } else {\n        count = pointCount - start;\n    }\n    return {\n        start,\n        count\n    };\n}\nvar plugin_decimation = {\n    id: 'decimation',\n    defaults: {\n        algorithm: 'min-max',\n        enabled: false\n    },\n    beforeElementsUpdate: (chart, args, options)=>{\n        if (!options.enabled) {\n            cleanDecimatedData(chart);\n            return;\n        }\n        const availableWidth = chart.width;\n        chart.data.datasets.forEach((dataset, datasetIndex)=>{\n            const { _data , indexAxis  } = dataset;\n            const meta = chart.getDatasetMeta(datasetIndex);\n            const data = _data || dataset.data;\n            if (resolve([\n                indexAxis,\n                chart.options.indexAxis\n            ]) === 'y') {\n                return;\n            }\n            if (!meta.controller.supportsDecimation) {\n                return;\n            }\n            const xAxis = chart.scales[meta.xAxisID];\n            if (xAxis.type !== 'linear' && xAxis.type !== 'time') {\n                return;\n            }\n            if (chart.options.parsing) {\n                return;\n            }\n            let { start , count  } = getStartAndCountOfVisiblePointsSimplified(meta, data);\n            const threshold = options.threshold || 4 * availableWidth;\n            if (count <= threshold) {\n                cleanDecimatedDataset(dataset);\n                return;\n            }\n            if (isNullOrUndef(_data)) {\n                dataset._data = data;\n                delete dataset.data;\n                Object.defineProperty(dataset, 'data', {\n                    configurable: true,\n                    enumerable: true,\n                    get: function() {\n                        return this._decimated;\n                    },\n                    set: function(d) {\n                        this._data = d;\n                    }\n                });\n            }\n            let decimated;\n            switch(options.algorithm){\n                case 'lttb':\n                    decimated = lttbDecimation(data, start, count, availableWidth, options);\n                    break;\n                case 'min-max':\n                    decimated = minMaxDecimation(data, start, count, availableWidth);\n                    break;\n                default:\n                    throw new Error(`Unsupported decimation algorithm '${options.algorithm}'`);\n            }\n            dataset._decimated = decimated;\n        });\n    },\n    destroy (chart) {\n        cleanDecimatedData(chart);\n    }\n};\n\nfunction _segments(line, target, property) {\n    const segments = line.segments;\n    const points = line.points;\n    const tpoints = target.points;\n    const parts = [];\n    for (const segment of segments){\n        let { start , end  } = segment;\n        end = _findSegmentEnd(start, end, points);\n        const bounds = _getBounds(property, points[start], points[end], segment.loop);\n        if (!target.segments) {\n            parts.push({\n                source: segment,\n                target: bounds,\n                start: points[start],\n                end: points[end]\n            });\n            continue;\n        }\n        const targetSegments = _boundSegments(target, bounds);\n        for (const tgt of targetSegments){\n            const subBounds = _getBounds(property, tpoints[tgt.start], tpoints[tgt.end], tgt.loop);\n            const fillSources = _boundSegment(segment, points, subBounds);\n            for (const fillSource of fillSources){\n                parts.push({\n                    source: fillSource,\n                    target: tgt,\n                    start: {\n                        [property]: _getEdge(bounds, subBounds, 'start', Math.max)\n                    },\n                    end: {\n                        [property]: _getEdge(bounds, subBounds, 'end', Math.min)\n                    }\n                });\n            }\n        }\n    }\n    return parts;\n}\nfunction _getBounds(property, first, last, loop) {\n    if (loop) {\n        return;\n    }\n    let start = first[property];\n    let end = last[property];\n    if (property === 'angle') {\n        start = _normalizeAngle(start);\n        end = _normalizeAngle(end);\n    }\n    return {\n        property,\n        start,\n        end\n    };\n}\nfunction _pointsFromSegments(boundary, line) {\n    const { x =null , y =null  } = boundary || {};\n    const linePoints = line.points;\n    const points = [];\n    line.segments.forEach(({ start , end  })=>{\n        end = _findSegmentEnd(start, end, linePoints);\n        const first = linePoints[start];\n        const last = linePoints[end];\n        if (y !== null) {\n            points.push({\n                x: first.x,\n                y\n            });\n            points.push({\n                x: last.x,\n                y\n            });\n        } else if (x !== null) {\n            points.push({\n                x,\n                y: first.y\n            });\n            points.push({\n                x,\n                y: last.y\n            });\n        }\n    });\n    return points;\n}\nfunction _findSegmentEnd(start, end, points) {\n    for(; end > start; end--){\n        const point = points[end];\n        if (!isNaN(point.x) && !isNaN(point.y)) {\n            break;\n        }\n    }\n    return end;\n}\nfunction _getEdge(a, b, prop, fn) {\n    if (a && b) {\n        return fn(a[prop], b[prop]);\n    }\n    return a ? a[prop] : b ? b[prop] : 0;\n}\n\nfunction _createBoundaryLine(boundary, line) {\n    let points = [];\n    let _loop = false;\n    if (isArray(boundary)) {\n        _loop = true;\n        points = boundary;\n    } else {\n        points = _pointsFromSegments(boundary, line);\n    }\n    return points.length ? new LineElement({\n        points,\n        options: {\n            tension: 0\n        },\n        _loop,\n        _fullLoop: _loop\n    }) : null;\n}\nfunction _shouldApplyFill(source) {\n    return source && source.fill !== false;\n}\n\nfunction _resolveTarget(sources, index, propagate) {\n    const source = sources[index];\n    let fill = source.fill;\n    const visited = [\n        index\n    ];\n    let target;\n    if (!propagate) {\n        return fill;\n    }\n    while(fill !== false && visited.indexOf(fill) === -1){\n        if (!isNumberFinite(fill)) {\n            return fill;\n        }\n        target = sources[fill];\n        if (!target) {\n            return false;\n        }\n        if (target.visible) {\n            return fill;\n        }\n        visited.push(fill);\n        fill = target.fill;\n    }\n    return false;\n}\n function _decodeFill(line, index, count) {\n     const fill = parseFillOption(line);\n    if (isObject(fill)) {\n        return isNaN(fill.value) ? false : fill;\n    }\n    let target = parseFloat(fill);\n    if (isNumberFinite(target) && Math.floor(target) === target) {\n        return decodeTargetIndex(fill[0], index, target, count);\n    }\n    return [\n        'origin',\n        'start',\n        'end',\n        'stack',\n        'shape'\n    ].indexOf(fill) >= 0 && fill;\n}\nfunction decodeTargetIndex(firstCh, index, target, count) {\n    if (firstCh === '-' || firstCh === '+') {\n        target = index + target;\n    }\n    if (target === index || target < 0 || target >= count) {\n        return false;\n    }\n    return target;\n}\n function _getTargetPixel(fill, scale) {\n    let pixel = null;\n    if (fill === 'start') {\n        pixel = scale.bottom;\n    } else if (fill === 'end') {\n        pixel = scale.top;\n    } else if (isObject(fill)) {\n        pixel = scale.getPixelForValue(fill.value);\n    } else if (scale.getBasePixel) {\n        pixel = scale.getBasePixel();\n    }\n    return pixel;\n}\n function _getTargetValue(fill, scale, startValue) {\n    let value;\n    if (fill === 'start') {\n        value = startValue;\n    } else if (fill === 'end') {\n        value = scale.options.reverse ? scale.min : scale.max;\n    } else if (isObject(fill)) {\n        value = fill.value;\n    } else {\n        value = scale.getBaseValue();\n    }\n    return value;\n}\n function parseFillOption(line) {\n    const options = line.options;\n    const fillOption = options.fill;\n    let fill = valueOrDefault(fillOption && fillOption.target, fillOption);\n    if (fill === undefined) {\n        fill = !!options.backgroundColor;\n    }\n    if (fill === false || fill === null) {\n        return false;\n    }\n    if (fill === true) {\n        return 'origin';\n    }\n    return fill;\n}\n\nfunction _buildStackLine(source) {\n    const { scale , index , line  } = source;\n    const points = [];\n    const segments = line.segments;\n    const sourcePoints = line.points;\n    const linesBelow = getLinesBelow(scale, index);\n    linesBelow.push(_createBoundaryLine({\n        x: null,\n        y: scale.bottom\n    }, line));\n    for(let i = 0; i < segments.length; i++){\n        const segment = segments[i];\n        for(let j = segment.start; j <= segment.end; j++){\n            addPointsBelow(points, sourcePoints[j], linesBelow);\n        }\n    }\n    return new LineElement({\n        points,\n        options: {}\n    });\n}\n function getLinesBelow(scale, index) {\n    const below = [];\n    const metas = scale.getMatchingVisibleMetas('line');\n    for(let i = 0; i < metas.length; i++){\n        const meta = metas[i];\n        if (meta.index === index) {\n            break;\n        }\n        if (!meta.hidden) {\n            below.unshift(meta.dataset);\n        }\n    }\n    return below;\n}\n function addPointsBelow(points, sourcePoint, linesBelow) {\n    const postponed = [];\n    for(let j = 0; j < linesBelow.length; j++){\n        const line = linesBelow[j];\n        const { first , last , point  } = findPoint(line, sourcePoint, 'x');\n        if (!point || first && last) {\n            continue;\n        }\n        if (first) {\n            postponed.unshift(point);\n        } else {\n            points.push(point);\n            if (!last) {\n                break;\n            }\n        }\n    }\n    points.push(...postponed);\n}\n function findPoint(line, sourcePoint, property) {\n    const point = line.interpolate(sourcePoint, property);\n    if (!point) {\n        return {};\n    }\n    const pointValue = point[property];\n    const segments = line.segments;\n    const linePoints = line.points;\n    let first = false;\n    let last = false;\n    for(let i = 0; i < segments.length; i++){\n        const segment = segments[i];\n        const firstValue = linePoints[segment.start][property];\n        const lastValue = linePoints[segment.end][property];\n        if (_isBetween(pointValue, firstValue, lastValue)) {\n            first = pointValue === firstValue;\n            last = pointValue === lastValue;\n            break;\n        }\n    }\n    return {\n        first,\n        last,\n        point\n    };\n}\n\nclass simpleArc {\n    constructor(opts){\n        this.x = opts.x;\n        this.y = opts.y;\n        this.radius = opts.radius;\n    }\n    pathSegment(ctx, bounds, opts) {\n        const { x , y , radius  } = this;\n        bounds = bounds || {\n            start: 0,\n            end: TAU\n        };\n        ctx.arc(x, y, radius, bounds.end, bounds.start, true);\n        return !opts.bounds;\n    }\n    interpolate(point) {\n        const { x , y , radius  } = this;\n        const angle = point.angle;\n        return {\n            x: x + Math.cos(angle) * radius,\n            y: y + Math.sin(angle) * radius,\n            angle\n        };\n    }\n}\n\nfunction _getTarget(source) {\n    const { chart , fill , line  } = source;\n    if (isNumberFinite(fill)) {\n        return getLineByIndex(chart, fill);\n    }\n    if (fill === 'stack') {\n        return _buildStackLine(source);\n    }\n    if (fill === 'shape') {\n        return true;\n    }\n    const boundary = computeBoundary(source);\n    if (boundary instanceof simpleArc) {\n        return boundary;\n    }\n    return _createBoundaryLine(boundary, line);\n}\n function getLineByIndex(chart, index) {\n    const meta = chart.getDatasetMeta(index);\n    const visible = meta && chart.isDatasetVisible(index);\n    return visible ? meta.dataset : null;\n}\nfunction computeBoundary(source) {\n    const scale = source.scale || {};\n    if (scale.getPointPositionForValue) {\n        return computeCircularBoundary(source);\n    }\n    return computeLinearBoundary(source);\n}\nfunction computeLinearBoundary(source) {\n    const { scale ={} , fill  } = source;\n    const pixel = _getTargetPixel(fill, scale);\n    if (isNumberFinite(pixel)) {\n        const horizontal = scale.isHorizontal();\n        return {\n            x: horizontal ? pixel : null,\n            y: horizontal ? null : pixel\n        };\n    }\n    return null;\n}\nfunction computeCircularBoundary(source) {\n    const { scale , fill  } = source;\n    const options = scale.options;\n    const length = scale.getLabels().length;\n    const start = options.reverse ? scale.max : scale.min;\n    const value = _getTargetValue(fill, scale, start);\n    const target = [];\n    if (options.grid.circular) {\n        const center = scale.getPointPositionForValue(0, start);\n        return new simpleArc({\n            x: center.x,\n            y: center.y,\n            radius: scale.getDistanceFromCenterForValue(value)\n        });\n    }\n    for(let i = 0; i < length; ++i){\n        target.push(scale.getPointPositionForValue(i, value));\n    }\n    return target;\n}\n\nfunction _drawfill(ctx, source, area) {\n    const target = _getTarget(source);\n    const { line , scale , axis  } = source;\n    const lineOpts = line.options;\n    const fillOption = lineOpts.fill;\n    const color = lineOpts.backgroundColor;\n    const { above =color , below =color  } = fillOption || {};\n    if (target && line.points.length) {\n        clipArea(ctx, area);\n        doFill(ctx, {\n            line,\n            target,\n            above,\n            below,\n            area,\n            scale,\n            axis\n        });\n        unclipArea(ctx);\n    }\n}\nfunction doFill(ctx, cfg) {\n    const { line , target , above , below , area , scale  } = cfg;\n    const property = line._loop ? 'angle' : cfg.axis;\n    ctx.save();\n    if (property === 'x' && below !== above) {\n        clipVertical(ctx, target, area.top);\n        fill(ctx, {\n            line,\n            target,\n            color: above,\n            scale,\n            property\n        });\n        ctx.restore();\n        ctx.save();\n        clipVertical(ctx, target, area.bottom);\n    }\n    fill(ctx, {\n        line,\n        target,\n        color: below,\n        scale,\n        property\n    });\n    ctx.restore();\n}\nfunction clipVertical(ctx, target, clipY) {\n    const { segments , points  } = target;\n    let first = true;\n    let lineLoop = false;\n    ctx.beginPath();\n    for (const segment of segments){\n        const { start , end  } = segment;\n        const firstPoint = points[start];\n        const lastPoint = points[_findSegmentEnd(start, end, points)];\n        if (first) {\n            ctx.moveTo(firstPoint.x, firstPoint.y);\n            first = false;\n        } else {\n            ctx.lineTo(firstPoint.x, clipY);\n            ctx.lineTo(firstPoint.x, firstPoint.y);\n        }\n        lineLoop = !!target.pathSegment(ctx, segment, {\n            move: lineLoop\n        });\n        if (lineLoop) {\n            ctx.closePath();\n        } else {\n            ctx.lineTo(lastPoint.x, clipY);\n        }\n    }\n    ctx.lineTo(target.first().x, clipY);\n    ctx.closePath();\n    ctx.clip();\n}\nfunction fill(ctx, cfg) {\n    const { line , target , property , color , scale  } = cfg;\n    const segments = _segments(line, target, property);\n    for (const { source: src , target: tgt , start , end  } of segments){\n        const { style: { backgroundColor =color  } = {}  } = src;\n        const notShape = target !== true;\n        ctx.save();\n        ctx.fillStyle = backgroundColor;\n        clipBounds(ctx, scale, notShape && _getBounds(property, start, end));\n        ctx.beginPath();\n        const lineLoop = !!line.pathSegment(ctx, src);\n        let loop;\n        if (notShape) {\n            if (lineLoop) {\n                ctx.closePath();\n            } else {\n                interpolatedLineTo(ctx, target, end, property);\n            }\n            const targetLoop = !!target.pathSegment(ctx, tgt, {\n                move: lineLoop,\n                reverse: true\n            });\n            loop = lineLoop && targetLoop;\n            if (!loop) {\n                interpolatedLineTo(ctx, target, start, property);\n            }\n        }\n        ctx.closePath();\n        ctx.fill(loop ? 'evenodd' : 'nonzero');\n        ctx.restore();\n    }\n}\nfunction clipBounds(ctx, scale, bounds) {\n    const { top , bottom  } = scale.chart.chartArea;\n    const { property , start , end  } = bounds || {};\n    if (property === 'x') {\n        ctx.beginPath();\n        ctx.rect(start, top, end - start, bottom - top);\n        ctx.clip();\n    }\n}\nfunction interpolatedLineTo(ctx, target, point, property) {\n    const interpolatedPoint = target.interpolate(point, property);\n    if (interpolatedPoint) {\n        ctx.lineTo(interpolatedPoint.x, interpolatedPoint.y);\n    }\n}\n\nvar index = {\n    id: 'filler',\n    afterDatasetsUpdate (chart, _args, options) {\n        const count = (chart.data.datasets || []).length;\n        const sources = [];\n        let meta, i, line, source;\n        for(i = 0; i < count; ++i){\n            meta = chart.getDatasetMeta(i);\n            line = meta.dataset;\n            source = null;\n            if (line && line.options && line instanceof LineElement) {\n                source = {\n                    visible: chart.isDatasetVisible(i),\n                    index: i,\n                    fill: _decodeFill(line, i, count),\n                    chart,\n                    axis: meta.controller.options.indexAxis,\n                    scale: meta.vScale,\n                    line\n                };\n            }\n            meta.$filler = source;\n            sources.push(source);\n        }\n        for(i = 0; i < count; ++i){\n            source = sources[i];\n            if (!source || source.fill === false) {\n                continue;\n            }\n            source.fill = _resolveTarget(sources, i, options.propagate);\n        }\n    },\n    beforeDraw (chart, _args, options) {\n        const draw = options.drawTime === 'beforeDraw';\n        const metasets = chart.getSortedVisibleDatasetMetas();\n        const area = chart.chartArea;\n        for(let i = metasets.length - 1; i >= 0; --i){\n            const source = metasets[i].$filler;\n            if (!source) {\n                continue;\n            }\n            source.line.updateControlPoints(area, source.axis);\n            if (draw && source.fill) {\n                _drawfill(chart.ctx, source, area);\n            }\n        }\n    },\n    beforeDatasetsDraw (chart, _args, options) {\n        if (options.drawTime !== 'beforeDatasetsDraw') {\n            return;\n        }\n        const metasets = chart.getSortedVisibleDatasetMetas();\n        for(let i = metasets.length - 1; i >= 0; --i){\n            const source = metasets[i].$filler;\n            if (_shouldApplyFill(source)) {\n                _drawfill(chart.ctx, source, chart.chartArea);\n            }\n        }\n    },\n    beforeDatasetDraw (chart, args, options) {\n        const source = args.meta.$filler;\n        if (!_shouldApplyFill(source) || options.drawTime !== 'beforeDatasetDraw') {\n            return;\n        }\n        _drawfill(chart.ctx, source, chart.chartArea);\n    },\n    defaults: {\n        propagate: true,\n        drawTime: 'beforeDatasetDraw'\n    }\n};\n\nconst getBoxSize = (labelOpts, fontSize)=>{\n    let { boxHeight =fontSize , boxWidth =fontSize  } = labelOpts;\n    if (labelOpts.usePointStyle) {\n        boxHeight = Math.min(boxHeight, fontSize);\n        boxWidth = labelOpts.pointStyleWidth || Math.min(boxWidth, fontSize);\n    }\n    return {\n        boxWidth,\n        boxHeight,\n        itemHeight: Math.max(fontSize, boxHeight)\n    };\n};\nconst itemsEqual = (a, b)=>a !== null && b !== null && a.datasetIndex === b.datasetIndex && a.index === b.index;\nclass Legend extends Element {\n constructor(config){\n        super();\n        this._added = false;\n        this.legendHitBoxes = [];\n this._hoveredItem = null;\n        this.doughnutMode = false;\n        this.chart = config.chart;\n        this.options = config.options;\n        this.ctx = config.ctx;\n        this.legendItems = undefined;\n        this.columnSizes = undefined;\n        this.lineWidths = undefined;\n        this.maxHeight = undefined;\n        this.maxWidth = undefined;\n        this.top = undefined;\n        this.bottom = undefined;\n        this.left = undefined;\n        this.right = undefined;\n        this.height = undefined;\n        this.width = undefined;\n        this._margins = undefined;\n        this.position = undefined;\n        this.weight = undefined;\n        this.fullSize = undefined;\n    }\n    update(maxWidth, maxHeight, margins) {\n        this.maxWidth = maxWidth;\n        this.maxHeight = maxHeight;\n        this._margins = margins;\n        this.setDimensions();\n        this.buildLabels();\n        this.fit();\n    }\n    setDimensions() {\n        if (this.isHorizontal()) {\n            this.width = this.maxWidth;\n            this.left = this._margins.left;\n            this.right = this.width;\n        } else {\n            this.height = this.maxHeight;\n            this.top = this._margins.top;\n            this.bottom = this.height;\n        }\n    }\n    buildLabels() {\n        const labelOpts = this.options.labels || {};\n        let legendItems = callback(labelOpts.generateLabels, [\n            this.chart\n        ], this) || [];\n        if (labelOpts.filter) {\n            legendItems = legendItems.filter((item)=>labelOpts.filter(item, this.chart.data));\n        }\n        if (labelOpts.sort) {\n            legendItems = legendItems.sort((a, b)=>labelOpts.sort(a, b, this.chart.data));\n        }\n        if (this.options.reverse) {\n            legendItems.reverse();\n        }\n        this.legendItems = legendItems;\n    }\n    fit() {\n        const { options , ctx  } = this;\n        if (!options.display) {\n            this.width = this.height = 0;\n            return;\n        }\n        const labelOpts = options.labels;\n        const labelFont = toFont(labelOpts.font);\n        const fontSize = labelFont.size;\n        const titleHeight = this._computeTitleHeight();\n        const { boxWidth , itemHeight  } = getBoxSize(labelOpts, fontSize);\n        let width, height;\n        ctx.font = labelFont.string;\n        if (this.isHorizontal()) {\n            width = this.maxWidth;\n            height = this._fitRows(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n        } else {\n            height = this.maxHeight;\n            width = this._fitCols(titleHeight, labelFont, boxWidth, itemHeight) + 10;\n        }\n        this.width = Math.min(width, options.maxWidth || this.maxWidth);\n        this.height = Math.min(height, options.maxHeight || this.maxHeight);\n    }\n _fitRows(titleHeight, fontSize, boxWidth, itemHeight) {\n        const { ctx , maxWidth , options: { labels: { padding  }  }  } = this;\n        const hitboxes = this.legendHitBoxes = [];\n        const lineWidths = this.lineWidths = [\n            0\n        ];\n        const lineHeight = itemHeight + padding;\n        let totalHeight = titleHeight;\n        ctx.textAlign = 'left';\n        ctx.textBaseline = 'middle';\n        let row = -1;\n        let top = -lineHeight;\n        this.legendItems.forEach((legendItem, i)=>{\n            const itemWidth = boxWidth + fontSize / 2 + ctx.measureText(legendItem.text).width;\n            if (i === 0 || lineWidths[lineWidths.length - 1] + itemWidth + 2 * padding > maxWidth) {\n                totalHeight += lineHeight;\n                lineWidths[lineWidths.length - (i > 0 ? 0 : 1)] = 0;\n                top += lineHeight;\n                row++;\n            }\n            hitboxes[i] = {\n                left: 0,\n                top,\n                row,\n                width: itemWidth,\n                height: itemHeight\n            };\n            lineWidths[lineWidths.length - 1] += itemWidth + padding;\n        });\n        return totalHeight;\n    }\n    _fitCols(titleHeight, labelFont, boxWidth, _itemHeight) {\n        const { ctx , maxHeight , options: { labels: { padding  }  }  } = this;\n        const hitboxes = this.legendHitBoxes = [];\n        const columnSizes = this.columnSizes = [];\n        const heightLimit = maxHeight - titleHeight;\n        let totalWidth = padding;\n        let currentColWidth = 0;\n        let currentColHeight = 0;\n        let left = 0;\n        let col = 0;\n        this.legendItems.forEach((legendItem, i)=>{\n            const { itemWidth , itemHeight  } = calculateItemSize(boxWidth, labelFont, ctx, legendItem, _itemHeight);\n            if (i > 0 && currentColHeight + itemHeight + 2 * padding > heightLimit) {\n                totalWidth += currentColWidth + padding;\n                columnSizes.push({\n                    width: currentColWidth,\n                    height: currentColHeight\n                });\n                left += currentColWidth + padding;\n                col++;\n                currentColWidth = currentColHeight = 0;\n            }\n            hitboxes[i] = {\n                left,\n                top: currentColHeight,\n                col,\n                width: itemWidth,\n                height: itemHeight\n            };\n            currentColWidth = Math.max(currentColWidth, itemWidth);\n            currentColHeight += itemHeight + padding;\n        });\n        totalWidth += currentColWidth;\n        columnSizes.push({\n            width: currentColWidth,\n            height: currentColHeight\n        });\n        return totalWidth;\n    }\n    adjustHitBoxes() {\n        if (!this.options.display) {\n            return;\n        }\n        const titleHeight = this._computeTitleHeight();\n        const { legendHitBoxes: hitboxes , options: { align , labels: { padding  } , rtl  }  } = this;\n        const rtlHelper = getRtlAdapter(rtl, this.left, this.width);\n        if (this.isHorizontal()) {\n            let row = 0;\n            let left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n            for (const hitbox of hitboxes){\n                if (row !== hitbox.row) {\n                    row = hitbox.row;\n                    left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n                }\n                hitbox.top += this.top + titleHeight + padding;\n                hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(left), hitbox.width);\n                left += hitbox.width + padding;\n            }\n        } else {\n            let col = 0;\n            let top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n            for (const hitbox of hitboxes){\n                if (hitbox.col !== col) {\n                    col = hitbox.col;\n                    top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n                }\n                hitbox.top = top;\n                hitbox.left += this.left + padding;\n                hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(hitbox.left), hitbox.width);\n                top += hitbox.height + padding;\n            }\n        }\n    }\n    isHorizontal() {\n        return this.options.position === 'top' || this.options.position === 'bottom';\n    }\n    draw() {\n        if (this.options.display) {\n            const ctx = this.ctx;\n            clipArea(ctx, this);\n            this._draw();\n            unclipArea(ctx);\n        }\n    }\n _draw() {\n        const { options: opts , columnSizes , lineWidths , ctx  } = this;\n        const { align , labels: labelOpts  } = opts;\n        const defaultColor = defaults.color;\n        const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n        const labelFont = toFont(labelOpts.font);\n        const { padding  } = labelOpts;\n        const fontSize = labelFont.size;\n        const halfFontSize = fontSize / 2;\n        let cursor;\n        this.drawTitle();\n        ctx.textAlign = rtlHelper.textAlign('left');\n        ctx.textBaseline = 'middle';\n        ctx.lineWidth = 0.5;\n        ctx.font = labelFont.string;\n        const { boxWidth , boxHeight , itemHeight  } = getBoxSize(labelOpts, fontSize);\n        const drawLegendBox = function(x, y, legendItem) {\n            if (isNaN(boxWidth) || boxWidth <= 0 || isNaN(boxHeight) || boxHeight < 0) {\n                return;\n            }\n            ctx.save();\n            const lineWidth = valueOrDefault(legendItem.lineWidth, 1);\n            ctx.fillStyle = valueOrDefault(legendItem.fillStyle, defaultColor);\n            ctx.lineCap = valueOrDefault(legendItem.lineCap, 'butt');\n            ctx.lineDashOffset = valueOrDefault(legendItem.lineDashOffset, 0);\n            ctx.lineJoin = valueOrDefault(legendItem.lineJoin, 'miter');\n            ctx.lineWidth = lineWidth;\n            ctx.strokeStyle = valueOrDefault(legendItem.strokeStyle, defaultColor);\n            ctx.setLineDash(valueOrDefault(legendItem.lineDash, []));\n            if (labelOpts.usePointStyle) {\n                const drawOptions = {\n                    radius: boxHeight * Math.SQRT2 / 2,\n                    pointStyle: legendItem.pointStyle,\n                    rotation: legendItem.rotation,\n                    borderWidth: lineWidth\n                };\n                const centerX = rtlHelper.xPlus(x, boxWidth / 2);\n                const centerY = y + halfFontSize;\n                drawPointLegend(ctx, drawOptions, centerX, centerY, labelOpts.pointStyleWidth && boxWidth);\n            } else {\n                const yBoxTop = y + Math.max((fontSize - boxHeight) / 2, 0);\n                const xBoxLeft = rtlHelper.leftForLtr(x, boxWidth);\n                const borderRadius = toTRBLCorners(legendItem.borderRadius);\n                ctx.beginPath();\n                if (Object.values(borderRadius).some((v)=>v !== 0)) {\n                    addRoundedRectPath(ctx, {\n                        x: xBoxLeft,\n                        y: yBoxTop,\n                        w: boxWidth,\n                        h: boxHeight,\n                        radius: borderRadius\n                    });\n                } else {\n                    ctx.rect(xBoxLeft, yBoxTop, boxWidth, boxHeight);\n                }\n                ctx.fill();\n                if (lineWidth !== 0) {\n                    ctx.stroke();\n                }\n            }\n            ctx.restore();\n        };\n        const fillText = function(x, y, legendItem) {\n            renderText(ctx, legendItem.text, x, y + itemHeight / 2, labelFont, {\n                strikethrough: legendItem.hidden,\n                textAlign: rtlHelper.textAlign(legendItem.textAlign)\n            });\n        };\n        const isHorizontal = this.isHorizontal();\n        const titleHeight = this._computeTitleHeight();\n        if (isHorizontal) {\n            cursor = {\n                x: _alignStartEnd(align, this.left + padding, this.right - lineWidths[0]),\n                y: this.top + padding + titleHeight,\n                line: 0\n            };\n        } else {\n            cursor = {\n                x: this.left + padding,\n                y: _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[0].height),\n                line: 0\n            };\n        }\n        overrideTextDirection(this.ctx, opts.textDirection);\n        const lineHeight = itemHeight + padding;\n        this.legendItems.forEach((legendItem, i)=>{\n            ctx.strokeStyle = legendItem.fontColor;\n            ctx.fillStyle = legendItem.fontColor;\n            const textWidth = ctx.measureText(legendItem.text).width;\n            const textAlign = rtlHelper.textAlign(legendItem.textAlign || (legendItem.textAlign = labelOpts.textAlign));\n            const width = boxWidth + halfFontSize + textWidth;\n            let x = cursor.x;\n            let y = cursor.y;\n            rtlHelper.setWidth(this.width);\n            if (isHorizontal) {\n                if (i > 0 && x + width + padding > this.right) {\n                    y = cursor.y += lineHeight;\n                    cursor.line++;\n                    x = cursor.x = _alignStartEnd(align, this.left + padding, this.right - lineWidths[cursor.line]);\n                }\n            } else if (i > 0 && y + lineHeight > this.bottom) {\n                x = cursor.x = x + columnSizes[cursor.line].width + padding;\n                cursor.line++;\n                y = cursor.y = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[cursor.line].height);\n            }\n            const realX = rtlHelper.x(x);\n            drawLegendBox(realX, y, legendItem);\n            x = _textX(textAlign, x + boxWidth + halfFontSize, isHorizontal ? x + width : this.right, opts.rtl);\n            fillText(rtlHelper.x(x), y, legendItem);\n            if (isHorizontal) {\n                cursor.x += width + padding;\n            } else if (typeof legendItem.text !== 'string') {\n                const fontLineHeight = labelFont.lineHeight;\n                cursor.y += calculateLegendItemHeight(legendItem, fontLineHeight);\n            } else {\n                cursor.y += lineHeight;\n            }\n        });\n        restoreTextDirection(this.ctx, opts.textDirection);\n    }\n drawTitle() {\n        const opts = this.options;\n        const titleOpts = opts.title;\n        const titleFont = toFont(titleOpts.font);\n        const titlePadding = toPadding(titleOpts.padding);\n        if (!titleOpts.display) {\n            return;\n        }\n        const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n        const ctx = this.ctx;\n        const position = titleOpts.position;\n        const halfFontSize = titleFont.size / 2;\n        const topPaddingPlusHalfFontSize = titlePadding.top + halfFontSize;\n        let y;\n        let left = this.left;\n        let maxWidth = this.width;\n        if (this.isHorizontal()) {\n            maxWidth = Math.max(...this.lineWidths);\n            y = this.top + topPaddingPlusHalfFontSize;\n            left = _alignStartEnd(opts.align, left, this.right - maxWidth);\n        } else {\n            const maxHeight = this.columnSizes.reduce((acc, size)=>Math.max(acc, size.height), 0);\n            y = topPaddingPlusHalfFontSize + _alignStartEnd(opts.align, this.top, this.bottom - maxHeight - opts.labels.padding - this._computeTitleHeight());\n        }\n        const x = _alignStartEnd(position, left, left + maxWidth);\n        ctx.textAlign = rtlHelper.textAlign(_toLeftRightCenter(position));\n        ctx.textBaseline = 'middle';\n        ctx.strokeStyle = titleOpts.color;\n        ctx.fillStyle = titleOpts.color;\n        ctx.font = titleFont.string;\n        renderText(ctx, titleOpts.text, x, y, titleFont);\n    }\n _computeTitleHeight() {\n        const titleOpts = this.options.title;\n        const titleFont = toFont(titleOpts.font);\n        const titlePadding = toPadding(titleOpts.padding);\n        return titleOpts.display ? titleFont.lineHeight + titlePadding.height : 0;\n    }\n _getLegendItemAt(x, y) {\n        let i, hitBox, lh;\n        if (_isBetween(x, this.left, this.right) && _isBetween(y, this.top, this.bottom)) {\n            lh = this.legendHitBoxes;\n            for(i = 0; i < lh.length; ++i){\n                hitBox = lh[i];\n                if (_isBetween(x, hitBox.left, hitBox.left + hitBox.width) && _isBetween(y, hitBox.top, hitBox.top + hitBox.height)) {\n                    return this.legendItems[i];\n                }\n            }\n        }\n        return null;\n    }\n handleEvent(e) {\n        const opts = this.options;\n        if (!isListened(e.type, opts)) {\n            return;\n        }\n        const hoveredItem = this._getLegendItemAt(e.x, e.y);\n        if (e.type === 'mousemove' || e.type === 'mouseout') {\n            const previous = this._hoveredItem;\n            const sameItem = itemsEqual(previous, hoveredItem);\n            if (previous && !sameItem) {\n                callback(opts.onLeave, [\n                    e,\n                    previous,\n                    this\n                ], this);\n            }\n            this._hoveredItem = hoveredItem;\n            if (hoveredItem && !sameItem) {\n                callback(opts.onHover, [\n                    e,\n                    hoveredItem,\n                    this\n                ], this);\n            }\n        } else if (hoveredItem) {\n            callback(opts.onClick, [\n                e,\n                hoveredItem,\n                this\n            ], this);\n        }\n    }\n}\nfunction calculateItemSize(boxWidth, labelFont, ctx, legendItem, _itemHeight) {\n    const itemWidth = calculateItemWidth(legendItem, boxWidth, labelFont, ctx);\n    const itemHeight = calculateItemHeight(_itemHeight, legendItem, labelFont.lineHeight);\n    return {\n        itemWidth,\n        itemHeight\n    };\n}\nfunction calculateItemWidth(legendItem, boxWidth, labelFont, ctx) {\n    let legendItemText = legendItem.text;\n    if (legendItemText && typeof legendItemText !== 'string') {\n        legendItemText = legendItemText.reduce((a, b)=>a.length > b.length ? a : b);\n    }\n    return boxWidth + labelFont.size / 2 + ctx.measureText(legendItemText).width;\n}\nfunction calculateItemHeight(_itemHeight, legendItem, fontLineHeight) {\n    let itemHeight = _itemHeight;\n    if (typeof legendItem.text !== 'string') {\n        itemHeight = calculateLegendItemHeight(legendItem, fontLineHeight);\n    }\n    return itemHeight;\n}\nfunction calculateLegendItemHeight(legendItem, fontLineHeight) {\n    const labelHeight = legendItem.text ? legendItem.text.length + 0.5 : 0;\n    return fontLineHeight * labelHeight;\n}\nfunction isListened(type, opts) {\n    if ((type === 'mousemove' || type === 'mouseout') && (opts.onHover || opts.onLeave)) {\n        return true;\n    }\n    if (opts.onClick && (type === 'click' || type === 'mouseup')) {\n        return true;\n    }\n    return false;\n}\nvar plugin_legend = {\n    id: 'legend',\n _element: Legend,\n    start (chart, _args, options) {\n        const legend = chart.legend = new Legend({\n            ctx: chart.ctx,\n            options,\n            chart\n        });\n        layouts.configure(chart, legend, options);\n        layouts.addBox(chart, legend);\n    },\n    stop (chart) {\n        layouts.removeBox(chart, chart.legend);\n        delete chart.legend;\n    },\n    beforeUpdate (chart, _args, options) {\n        const legend = chart.legend;\n        layouts.configure(chart, legend, options);\n        legend.options = options;\n    },\n    afterUpdate (chart) {\n        const legend = chart.legend;\n        legend.buildLabels();\n        legend.adjustHitBoxes();\n    },\n    afterEvent (chart, args) {\n        if (!args.replay) {\n            chart.legend.handleEvent(args.event);\n        }\n    },\n    defaults: {\n        display: true,\n        position: 'top',\n        align: 'center',\n        fullSize: true,\n        reverse: false,\n        weight: 1000,\n        onClick (e, legendItem, legend) {\n            const index = legendItem.datasetIndex;\n            const ci = legend.chart;\n            if (ci.isDatasetVisible(index)) {\n                ci.hide(index);\n                legendItem.hidden = true;\n            } else {\n                ci.show(index);\n                legendItem.hidden = false;\n            }\n        },\n        onHover: null,\n        onLeave: null,\n        labels: {\n            color: (ctx)=>ctx.chart.options.color,\n            boxWidth: 40,\n            padding: 10,\n            generateLabels (chart) {\n                const datasets = chart.data.datasets;\n                const { labels: { usePointStyle , pointStyle , textAlign , color , useBorderRadius , borderRadius  }  } = chart.legend.options;\n                return chart._getSortedDatasetMetas().map((meta)=>{\n                    const style = meta.controller.getStyle(usePointStyle ? 0 : undefined);\n                    const borderWidth = toPadding(style.borderWidth);\n                    return {\n                        text: datasets[meta.index].label,\n                        fillStyle: style.backgroundColor,\n                        fontColor: color,\n                        hidden: !meta.visible,\n                        lineCap: style.borderCapStyle,\n                        lineDash: style.borderDash,\n                        lineDashOffset: style.borderDashOffset,\n                        lineJoin: style.borderJoinStyle,\n                        lineWidth: (borderWidth.width + borderWidth.height) / 4,\n                        strokeStyle: style.borderColor,\n                        pointStyle: pointStyle || style.pointStyle,\n                        rotation: style.rotation,\n                        textAlign: textAlign || style.textAlign,\n                        borderRadius: useBorderRadius && (borderRadius || style.borderRadius),\n                        datasetIndex: meta.index\n                    };\n                }, this);\n            }\n        },\n        title: {\n            color: (ctx)=>ctx.chart.options.color,\n            display: false,\n            position: 'center',\n            text: ''\n        }\n    },\n    descriptors: {\n        _scriptable: (name)=>!name.startsWith('on'),\n        labels: {\n            _scriptable: (name)=>![\n                    'generateLabels',\n                    'filter',\n                    'sort'\n                ].includes(name)\n        }\n    }\n};\n\nclass Title extends Element {\n constructor(config){\n        super();\n        this.chart = config.chart;\n        this.options = config.options;\n        this.ctx = config.ctx;\n        this._padding = undefined;\n        this.top = undefined;\n        this.bottom = undefined;\n        this.left = undefined;\n        this.right = undefined;\n        this.width = undefined;\n        this.height = undefined;\n        this.position = undefined;\n        this.weight = undefined;\n        this.fullSize = undefined;\n    }\n    update(maxWidth, maxHeight) {\n        const opts = this.options;\n        this.left = 0;\n        this.top = 0;\n        if (!opts.display) {\n            this.width = this.height = this.right = this.bottom = 0;\n            return;\n        }\n        this.width = this.right = maxWidth;\n        this.height = this.bottom = maxHeight;\n        const lineCount = isArray(opts.text) ? opts.text.length : 1;\n        this._padding = toPadding(opts.padding);\n        const textSize = lineCount * toFont(opts.font).lineHeight + this._padding.height;\n        if (this.isHorizontal()) {\n            this.height = textSize;\n        } else {\n            this.width = textSize;\n        }\n    }\n    isHorizontal() {\n        const pos = this.options.position;\n        return pos === 'top' || pos === 'bottom';\n    }\n    _drawArgs(offset) {\n        const { top , left , bottom , right , options  } = this;\n        const align = options.align;\n        let rotation = 0;\n        let maxWidth, titleX, titleY;\n        if (this.isHorizontal()) {\n            titleX = _alignStartEnd(align, left, right);\n            titleY = top + offset;\n            maxWidth = right - left;\n        } else {\n            if (options.position === 'left') {\n                titleX = left + offset;\n                titleY = _alignStartEnd(align, bottom, top);\n                rotation = PI * -0.5;\n            } else {\n                titleX = right - offset;\n                titleY = _alignStartEnd(align, top, bottom);\n                rotation = PI * 0.5;\n            }\n            maxWidth = bottom - top;\n        }\n        return {\n            titleX,\n            titleY,\n            maxWidth,\n            rotation\n        };\n    }\n    draw() {\n        const ctx = this.ctx;\n        const opts = this.options;\n        if (!opts.display) {\n            return;\n        }\n        const fontOpts = toFont(opts.font);\n        const lineHeight = fontOpts.lineHeight;\n        const offset = lineHeight / 2 + this._padding.top;\n        const { titleX , titleY , maxWidth , rotation  } = this._drawArgs(offset);\n        renderText(ctx, opts.text, 0, 0, fontOpts, {\n            color: opts.color,\n            maxWidth,\n            rotation,\n            textAlign: _toLeftRightCenter(opts.align),\n            textBaseline: 'middle',\n            translation: [\n                titleX,\n                titleY\n            ]\n        });\n    }\n}\nfunction createTitle(chart, titleOpts) {\n    const title = new Title({\n        ctx: chart.ctx,\n        options: titleOpts,\n        chart\n    });\n    layouts.configure(chart, title, titleOpts);\n    layouts.addBox(chart, title);\n    chart.titleBlock = title;\n}\nvar plugin_title = {\n    id: 'title',\n _element: Title,\n    start (chart, _args, options) {\n        createTitle(chart, options);\n    },\n    stop (chart) {\n        const titleBlock = chart.titleBlock;\n        layouts.removeBox(chart, titleBlock);\n        delete chart.titleBlock;\n    },\n    beforeUpdate (chart, _args, options) {\n        const title = chart.titleBlock;\n        layouts.configure(chart, title, options);\n        title.options = options;\n    },\n    defaults: {\n        align: 'center',\n        display: false,\n        font: {\n            weight: 'bold'\n        },\n        fullSize: true,\n        padding: 10,\n        position: 'top',\n        text: '',\n        weight: 2000\n    },\n    defaultRoutes: {\n        color: 'color'\n    },\n    descriptors: {\n        _scriptable: true,\n        _indexable: false\n    }\n};\n\nconst map = new WeakMap();\nvar plugin_subtitle = {\n    id: 'subtitle',\n    start (chart, _args, options) {\n        const title = new Title({\n            ctx: chart.ctx,\n            options,\n            chart\n        });\n        layouts.configure(chart, title, options);\n        layouts.addBox(chart, title);\n        map.set(chart, title);\n    },\n    stop (chart) {\n        layouts.removeBox(chart, map.get(chart));\n        map.delete(chart);\n    },\n    beforeUpdate (chart, _args, options) {\n        const title = map.get(chart);\n        layouts.configure(chart, title, options);\n        title.options = options;\n    },\n    defaults: {\n        align: 'center',\n        display: false,\n        font: {\n            weight: 'normal'\n        },\n        fullSize: true,\n        padding: 0,\n        position: 'top',\n        text: '',\n        weight: 1500\n    },\n    defaultRoutes: {\n        color: 'color'\n    },\n    descriptors: {\n        _scriptable: true,\n        _indexable: false\n    }\n};\n\nconst positioners = {\n average (items) {\n        if (!items.length) {\n            return false;\n        }\n        let i, len;\n        let x = 0;\n        let y = 0;\n        let count = 0;\n        for(i = 0, len = items.length; i < len; ++i){\n            const el = items[i].element;\n            if (el && el.hasValue()) {\n                const pos = el.tooltipPosition();\n                x += pos.x;\n                y += pos.y;\n                ++count;\n            }\n        }\n        return {\n            x: x / count,\n            y: y / count\n        };\n    },\n nearest (items, eventPosition) {\n        if (!items.length) {\n            return false;\n        }\n        let x = eventPosition.x;\n        let y = eventPosition.y;\n        let minDistance = Number.POSITIVE_INFINITY;\n        let i, len, nearestElement;\n        for(i = 0, len = items.length; i < len; ++i){\n            const el = items[i].element;\n            if (el && el.hasValue()) {\n                const center = el.getCenterPoint();\n                const d = distanceBetweenPoints(eventPosition, center);\n                if (d < minDistance) {\n                    minDistance = d;\n                    nearestElement = el;\n                }\n            }\n        }\n        if (nearestElement) {\n            const tp = nearestElement.tooltipPosition();\n            x = tp.x;\n            y = tp.y;\n        }\n        return {\n            x,\n            y\n        };\n    }\n};\nfunction pushOrConcat(base, toPush) {\n    if (toPush) {\n        if (isArray(toPush)) {\n            Array.prototype.push.apply(base, toPush);\n        } else {\n            base.push(toPush);\n        }\n    }\n    return base;\n}\n function splitNewlines(str) {\n    if ((typeof str === 'string' || str instanceof String) && str.indexOf('\\n') > -1) {\n        return str.split('\\n');\n    }\n    return str;\n}\n function createTooltipItem(chart, item) {\n    const { element , datasetIndex , index  } = item;\n    const controller = chart.getDatasetMeta(datasetIndex).controller;\n    const { label , value  } = controller.getLabelAndValue(index);\n    return {\n        chart,\n        label,\n        parsed: controller.getParsed(index),\n        raw: chart.data.datasets[datasetIndex].data[index],\n        formattedValue: value,\n        dataset: controller.getDataset(),\n        dataIndex: index,\n        datasetIndex,\n        element\n    };\n}\n function getTooltipSize(tooltip, options) {\n    const ctx = tooltip.chart.ctx;\n    const { body , footer , title  } = tooltip;\n    const { boxWidth , boxHeight  } = options;\n    const bodyFont = toFont(options.bodyFont);\n    const titleFont = toFont(options.titleFont);\n    const footerFont = toFont(options.footerFont);\n    const titleLineCount = title.length;\n    const footerLineCount = footer.length;\n    const bodyLineItemCount = body.length;\n    const padding = toPadding(options.padding);\n    let height = padding.height;\n    let width = 0;\n    let combinedBodyLength = body.reduce((count, bodyItem)=>count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length, 0);\n    combinedBodyLength += tooltip.beforeBody.length + tooltip.afterBody.length;\n    if (titleLineCount) {\n        height += titleLineCount * titleFont.lineHeight + (titleLineCount - 1) * options.titleSpacing + options.titleMarginBottom;\n    }\n    if (combinedBodyLength) {\n        const bodyLineHeight = options.displayColors ? Math.max(boxHeight, bodyFont.lineHeight) : bodyFont.lineHeight;\n        height += bodyLineItemCount * bodyLineHeight + (combinedBodyLength - bodyLineItemCount) * bodyFont.lineHeight + (combinedBodyLength - 1) * options.bodySpacing;\n    }\n    if (footerLineCount) {\n        height += options.footerMarginTop + footerLineCount * footerFont.lineHeight + (footerLineCount - 1) * options.footerSpacing;\n    }\n    let widthPadding = 0;\n    const maxLineWidth = function(line) {\n        width = Math.max(width, ctx.measureText(line).width + widthPadding);\n    };\n    ctx.save();\n    ctx.font = titleFont.string;\n    each(tooltip.title, maxLineWidth);\n    ctx.font = bodyFont.string;\n    each(tooltip.beforeBody.concat(tooltip.afterBody), maxLineWidth);\n    widthPadding = options.displayColors ? boxWidth + 2 + options.boxPadding : 0;\n    each(body, (bodyItem)=>{\n        each(bodyItem.before, maxLineWidth);\n        each(bodyItem.lines, maxLineWidth);\n        each(bodyItem.after, maxLineWidth);\n    });\n    widthPadding = 0;\n    ctx.font = footerFont.string;\n    each(tooltip.footer, maxLineWidth);\n    ctx.restore();\n    width += padding.width;\n    return {\n        width,\n        height\n    };\n}\nfunction determineYAlign(chart, size) {\n    const { y , height  } = size;\n    if (y < height / 2) {\n        return 'top';\n    } else if (y > chart.height - height / 2) {\n        return 'bottom';\n    }\n    return 'center';\n}\nfunction doesNotFitWithAlign(xAlign, chart, options, size) {\n    const { x , width  } = size;\n    const caret = options.caretSize + options.caretPadding;\n    if (xAlign === 'left' && x + width + caret > chart.width) {\n        return true;\n    }\n    if (xAlign === 'right' && x - width - caret < 0) {\n        return true;\n    }\n}\nfunction determineXAlign(chart, options, size, yAlign) {\n    const { x , width  } = size;\n    const { width: chartWidth , chartArea: { left , right  }  } = chart;\n    let xAlign = 'center';\n    if (yAlign === 'center') {\n        xAlign = x <= (left + right) / 2 ? 'left' : 'right';\n    } else if (x <= width / 2) {\n        xAlign = 'left';\n    } else if (x >= chartWidth - width / 2) {\n        xAlign = 'right';\n    }\n    if (doesNotFitWithAlign(xAlign, chart, options, size)) {\n        xAlign = 'center';\n    }\n    return xAlign;\n}\n function determineAlignment(chart, options, size) {\n    const yAlign = size.yAlign || options.yAlign || determineYAlign(chart, size);\n    return {\n        xAlign: size.xAlign || options.xAlign || determineXAlign(chart, options, size, yAlign),\n        yAlign\n    };\n}\nfunction alignX(size, xAlign) {\n    let { x , width  } = size;\n    if (xAlign === 'right') {\n        x -= width;\n    } else if (xAlign === 'center') {\n        x -= width / 2;\n    }\n    return x;\n}\nfunction alignY(size, yAlign, paddingAndSize) {\n    let { y , height  } = size;\n    if (yAlign === 'top') {\n        y += paddingAndSize;\n    } else if (yAlign === 'bottom') {\n        y -= height + paddingAndSize;\n    } else {\n        y -= height / 2;\n    }\n    return y;\n}\n function getBackgroundPoint(options, size, alignment, chart) {\n    const { caretSize , caretPadding , cornerRadius  } = options;\n    const { xAlign , yAlign  } = alignment;\n    const paddingAndSize = caretSize + caretPadding;\n    const { topLeft , topRight , bottomLeft , bottomRight  } = toTRBLCorners(cornerRadius);\n    let x = alignX(size, xAlign);\n    const y = alignY(size, yAlign, paddingAndSize);\n    if (yAlign === 'center') {\n        if (xAlign === 'left') {\n            x += paddingAndSize;\n        } else if (xAlign === 'right') {\n            x -= paddingAndSize;\n        }\n    } else if (xAlign === 'left') {\n        x -= Math.max(topLeft, bottomLeft) + caretSize;\n    } else if (xAlign === 'right') {\n        x += Math.max(topRight, bottomRight) + caretSize;\n    }\n    return {\n        x: _limitValue(x, 0, chart.width - size.width),\n        y: _limitValue(y, 0, chart.height - size.height)\n    };\n}\nfunction getAlignedX(tooltip, align, options) {\n    const padding = toPadding(options.padding);\n    return align === 'center' ? tooltip.x + tooltip.width / 2 : align === 'right' ? tooltip.x + tooltip.width - padding.right : tooltip.x + padding.left;\n}\n function getBeforeAfterBodyLines(callback) {\n    return pushOrConcat([], splitNewlines(callback));\n}\nfunction createTooltipContext(parent, tooltip, tooltipItems) {\n    return createContext(parent, {\n        tooltip,\n        tooltipItems,\n        type: 'tooltip'\n    });\n}\nfunction overrideCallbacks(callbacks, context) {\n    const override = context && context.dataset && context.dataset.tooltip && context.dataset.tooltip.callbacks;\n    return override ? callbacks.override(override) : callbacks;\n}\nconst defaultCallbacks = {\n    beforeTitle: noop,\n    title (tooltipItems) {\n        if (tooltipItems.length > 0) {\n            const item = tooltipItems[0];\n            const labels = item.chart.data.labels;\n            const labelCount = labels ? labels.length : 0;\n            if (this && this.options && this.options.mode === 'dataset') {\n                return item.dataset.label || '';\n            } else if (item.label) {\n                return item.label;\n            } else if (labelCount > 0 && item.dataIndex < labelCount) {\n                return labels[item.dataIndex];\n            }\n        }\n        return '';\n    },\n    afterTitle: noop,\n    beforeBody: noop,\n    beforeLabel: noop,\n    label (tooltipItem) {\n        if (this && this.options && this.options.mode === 'dataset') {\n            return tooltipItem.label + ': ' + tooltipItem.formattedValue || tooltipItem.formattedValue;\n        }\n        let label = tooltipItem.dataset.label || '';\n        if (label) {\n            label += ': ';\n        }\n        const value = tooltipItem.formattedValue;\n        if (!isNullOrUndef(value)) {\n            label += value;\n        }\n        return label;\n    },\n    labelColor (tooltipItem) {\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n            borderColor: options.borderColor,\n            backgroundColor: options.backgroundColor,\n            borderWidth: options.borderWidth,\n            borderDash: options.borderDash,\n            borderDashOffset: options.borderDashOffset,\n            borderRadius: 0\n        };\n    },\n    labelTextColor () {\n        return this.options.bodyColor;\n    },\n    labelPointStyle (tooltipItem) {\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n            pointStyle: options.pointStyle,\n            rotation: options.rotation\n        };\n    },\n    afterLabel: noop,\n    afterBody: noop,\n    beforeFooter: noop,\n    footer: noop,\n    afterFooter: noop\n};\n function invokeCallbackWithFallback(callbacks, name, ctx, arg) {\n    const result = callbacks[name].call(ctx, arg);\n    if (typeof result === 'undefined') {\n        return defaultCallbacks[name].call(ctx, arg);\n    }\n    return result;\n}\nclass Tooltip extends Element {\n static positioners = positioners;\n    constructor(config){\n        super();\n        this.opacity = 0;\n        this._active = [];\n        this._eventPosition = undefined;\n        this._size = undefined;\n        this._cachedAnimations = undefined;\n        this._tooltipItems = [];\n        this.$animations = undefined;\n        this.$context = undefined;\n        this.chart = config.chart;\n        this.options = config.options;\n        this.dataPoints = undefined;\n        this.title = undefined;\n        this.beforeBody = undefined;\n        this.body = undefined;\n        this.afterBody = undefined;\n        this.footer = undefined;\n        this.xAlign = undefined;\n        this.yAlign = undefined;\n        this.x = undefined;\n        this.y = undefined;\n        this.height = undefined;\n        this.width = undefined;\n        this.caretX = undefined;\n        this.caretY = undefined;\n        this.labelColors = undefined;\n        this.labelPointStyles = undefined;\n        this.labelTextColors = undefined;\n    }\n    initialize(options) {\n        this.options = options;\n        this._cachedAnimations = undefined;\n        this.$context = undefined;\n    }\n _resolveAnimations() {\n        const cached = this._cachedAnimations;\n        if (cached) {\n            return cached;\n        }\n        const chart = this.chart;\n        const options = this.options.setContext(this.getContext());\n        const opts = options.enabled && chart.options.animation && options.animations;\n        const animations = new Animations(this.chart, opts);\n        if (opts._cacheable) {\n            this._cachedAnimations = Object.freeze(animations);\n        }\n        return animations;\n    }\n getContext() {\n        return this.$context || (this.$context = createTooltipContext(this.chart.getContext(), this, this._tooltipItems));\n    }\n    getTitle(context, options) {\n        const { callbacks  } = options;\n        const beforeTitle = invokeCallbackWithFallback(callbacks, 'beforeTitle', this, context);\n        const title = invokeCallbackWithFallback(callbacks, 'title', this, context);\n        const afterTitle = invokeCallbackWithFallback(callbacks, 'afterTitle', this, context);\n        let lines = [];\n        lines = pushOrConcat(lines, splitNewlines(beforeTitle));\n        lines = pushOrConcat(lines, splitNewlines(title));\n        lines = pushOrConcat(lines, splitNewlines(afterTitle));\n        return lines;\n    }\n    getBeforeBody(tooltipItems, options) {\n        return getBeforeAfterBodyLines(invokeCallbackWithFallback(options.callbacks, 'beforeBody', this, tooltipItems));\n    }\n    getBody(tooltipItems, options) {\n        const { callbacks  } = options;\n        const bodyItems = [];\n        each(tooltipItems, (context)=>{\n            const bodyItem = {\n                before: [],\n                lines: [],\n                after: []\n            };\n            const scoped = overrideCallbacks(callbacks, context);\n            pushOrConcat(bodyItem.before, splitNewlines(invokeCallbackWithFallback(scoped, 'beforeLabel', this, context)));\n            pushOrConcat(bodyItem.lines, invokeCallbackWithFallback(scoped, 'label', this, context));\n            pushOrConcat(bodyItem.after, splitNewlines(invokeCallbackWithFallback(scoped, 'afterLabel', this, context)));\n            bodyItems.push(bodyItem);\n        });\n        return bodyItems;\n    }\n    getAfterBody(tooltipItems, options) {\n        return getBeforeAfterBodyLines(invokeCallbackWithFallback(options.callbacks, 'afterBody', this, tooltipItems));\n    }\n    getFooter(tooltipItems, options) {\n        const { callbacks  } = options;\n        const beforeFooter = invokeCallbackWithFallback(callbacks, 'beforeFooter', this, tooltipItems);\n        const footer = invokeCallbackWithFallback(callbacks, 'footer', this, tooltipItems);\n        const afterFooter = invokeCallbackWithFallback(callbacks, 'afterFooter', this, tooltipItems);\n        let lines = [];\n        lines = pushOrConcat(lines, splitNewlines(beforeFooter));\n        lines = pushOrConcat(lines, splitNewlines(footer));\n        lines = pushOrConcat(lines, splitNewlines(afterFooter));\n        return lines;\n    }\n _createItems(options) {\n        const active = this._active;\n        const data = this.chart.data;\n        const labelColors = [];\n        const labelPointStyles = [];\n        const labelTextColors = [];\n        let tooltipItems = [];\n        let i, len;\n        for(i = 0, len = active.length; i < len; ++i){\n            tooltipItems.push(createTooltipItem(this.chart, active[i]));\n        }\n        if (options.filter) {\n            tooltipItems = tooltipItems.filter((element, index, array)=>options.filter(element, index, array, data));\n        }\n        if (options.itemSort) {\n            tooltipItems = tooltipItems.sort((a, b)=>options.itemSort(a, b, data));\n        }\n        each(tooltipItems, (context)=>{\n            const scoped = overrideCallbacks(options.callbacks, context);\n            labelColors.push(invokeCallbackWithFallback(scoped, 'labelColor', this, context));\n            labelPointStyles.push(invokeCallbackWithFallback(scoped, 'labelPointStyle', this, context));\n            labelTextColors.push(invokeCallbackWithFallback(scoped, 'labelTextColor', this, context));\n        });\n        this.labelColors = labelColors;\n        this.labelPointStyles = labelPointStyles;\n        this.labelTextColors = labelTextColors;\n        this.dataPoints = tooltipItems;\n        return tooltipItems;\n    }\n    update(changed, replay) {\n        const options = this.options.setContext(this.getContext());\n        const active = this._active;\n        let properties;\n        let tooltipItems = [];\n        if (!active.length) {\n            if (this.opacity !== 0) {\n                properties = {\n                    opacity: 0\n                };\n            }\n        } else {\n            const position = positioners[options.position].call(this, active, this._eventPosition);\n            tooltipItems = this._createItems(options);\n            this.title = this.getTitle(tooltipItems, options);\n            this.beforeBody = this.getBeforeBody(tooltipItems, options);\n            this.body = this.getBody(tooltipItems, options);\n            this.afterBody = this.getAfterBody(tooltipItems, options);\n            this.footer = this.getFooter(tooltipItems, options);\n            const size = this._size = getTooltipSize(this, options);\n            const positionAndSize = Object.assign({}, position, size);\n            const alignment = determineAlignment(this.chart, options, positionAndSize);\n            const backgroundPoint = getBackgroundPoint(options, positionAndSize, alignment, this.chart);\n            this.xAlign = alignment.xAlign;\n            this.yAlign = alignment.yAlign;\n            properties = {\n                opacity: 1,\n                x: backgroundPoint.x,\n                y: backgroundPoint.y,\n                width: size.width,\n                height: size.height,\n                caretX: position.x,\n                caretY: position.y\n            };\n        }\n        this._tooltipItems = tooltipItems;\n        this.$context = undefined;\n        if (properties) {\n            this._resolveAnimations().update(this, properties);\n        }\n        if (changed && options.external) {\n            options.external.call(this, {\n                chart: this.chart,\n                tooltip: this,\n                replay\n            });\n        }\n    }\n    drawCaret(tooltipPoint, ctx, size, options) {\n        const caretPosition = this.getCaretPosition(tooltipPoint, size, options);\n        ctx.lineTo(caretPosition.x1, caretPosition.y1);\n        ctx.lineTo(caretPosition.x2, caretPosition.y2);\n        ctx.lineTo(caretPosition.x3, caretPosition.y3);\n    }\n    getCaretPosition(tooltipPoint, size, options) {\n        const { xAlign , yAlign  } = this;\n        const { caretSize , cornerRadius  } = options;\n        const { topLeft , topRight , bottomLeft , bottomRight  } = toTRBLCorners(cornerRadius);\n        const { x: ptX , y: ptY  } = tooltipPoint;\n        const { width , height  } = size;\n        let x1, x2, x3, y1, y2, y3;\n        if (yAlign === 'center') {\n            y2 = ptY + height / 2;\n            if (xAlign === 'left') {\n                x1 = ptX;\n                x2 = x1 - caretSize;\n                y1 = y2 + caretSize;\n                y3 = y2 - caretSize;\n            } else {\n                x1 = ptX + width;\n                x2 = x1 + caretSize;\n                y1 = y2 - caretSize;\n                y3 = y2 + caretSize;\n            }\n            x3 = x1;\n        } else {\n            if (xAlign === 'left') {\n                x2 = ptX + Math.max(topLeft, bottomLeft) + caretSize;\n            } else if (xAlign === 'right') {\n                x2 = ptX + width - Math.max(topRight, bottomRight) - caretSize;\n            } else {\n                x2 = this.caretX;\n            }\n            if (yAlign === 'top') {\n                y1 = ptY;\n                y2 = y1 - caretSize;\n                x1 = x2 - caretSize;\n                x3 = x2 + caretSize;\n            } else {\n                y1 = ptY + height;\n                y2 = y1 + caretSize;\n                x1 = x2 + caretSize;\n                x3 = x2 - caretSize;\n            }\n            y3 = y1;\n        }\n        return {\n            x1,\n            x2,\n            x3,\n            y1,\n            y2,\n            y3\n        };\n    }\n    drawTitle(pt, ctx, options) {\n        const title = this.title;\n        const length = title.length;\n        let titleFont, titleSpacing, i;\n        if (length) {\n            const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n            pt.x = getAlignedX(this, options.titleAlign, options);\n            ctx.textAlign = rtlHelper.textAlign(options.titleAlign);\n            ctx.textBaseline = 'middle';\n            titleFont = toFont(options.titleFont);\n            titleSpacing = options.titleSpacing;\n            ctx.fillStyle = options.titleColor;\n            ctx.font = titleFont.string;\n            for(i = 0; i < length; ++i){\n                ctx.fillText(title[i], rtlHelper.x(pt.x), pt.y + titleFont.lineHeight / 2);\n                pt.y += titleFont.lineHeight + titleSpacing;\n                if (i + 1 === length) {\n                    pt.y += options.titleMarginBottom - titleSpacing;\n                }\n            }\n        }\n    }\n _drawColorBox(ctx, pt, i, rtlHelper, options) {\n        const labelColor = this.labelColors[i];\n        const labelPointStyle = this.labelPointStyles[i];\n        const { boxHeight , boxWidth  } = options;\n        const bodyFont = toFont(options.bodyFont);\n        const colorX = getAlignedX(this, 'left', options);\n        const rtlColorX = rtlHelper.x(colorX);\n        const yOffSet = boxHeight < bodyFont.lineHeight ? (bodyFont.lineHeight - boxHeight) / 2 : 0;\n        const colorY = pt.y + yOffSet;\n        if (options.usePointStyle) {\n            const drawOptions = {\n                radius: Math.min(boxWidth, boxHeight) / 2,\n                pointStyle: labelPointStyle.pointStyle,\n                rotation: labelPointStyle.rotation,\n                borderWidth: 1\n            };\n            const centerX = rtlHelper.leftForLtr(rtlColorX, boxWidth) + boxWidth / 2;\n            const centerY = colorY + boxHeight / 2;\n            ctx.strokeStyle = options.multiKeyBackground;\n            ctx.fillStyle = options.multiKeyBackground;\n            drawPoint(ctx, drawOptions, centerX, centerY);\n            ctx.strokeStyle = labelColor.borderColor;\n            ctx.fillStyle = labelColor.backgroundColor;\n            drawPoint(ctx, drawOptions, centerX, centerY);\n        } else {\n            ctx.lineWidth = isObject(labelColor.borderWidth) ? Math.max(...Object.values(labelColor.borderWidth)) : labelColor.borderWidth || 1;\n            ctx.strokeStyle = labelColor.borderColor;\n            ctx.setLineDash(labelColor.borderDash || []);\n            ctx.lineDashOffset = labelColor.borderDashOffset || 0;\n            const outerX = rtlHelper.leftForLtr(rtlColorX, boxWidth);\n            const innerX = rtlHelper.leftForLtr(rtlHelper.xPlus(rtlColorX, 1), boxWidth - 2);\n            const borderRadius = toTRBLCorners(labelColor.borderRadius);\n            if (Object.values(borderRadius).some((v)=>v !== 0)) {\n                ctx.beginPath();\n                ctx.fillStyle = options.multiKeyBackground;\n                addRoundedRectPath(ctx, {\n                    x: outerX,\n                    y: colorY,\n                    w: boxWidth,\n                    h: boxHeight,\n                    radius: borderRadius\n                });\n                ctx.fill();\n                ctx.stroke();\n                ctx.fillStyle = labelColor.backgroundColor;\n                ctx.beginPath();\n                addRoundedRectPath(ctx, {\n                    x: innerX,\n                    y: colorY + 1,\n                    w: boxWidth - 2,\n                    h: boxHeight - 2,\n                    radius: borderRadius\n                });\n                ctx.fill();\n            } else {\n                ctx.fillStyle = options.multiKeyBackground;\n                ctx.fillRect(outerX, colorY, boxWidth, boxHeight);\n                ctx.strokeRect(outerX, colorY, boxWidth, boxHeight);\n                ctx.fillStyle = labelColor.backgroundColor;\n                ctx.fillRect(innerX, colorY + 1, boxWidth - 2, boxHeight - 2);\n            }\n        }\n        ctx.fillStyle = this.labelTextColors[i];\n    }\n    drawBody(pt, ctx, options) {\n        const { body  } = this;\n        const { bodySpacing , bodyAlign , displayColors , boxHeight , boxWidth , boxPadding  } = options;\n        const bodyFont = toFont(options.bodyFont);\n        let bodyLineHeight = bodyFont.lineHeight;\n        let xLinePadding = 0;\n        const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n        const fillLineOfText = function(line) {\n            ctx.fillText(line, rtlHelper.x(pt.x + xLinePadding), pt.y + bodyLineHeight / 2);\n            pt.y += bodyLineHeight + bodySpacing;\n        };\n        const bodyAlignForCalculation = rtlHelper.textAlign(bodyAlign);\n        let bodyItem, textColor, lines, i, j, ilen, jlen;\n        ctx.textAlign = bodyAlign;\n        ctx.textBaseline = 'middle';\n        ctx.font = bodyFont.string;\n        pt.x = getAlignedX(this, bodyAlignForCalculation, options);\n        ctx.fillStyle = options.bodyColor;\n        each(this.beforeBody, fillLineOfText);\n        xLinePadding = displayColors && bodyAlignForCalculation !== 'right' ? bodyAlign === 'center' ? boxWidth / 2 + boxPadding : boxWidth + 2 + boxPadding : 0;\n        for(i = 0, ilen = body.length; i < ilen; ++i){\n            bodyItem = body[i];\n            textColor = this.labelTextColors[i];\n            ctx.fillStyle = textColor;\n            each(bodyItem.before, fillLineOfText);\n            lines = bodyItem.lines;\n            if (displayColors && lines.length) {\n                this._drawColorBox(ctx, pt, i, rtlHelper, options);\n                bodyLineHeight = Math.max(bodyFont.lineHeight, boxHeight);\n            }\n            for(j = 0, jlen = lines.length; j < jlen; ++j){\n                fillLineOfText(lines[j]);\n                bodyLineHeight = bodyFont.lineHeight;\n            }\n            each(bodyItem.after, fillLineOfText);\n        }\n        xLinePadding = 0;\n        bodyLineHeight = bodyFont.lineHeight;\n        each(this.afterBody, fillLineOfText);\n        pt.y -= bodySpacing;\n    }\n    drawFooter(pt, ctx, options) {\n        const footer = this.footer;\n        const length = footer.length;\n        let footerFont, i;\n        if (length) {\n            const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n            pt.x = getAlignedX(this, options.footerAlign, options);\n            pt.y += options.footerMarginTop;\n            ctx.textAlign = rtlHelper.textAlign(options.footerAlign);\n            ctx.textBaseline = 'middle';\n            footerFont = toFont(options.footerFont);\n            ctx.fillStyle = options.footerColor;\n            ctx.font = footerFont.string;\n            for(i = 0; i < length; ++i){\n                ctx.fillText(footer[i], rtlHelper.x(pt.x), pt.y + footerFont.lineHeight / 2);\n                pt.y += footerFont.lineHeight + options.footerSpacing;\n            }\n        }\n    }\n    drawBackground(pt, ctx, tooltipSize, options) {\n        const { xAlign , yAlign  } = this;\n        const { x , y  } = pt;\n        const { width , height  } = tooltipSize;\n        const { topLeft , topRight , bottomLeft , bottomRight  } = toTRBLCorners(options.cornerRadius);\n        ctx.fillStyle = options.backgroundColor;\n        ctx.strokeStyle = options.borderColor;\n        ctx.lineWidth = options.borderWidth;\n        ctx.beginPath();\n        ctx.moveTo(x + topLeft, y);\n        if (yAlign === 'top') {\n            this.drawCaret(pt, ctx, tooltipSize, options);\n        }\n        ctx.lineTo(x + width - topRight, y);\n        ctx.quadraticCurveTo(x + width, y, x + width, y + topRight);\n        if (yAlign === 'center' && xAlign === 'right') {\n            this.drawCaret(pt, ctx, tooltipSize, options);\n        }\n        ctx.lineTo(x + width, y + height - bottomRight);\n        ctx.quadraticCurveTo(x + width, y + height, x + width - bottomRight, y + height);\n        if (yAlign === 'bottom') {\n            this.drawCaret(pt, ctx, tooltipSize, options);\n        }\n        ctx.lineTo(x + bottomLeft, y + height);\n        ctx.quadraticCurveTo(x, y + height, x, y + height - bottomLeft);\n        if (yAlign === 'center' && xAlign === 'left') {\n            this.drawCaret(pt, ctx, tooltipSize, options);\n        }\n        ctx.lineTo(x, y + topLeft);\n        ctx.quadraticCurveTo(x, y, x + topLeft, y);\n        ctx.closePath();\n        ctx.fill();\n        if (options.borderWidth > 0) {\n            ctx.stroke();\n        }\n    }\n _updateAnimationTarget(options) {\n        const chart = this.chart;\n        const anims = this.$animations;\n        const animX = anims && anims.x;\n        const animY = anims && anims.y;\n        if (animX || animY) {\n            const position = positioners[options.position].call(this, this._active, this._eventPosition);\n            if (!position) {\n                return;\n            }\n            const size = this._size = getTooltipSize(this, options);\n            const positionAndSize = Object.assign({}, position, this._size);\n            const alignment = determineAlignment(chart, options, positionAndSize);\n            const point = getBackgroundPoint(options, positionAndSize, alignment, chart);\n            if (animX._to !== point.x || animY._to !== point.y) {\n                this.xAlign = alignment.xAlign;\n                this.yAlign = alignment.yAlign;\n                this.width = size.width;\n                this.height = size.height;\n                this.caretX = position.x;\n                this.caretY = position.y;\n                this._resolveAnimations().update(this, point);\n            }\n        }\n    }\n _willRender() {\n        return !!this.opacity;\n    }\n    draw(ctx) {\n        const options = this.options.setContext(this.getContext());\n        let opacity = this.opacity;\n        if (!opacity) {\n            return;\n        }\n        this._updateAnimationTarget(options);\n        const tooltipSize = {\n            width: this.width,\n            height: this.height\n        };\n        const pt = {\n            x: this.x,\n            y: this.y\n        };\n        opacity = Math.abs(opacity) < 1e-3 ? 0 : opacity;\n        const padding = toPadding(options.padding);\n        const hasTooltipContent = this.title.length || this.beforeBody.length || this.body.length || this.afterBody.length || this.footer.length;\n        if (options.enabled && hasTooltipContent) {\n            ctx.save();\n            ctx.globalAlpha = opacity;\n            this.drawBackground(pt, ctx, tooltipSize, options);\n            overrideTextDirection(ctx, options.textDirection);\n            pt.y += padding.top;\n            this.drawTitle(pt, ctx, options);\n            this.drawBody(pt, ctx, options);\n            this.drawFooter(pt, ctx, options);\n            restoreTextDirection(ctx, options.textDirection);\n            ctx.restore();\n        }\n    }\n getActiveElements() {\n        return this._active || [];\n    }\n setActiveElements(activeElements, eventPosition) {\n        const lastActive = this._active;\n        const active = activeElements.map(({ datasetIndex , index  })=>{\n            const meta = this.chart.getDatasetMeta(datasetIndex);\n            if (!meta) {\n                throw new Error('Cannot find a dataset at index ' + datasetIndex);\n            }\n            return {\n                datasetIndex,\n                element: meta.data[index],\n                index\n            };\n        });\n        const changed = !_elementsEqual(lastActive, active);\n        const positionChanged = this._positionChanged(active, eventPosition);\n        if (changed || positionChanged) {\n            this._active = active;\n            this._eventPosition = eventPosition;\n            this._ignoreReplayEvents = true;\n            this.update(true);\n        }\n    }\n handleEvent(e, replay, inChartArea = true) {\n        if (replay && this._ignoreReplayEvents) {\n            return false;\n        }\n        this._ignoreReplayEvents = false;\n        const options = this.options;\n        const lastActive = this._active || [];\n        const active = this._getActiveElements(e, lastActive, replay, inChartArea);\n        const positionChanged = this._positionChanged(active, e);\n        const changed = replay || !_elementsEqual(active, lastActive) || positionChanged;\n        if (changed) {\n            this._active = active;\n            if (options.enabled || options.external) {\n                this._eventPosition = {\n                    x: e.x,\n                    y: e.y\n                };\n                this.update(true, replay);\n            }\n        }\n        return changed;\n    }\n _getActiveElements(e, lastActive, replay, inChartArea) {\n        const options = this.options;\n        if (e.type === 'mouseout') {\n            return [];\n        }\n        if (!inChartArea) {\n            return lastActive;\n        }\n        const active = this.chart.getElementsAtEventForMode(e, options.mode, options, replay);\n        if (options.reverse) {\n            active.reverse();\n        }\n        return active;\n    }\n _positionChanged(active, e) {\n        const { caretX , caretY , options  } = this;\n        const position = positioners[options.position].call(this, active, e);\n        return position !== false && (caretX !== position.x || caretY !== position.y);\n    }\n}\nvar plugin_tooltip = {\n    id: 'tooltip',\n    _element: Tooltip,\n    positioners,\n    afterInit (chart, _args, options) {\n        if (options) {\n            chart.tooltip = new Tooltip({\n                chart,\n                options\n            });\n        }\n    },\n    beforeUpdate (chart, _args, options) {\n        if (chart.tooltip) {\n            chart.tooltip.initialize(options);\n        }\n    },\n    reset (chart, _args, options) {\n        if (chart.tooltip) {\n            chart.tooltip.initialize(options);\n        }\n    },\n    afterDraw (chart) {\n        const tooltip = chart.tooltip;\n        if (tooltip && tooltip._willRender()) {\n            const args = {\n                tooltip\n            };\n            if (chart.notifyPlugins('beforeTooltipDraw', {\n                ...args,\n                cancelable: true\n            }) === false) {\n                return;\n            }\n            tooltip.draw(chart.ctx);\n            chart.notifyPlugins('afterTooltipDraw', args);\n        }\n    },\n    afterEvent (chart, args) {\n        if (chart.tooltip) {\n            const useFinalPosition = args.replay;\n            if (chart.tooltip.handleEvent(args.event, useFinalPosition, args.inChartArea)) {\n                args.changed = true;\n            }\n        }\n    },\n    defaults: {\n        enabled: true,\n        external: null,\n        position: 'average',\n        backgroundColor: 'rgba(0,0,0,0.8)',\n        titleColor: '#fff',\n        titleFont: {\n            weight: 'bold'\n        },\n        titleSpacing: 2,\n        titleMarginBottom: 6,\n        titleAlign: 'left',\n        bodyColor: '#fff',\n        bodySpacing: 2,\n        bodyFont: {},\n        bodyAlign: 'left',\n        footerColor: '#fff',\n        footerSpacing: 2,\n        footerMarginTop: 6,\n        footerFont: {\n            weight: 'bold'\n        },\n        footerAlign: 'left',\n        padding: 6,\n        caretPadding: 2,\n        caretSize: 5,\n        cornerRadius: 6,\n        boxHeight: (ctx, opts)=>opts.bodyFont.size,\n        boxWidth: (ctx, opts)=>opts.bodyFont.size,\n        multiKeyBackground: '#fff',\n        displayColors: true,\n        boxPadding: 0,\n        borderColor: 'rgba(0,0,0,0)',\n        borderWidth: 0,\n        animation: {\n            duration: 400,\n            easing: 'easeOutQuart'\n        },\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'x',\n                    'y',\n                    'width',\n                    'height',\n                    'caretX',\n                    'caretY'\n                ]\n            },\n            opacity: {\n                easing: 'linear',\n                duration: 200\n            }\n        },\n        callbacks: defaultCallbacks\n    },\n    defaultRoutes: {\n        bodyFont: 'font',\n        footerFont: 'font',\n        titleFont: 'font'\n    },\n    descriptors: {\n        _scriptable: (name)=>name !== 'filter' && name !== 'itemSort' && name !== 'external',\n        _indexable: false,\n        callbacks: {\n            _scriptable: false,\n            _indexable: false\n        },\n        animation: {\n            _fallback: false\n        },\n        animations: {\n            _fallback: 'animation'\n        }\n    },\n    additionalOptionScopes: [\n        'interaction'\n    ]\n};\n\nvar plugins = /*#__PURE__*/Object.freeze({\n__proto__: null,\nColors: plugin_colors,\nDecimation: plugin_decimation,\nFiller: index,\nLegend: plugin_legend,\nSubTitle: plugin_subtitle,\nTitle: plugin_title,\nTooltip: plugin_tooltip\n});\n\nconst addIfString = (labels, raw, index, addedLabels)=>{\n    if (typeof raw === 'string') {\n        index = labels.push(raw) - 1;\n        addedLabels.unshift({\n            index,\n            label: raw\n        });\n    } else if (isNaN(raw)) {\n        index = null;\n    }\n    return index;\n};\nfunction findOrAddLabel(labels, raw, index, addedLabels) {\n    const first = labels.indexOf(raw);\n    if (first === -1) {\n        return addIfString(labels, raw, index, addedLabels);\n    }\n    const last = labels.lastIndexOf(raw);\n    return first !== last ? index : first;\n}\nconst validIndex = (index, max)=>index === null ? null : _limitValue(Math.round(index), 0, max);\nfunction _getLabelForValue(value) {\n    const labels = this.getLabels();\n    if (value >= 0 && value < labels.length) {\n        return labels[value];\n    }\n    return value;\n}\nclass CategoryScale extends Scale {\n    static id = 'category';\n static defaults = {\n        ticks: {\n            callback: _getLabelForValue\n        }\n    };\n    constructor(cfg){\n        super(cfg);\n         this._startValue = undefined;\n        this._valueRange = 0;\n        this._addedLabels = [];\n    }\n    init(scaleOptions) {\n        const added = this._addedLabels;\n        if (added.length) {\n            const labels = this.getLabels();\n            for (const { index , label  } of added){\n                if (labels[index] === label) {\n                    labels.splice(index, 1);\n                }\n            }\n            this._addedLabels = [];\n        }\n        super.init(scaleOptions);\n    }\n    parse(raw, index) {\n        if (isNullOrUndef(raw)) {\n            return null;\n        }\n        const labels = this.getLabels();\n        index = isFinite(index) && labels[index] === raw ? index : findOrAddLabel(labels, raw, valueOrDefault(index, raw), this._addedLabels);\n        return validIndex(index, labels.length - 1);\n    }\n    determineDataLimits() {\n        const { minDefined , maxDefined  } = this.getUserBounds();\n        let { min , max  } = this.getMinMax(true);\n        if (this.options.bounds === 'ticks') {\n            if (!minDefined) {\n                min = 0;\n            }\n            if (!maxDefined) {\n                max = this.getLabels().length - 1;\n            }\n        }\n        this.min = min;\n        this.max = max;\n    }\n    buildTicks() {\n        const min = this.min;\n        const max = this.max;\n        const offset = this.options.offset;\n        const ticks = [];\n        let labels = this.getLabels();\n        labels = min === 0 && max === labels.length - 1 ? labels : labels.slice(min, max + 1);\n        this._valueRange = Math.max(labels.length - (offset ? 0 : 1), 1);\n        this._startValue = this.min - (offset ? 0.5 : 0);\n        for(let value = min; value <= max; value++){\n            ticks.push({\n                value\n            });\n        }\n        return ticks;\n    }\n    getLabelForValue(value) {\n        return _getLabelForValue.call(this, value);\n    }\n configure() {\n        super.configure();\n        if (!this.isHorizontal()) {\n            this._reversePixels = !this._reversePixels;\n        }\n    }\n    getPixelForValue(value) {\n        if (typeof value !== 'number') {\n            value = this.parse(value);\n        }\n        return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n    }\n    getPixelForTick(index) {\n        const ticks = this.ticks;\n        if (index < 0 || index > ticks.length - 1) {\n            return null;\n        }\n        return this.getPixelForValue(ticks[index].value);\n    }\n    getValueForPixel(pixel) {\n        return Math.round(this._startValue + this.getDecimalForPixel(pixel) * this._valueRange);\n    }\n    getBasePixel() {\n        return this.bottom;\n    }\n}\n\nfunction generateTicks$1(generationOptions, dataRange) {\n    const ticks = [];\n    const MIN_SPACING = 1e-14;\n    const { bounds , step , min , max , precision , count , maxTicks , maxDigits , includeBounds  } = generationOptions;\n    const unit = step || 1;\n    const maxSpaces = maxTicks - 1;\n    const { min: rmin , max: rmax  } = dataRange;\n    const minDefined = !isNullOrUndef(min);\n    const maxDefined = !isNullOrUndef(max);\n    const countDefined = !isNullOrUndef(count);\n    const minSpacing = (rmax - rmin) / (maxDigits + 1);\n    let spacing = niceNum((rmax - rmin) / maxSpaces / unit) * unit;\n    let factor, niceMin, niceMax, numSpaces;\n    if (spacing < MIN_SPACING && !minDefined && !maxDefined) {\n        return [\n            {\n                value: rmin\n            },\n            {\n                value: rmax\n            }\n        ];\n    }\n    numSpaces = Math.ceil(rmax / spacing) - Math.floor(rmin / spacing);\n    if (numSpaces > maxSpaces) {\n        spacing = niceNum(numSpaces * spacing / maxSpaces / unit) * unit;\n    }\n    if (!isNullOrUndef(precision)) {\n        factor = Math.pow(10, precision);\n        spacing = Math.ceil(spacing * factor) / factor;\n    }\n    if (bounds === 'ticks') {\n        niceMin = Math.floor(rmin / spacing) * spacing;\n        niceMax = Math.ceil(rmax / spacing) * spacing;\n    } else {\n        niceMin = rmin;\n        niceMax = rmax;\n    }\n    if (minDefined && maxDefined && step && almostWhole((max - min) / step, spacing / 1000)) {\n        numSpaces = Math.round(Math.min((max - min) / spacing, maxTicks));\n        spacing = (max - min) / numSpaces;\n        niceMin = min;\n        niceMax = max;\n    } else if (countDefined) {\n        niceMin = minDefined ? min : niceMin;\n        niceMax = maxDefined ? max : niceMax;\n        numSpaces = count - 1;\n        spacing = (niceMax - niceMin) / numSpaces;\n    } else {\n        numSpaces = (niceMax - niceMin) / spacing;\n        if (almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\n            numSpaces = Math.round(numSpaces);\n        } else {\n            numSpaces = Math.ceil(numSpaces);\n        }\n    }\n    const decimalPlaces = Math.max(_decimalPlaces(spacing), _decimalPlaces(niceMin));\n    factor = Math.pow(10, isNullOrUndef(precision) ? decimalPlaces : precision);\n    niceMin = Math.round(niceMin * factor) / factor;\n    niceMax = Math.round(niceMax * factor) / factor;\n    let j = 0;\n    if (minDefined) {\n        if (includeBounds && niceMin !== min) {\n            ticks.push({\n                value: min\n            });\n            if (niceMin < min) {\n                j++;\n            }\n            if (almostEquals(Math.round((niceMin + j * spacing) * factor) / factor, min, relativeLabelSize(min, minSpacing, generationOptions))) {\n                j++;\n            }\n        } else if (niceMin < min) {\n            j++;\n        }\n    }\n    for(; j < numSpaces; ++j){\n        const tickValue = Math.round((niceMin + j * spacing) * factor) / factor;\n        if (maxDefined && tickValue > max) {\n            break;\n        }\n        ticks.push({\n            value: tickValue\n        });\n    }\n    if (maxDefined && includeBounds && niceMax !== max) {\n        if (ticks.length && almostEquals(ticks[ticks.length - 1].value, max, relativeLabelSize(max, minSpacing, generationOptions))) {\n            ticks[ticks.length - 1].value = max;\n        } else {\n            ticks.push({\n                value: max\n            });\n        }\n    } else if (!maxDefined || niceMax === max) {\n        ticks.push({\n            value: niceMax\n        });\n    }\n    return ticks;\n}\nfunction relativeLabelSize(value, minSpacing, { horizontal , minRotation  }) {\n    const rad = toRadians(minRotation);\n    const ratio = (horizontal ? Math.sin(rad) : Math.cos(rad)) || 0.001;\n    const length = 0.75 * minSpacing * ('' + value).length;\n    return Math.min(minSpacing / ratio, length);\n}\nclass LinearScaleBase extends Scale {\n    constructor(cfg){\n        super(cfg);\n         this.start = undefined;\n         this.end = undefined;\n         this._startValue = undefined;\n         this._endValue = undefined;\n        this._valueRange = 0;\n    }\n    parse(raw, index) {\n        if (isNullOrUndef(raw)) {\n            return null;\n        }\n        if ((typeof raw === 'number' || raw instanceof Number) && !isFinite(+raw)) {\n            return null;\n        }\n        return +raw;\n    }\n    handleTickRangeOptions() {\n        const { beginAtZero  } = this.options;\n        const { minDefined , maxDefined  } = this.getUserBounds();\n        let { min , max  } = this;\n        const setMin = (v)=>min = minDefined ? min : v;\n        const setMax = (v)=>max = maxDefined ? max : v;\n        if (beginAtZero) {\n            const minSign = sign(min);\n            const maxSign = sign(max);\n            if (minSign < 0 && maxSign < 0) {\n                setMax(0);\n            } else if (minSign > 0 && maxSign > 0) {\n                setMin(0);\n            }\n        }\n        if (min === max) {\n            let offset = max === 0 ? 1 : Math.abs(max * 0.05);\n            setMax(max + offset);\n            if (!beginAtZero) {\n                setMin(min - offset);\n            }\n        }\n        this.min = min;\n        this.max = max;\n    }\n    getTickLimit() {\n        const tickOpts = this.options.ticks;\n        let { maxTicksLimit , stepSize  } = tickOpts;\n        let maxTicks;\n        if (stepSize) {\n            maxTicks = Math.ceil(this.max / stepSize) - Math.floor(this.min / stepSize) + 1;\n            if (maxTicks > 1000) {\n                console.warn(`scales.${this.id}.ticks.stepSize: ${stepSize} would result generating up to ${maxTicks} ticks. Limiting to 1000.`);\n                maxTicks = 1000;\n            }\n        } else {\n            maxTicks = this.computeTickLimit();\n            maxTicksLimit = maxTicksLimit || 11;\n        }\n        if (maxTicksLimit) {\n            maxTicks = Math.min(maxTicksLimit, maxTicks);\n        }\n        return maxTicks;\n    }\n computeTickLimit() {\n        return Number.POSITIVE_INFINITY;\n    }\n    buildTicks() {\n        const opts = this.options;\n        const tickOpts = opts.ticks;\n        let maxTicks = this.getTickLimit();\n        maxTicks = Math.max(2, maxTicks);\n        const numericGeneratorOptions = {\n            maxTicks,\n            bounds: opts.bounds,\n            min: opts.min,\n            max: opts.max,\n            precision: tickOpts.precision,\n            step: tickOpts.stepSize,\n            count: tickOpts.count,\n            maxDigits: this._maxDigits(),\n            horizontal: this.isHorizontal(),\n            minRotation: tickOpts.minRotation || 0,\n            includeBounds: tickOpts.includeBounds !== false\n        };\n        const dataRange = this._range || this;\n        const ticks = generateTicks$1(numericGeneratorOptions, dataRange);\n        if (opts.bounds === 'ticks') {\n            _setMinAndMaxByKey(ticks, this, 'value');\n        }\n        if (opts.reverse) {\n            ticks.reverse();\n            this.start = this.max;\n            this.end = this.min;\n        } else {\n            this.start = this.min;\n            this.end = this.max;\n        }\n        return ticks;\n    }\n configure() {\n        const ticks = this.ticks;\n        let start = this.min;\n        let end = this.max;\n        super.configure();\n        if (this.options.offset && ticks.length) {\n            const offset = (end - start) / Math.max(ticks.length - 1, 1) / 2;\n            start -= offset;\n            end += offset;\n        }\n        this._startValue = start;\n        this._endValue = end;\n        this._valueRange = end - start;\n    }\n    getLabelForValue(value) {\n        return formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n    }\n}\n\nclass LinearScale extends LinearScaleBase {\n    static id = 'linear';\n static defaults = {\n        ticks: {\n            callback: Ticks.formatters.numeric\n        }\n    };\n    determineDataLimits() {\n        const { min , max  } = this.getMinMax(true);\n        this.min = isNumberFinite(min) ? min : 0;\n        this.max = isNumberFinite(max) ? max : 1;\n        this.handleTickRangeOptions();\n    }\n computeTickLimit() {\n        const horizontal = this.isHorizontal();\n        const length = horizontal ? this.width : this.height;\n        const minRotation = toRadians(this.options.ticks.minRotation);\n        const ratio = (horizontal ? Math.sin(minRotation) : Math.cos(minRotation)) || 0.001;\n        const tickFont = this._resolveTickFontOptions(0);\n        return Math.ceil(length / Math.min(40, tickFont.lineHeight / ratio));\n    }\n    getPixelForValue(value) {\n        return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n    }\n    getValueForPixel(pixel) {\n        return this._startValue + this.getDecimalForPixel(pixel) * this._valueRange;\n    }\n}\n\nconst log10Floor = (v)=>Math.floor(log10(v));\nconst changeExponent = (v, m)=>Math.pow(10, log10Floor(v) + m);\nfunction isMajor(tickVal) {\n    const remain = tickVal / Math.pow(10, log10Floor(tickVal));\n    return remain === 1;\n}\nfunction steps(min, max, rangeExp) {\n    const rangeStep = Math.pow(10, rangeExp);\n    const start = Math.floor(min / rangeStep);\n    const end = Math.ceil(max / rangeStep);\n    return end - start;\n}\nfunction startExp(min, max) {\n    const range = max - min;\n    let rangeExp = log10Floor(range);\n    while(steps(min, max, rangeExp) > 10){\n        rangeExp++;\n    }\n    while(steps(min, max, rangeExp) < 10){\n        rangeExp--;\n    }\n    return Math.min(rangeExp, log10Floor(min));\n}\n function generateTicks(generationOptions, { min , max  }) {\n    min = finiteOrDefault(generationOptions.min, min);\n    const ticks = [];\n    const minExp = log10Floor(min);\n    let exp = startExp(min, max);\n    let precision = exp < 0 ? Math.pow(10, Math.abs(exp)) : 1;\n    const stepSize = Math.pow(10, exp);\n    const base = minExp > exp ? Math.pow(10, minExp) : 0;\n    const start = Math.round((min - base) * precision) / precision;\n    const offset = Math.floor((min - base) / stepSize / 10) * stepSize * 10;\n    let significand = Math.floor((start - offset) / Math.pow(10, exp));\n    let value = finiteOrDefault(generationOptions.min, Math.round((base + offset + significand * Math.pow(10, exp)) * precision) / precision);\n    while(value < max){\n        ticks.push({\n            value,\n            major: isMajor(value),\n            significand\n        });\n        if (significand >= 10) {\n            significand = significand < 15 ? 15 : 20;\n        } else {\n            significand++;\n        }\n        if (significand >= 20) {\n            exp++;\n            significand = 2;\n            precision = exp >= 0 ? 1 : precision;\n        }\n        value = Math.round((base + offset + significand * Math.pow(10, exp)) * precision) / precision;\n    }\n    const lastTick = finiteOrDefault(generationOptions.max, value);\n    ticks.push({\n        value: lastTick,\n        major: isMajor(lastTick),\n        significand\n    });\n    return ticks;\n}\nclass LogarithmicScale extends Scale {\n    static id = 'logarithmic';\n static defaults = {\n        ticks: {\n            callback: Ticks.formatters.logarithmic,\n            major: {\n                enabled: true\n            }\n        }\n    };\n    constructor(cfg){\n        super(cfg);\n         this.start = undefined;\n         this.end = undefined;\n         this._startValue = undefined;\n        this._valueRange = 0;\n    }\n    parse(raw, index) {\n        const value = LinearScaleBase.prototype.parse.apply(this, [\n            raw,\n            index\n        ]);\n        if (value === 0) {\n            this._zero = true;\n            return undefined;\n        }\n        return isNumberFinite(value) && value > 0 ? value : null;\n    }\n    determineDataLimits() {\n        const { min , max  } = this.getMinMax(true);\n        this.min = isNumberFinite(min) ? Math.max(0, min) : null;\n        this.max = isNumberFinite(max) ? Math.max(0, max) : null;\n        if (this.options.beginAtZero) {\n            this._zero = true;\n        }\n        if (this._zero && this.min !== this._suggestedMin && !isNumberFinite(this._userMin)) {\n            this.min = min === changeExponent(this.min, 0) ? changeExponent(this.min, -1) : changeExponent(this.min, 0);\n        }\n        this.handleTickRangeOptions();\n    }\n    handleTickRangeOptions() {\n        const { minDefined , maxDefined  } = this.getUserBounds();\n        let min = this.min;\n        let max = this.max;\n        const setMin = (v)=>min = minDefined ? min : v;\n        const setMax = (v)=>max = maxDefined ? max : v;\n        if (min === max) {\n            if (min <= 0) {\n                setMin(1);\n                setMax(10);\n            } else {\n                setMin(changeExponent(min, -1));\n                setMax(changeExponent(max, +1));\n            }\n        }\n        if (min <= 0) {\n            setMin(changeExponent(max, -1));\n        }\n        if (max <= 0) {\n            setMax(changeExponent(min, +1));\n        }\n        this.min = min;\n        this.max = max;\n    }\n    buildTicks() {\n        const opts = this.options;\n        const generationOptions = {\n            min: this._userMin,\n            max: this._userMax\n        };\n        const ticks = generateTicks(generationOptions, this);\n        if (opts.bounds === 'ticks') {\n            _setMinAndMaxByKey(ticks, this, 'value');\n        }\n        if (opts.reverse) {\n            ticks.reverse();\n            this.start = this.max;\n            this.end = this.min;\n        } else {\n            this.start = this.min;\n            this.end = this.max;\n        }\n        return ticks;\n    }\n getLabelForValue(value) {\n        return value === undefined ? '0' : formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n    }\n configure() {\n        const start = this.min;\n        super.configure();\n        this._startValue = log10(start);\n        this._valueRange = log10(this.max) - log10(start);\n    }\n    getPixelForValue(value) {\n        if (value === undefined || value === 0) {\n            value = this.min;\n        }\n        if (value === null || isNaN(value)) {\n            return NaN;\n        }\n        return this.getPixelForDecimal(value === this.min ? 0 : (log10(value) - this._startValue) / this._valueRange);\n    }\n    getValueForPixel(pixel) {\n        const decimal = this.getDecimalForPixel(pixel);\n        return Math.pow(10, this._startValue + decimal * this._valueRange);\n    }\n}\n\nfunction getTickBackdropHeight(opts) {\n    const tickOpts = opts.ticks;\n    if (tickOpts.display && opts.display) {\n        const padding = toPadding(tickOpts.backdropPadding);\n        return valueOrDefault(tickOpts.font && tickOpts.font.size, defaults.font.size) + padding.height;\n    }\n    return 0;\n}\nfunction measureLabelSize(ctx, font, label) {\n    label = isArray(label) ? label : [\n        label\n    ];\n    return {\n        w: _longestText(ctx, font.string, label),\n        h: label.length * font.lineHeight\n    };\n}\nfunction determineLimits(angle, pos, size, min, max) {\n    if (angle === min || angle === max) {\n        return {\n            start: pos - size / 2,\n            end: pos + size / 2\n        };\n    } else if (angle < min || angle > max) {\n        return {\n            start: pos - size,\n            end: pos\n        };\n    }\n    return {\n        start: pos,\n        end: pos + size\n    };\n}\n function fitWithPointLabels(scale) {\n    const orig = {\n        l: scale.left + scale._padding.left,\n        r: scale.right - scale._padding.right,\n        t: scale.top + scale._padding.top,\n        b: scale.bottom - scale._padding.bottom\n    };\n    const limits = Object.assign({}, orig);\n    const labelSizes = [];\n    const padding = [];\n    const valueCount = scale._pointLabels.length;\n    const pointLabelOpts = scale.options.pointLabels;\n    const additionalAngle = pointLabelOpts.centerPointLabels ? PI / valueCount : 0;\n    for(let i = 0; i < valueCount; i++){\n        const opts = pointLabelOpts.setContext(scale.getPointLabelContext(i));\n        padding[i] = opts.padding;\n        const pointPosition = scale.getPointPosition(i, scale.drawingArea + padding[i], additionalAngle);\n        const plFont = toFont(opts.font);\n        const textSize = measureLabelSize(scale.ctx, plFont, scale._pointLabels[i]);\n        labelSizes[i] = textSize;\n        const angleRadians = _normalizeAngle(scale.getIndexAngle(i) + additionalAngle);\n        const angle = Math.round(toDegrees(angleRadians));\n        const hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);\n        const vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);\n        updateLimits(limits, orig, angleRadians, hLimits, vLimits);\n    }\n    scale.setCenterPoint(orig.l - limits.l, limits.r - orig.r, orig.t - limits.t, limits.b - orig.b);\n    scale._pointLabelItems = buildPointLabelItems(scale, labelSizes, padding);\n}\nfunction updateLimits(limits, orig, angle, hLimits, vLimits) {\n    const sin = Math.abs(Math.sin(angle));\n    const cos = Math.abs(Math.cos(angle));\n    let x = 0;\n    let y = 0;\n    if (hLimits.start < orig.l) {\n        x = (orig.l - hLimits.start) / sin;\n        limits.l = Math.min(limits.l, orig.l - x);\n    } else if (hLimits.end > orig.r) {\n        x = (hLimits.end - orig.r) / sin;\n        limits.r = Math.max(limits.r, orig.r + x);\n    }\n    if (vLimits.start < orig.t) {\n        y = (orig.t - vLimits.start) / cos;\n        limits.t = Math.min(limits.t, orig.t - y);\n    } else if (vLimits.end > orig.b) {\n        y = (vLimits.end - orig.b) / cos;\n        limits.b = Math.max(limits.b, orig.b + y);\n    }\n}\nfunction createPointLabelItem(scale, index, itemOpts) {\n    const outerDistance = scale.drawingArea;\n    const { extra , additionalAngle , padding , size  } = itemOpts;\n    const pointLabelPosition = scale.getPointPosition(index, outerDistance + extra + padding, additionalAngle);\n    const angle = Math.round(toDegrees(_normalizeAngle(pointLabelPosition.angle + HALF_PI)));\n    const y = yForAngle(pointLabelPosition.y, size.h, angle);\n    const textAlign = getTextAlignForAngle(angle);\n    const left = leftForTextAlign(pointLabelPosition.x, size.w, textAlign);\n    return {\n        visible: true,\n        x: pointLabelPosition.x,\n        y,\n        textAlign,\n        left,\n        top: y,\n        right: left + size.w,\n        bottom: y + size.h\n    };\n}\nfunction isNotOverlapped(item, area) {\n    if (!area) {\n        return true;\n    }\n    const { left , top , right , bottom  } = item;\n    const apexesInArea = _isPointInArea({\n        x: left,\n        y: top\n    }, area) || _isPointInArea({\n        x: left,\n        y: bottom\n    }, area) || _isPointInArea({\n        x: right,\n        y: top\n    }, area) || _isPointInArea({\n        x: right,\n        y: bottom\n    }, area);\n    return !apexesInArea;\n}\nfunction buildPointLabelItems(scale, labelSizes, padding) {\n    const items = [];\n    const valueCount = scale._pointLabels.length;\n    const opts = scale.options;\n    const { centerPointLabels , display  } = opts.pointLabels;\n    const itemOpts = {\n        extra: getTickBackdropHeight(opts) / 2,\n        additionalAngle: centerPointLabels ? PI / valueCount : 0\n    };\n    let area;\n    for(let i = 0; i < valueCount; i++){\n        itemOpts.padding = padding[i];\n        itemOpts.size = labelSizes[i];\n        const item = createPointLabelItem(scale, i, itemOpts);\n        items.push(item);\n        if (display === 'auto') {\n            item.visible = isNotOverlapped(item, area);\n            if (item.visible) {\n                area = item;\n            }\n        }\n    }\n    return items;\n}\nfunction getTextAlignForAngle(angle) {\n    if (angle === 0 || angle === 180) {\n        return 'center';\n    } else if (angle < 180) {\n        return 'left';\n    }\n    return 'right';\n}\nfunction leftForTextAlign(x, w, align) {\n    if (align === 'right') {\n        x -= w;\n    } else if (align === 'center') {\n        x -= w / 2;\n    }\n    return x;\n}\nfunction yForAngle(y, h, angle) {\n    if (angle === 90 || angle === 270) {\n        y -= h / 2;\n    } else if (angle > 270 || angle < 90) {\n        y -= h;\n    }\n    return y;\n}\nfunction drawPointLabelBox(ctx, opts, item) {\n    const { left , top , right , bottom  } = item;\n    const { backdropColor  } = opts;\n    if (!isNullOrUndef(backdropColor)) {\n        const borderRadius = toTRBLCorners(opts.borderRadius);\n        const padding = toPadding(opts.backdropPadding);\n        ctx.fillStyle = backdropColor;\n        const backdropLeft = left - padding.left;\n        const backdropTop = top - padding.top;\n        const backdropWidth = right - left + padding.width;\n        const backdropHeight = bottom - top + padding.height;\n        if (Object.values(borderRadius).some((v)=>v !== 0)) {\n            ctx.beginPath();\n            addRoundedRectPath(ctx, {\n                x: backdropLeft,\n                y: backdropTop,\n                w: backdropWidth,\n                h: backdropHeight,\n                radius: borderRadius\n            });\n            ctx.fill();\n        } else {\n            ctx.fillRect(backdropLeft, backdropTop, backdropWidth, backdropHeight);\n        }\n    }\n}\nfunction drawPointLabels(scale, labelCount) {\n    const { ctx , options: { pointLabels  }  } = scale;\n    for(let i = labelCount - 1; i >= 0; i--){\n        const item = scale._pointLabelItems[i];\n        if (!item.visible) {\n            continue;\n        }\n        const optsAtIndex = pointLabels.setContext(scale.getPointLabelContext(i));\n        drawPointLabelBox(ctx, optsAtIndex, item);\n        const plFont = toFont(optsAtIndex.font);\n        const { x , y , textAlign  } = item;\n        renderText(ctx, scale._pointLabels[i], x, y + plFont.lineHeight / 2, plFont, {\n            color: optsAtIndex.color,\n            textAlign: textAlign,\n            textBaseline: 'middle'\n        });\n    }\n}\nfunction pathRadiusLine(scale, radius, circular, labelCount) {\n    const { ctx  } = scale;\n    if (circular) {\n        ctx.arc(scale.xCenter, scale.yCenter, radius, 0, TAU);\n    } else {\n        let pointPosition = scale.getPointPosition(0, radius);\n        ctx.moveTo(pointPosition.x, pointPosition.y);\n        for(let i = 1; i < labelCount; i++){\n            pointPosition = scale.getPointPosition(i, radius);\n            ctx.lineTo(pointPosition.x, pointPosition.y);\n        }\n    }\n}\nfunction drawRadiusLine(scale, gridLineOpts, radius, labelCount, borderOpts) {\n    const ctx = scale.ctx;\n    const circular = gridLineOpts.circular;\n    const { color , lineWidth  } = gridLineOpts;\n    if (!circular && !labelCount || !color || !lineWidth || radius < 0) {\n        return;\n    }\n    ctx.save();\n    ctx.strokeStyle = color;\n    ctx.lineWidth = lineWidth;\n    ctx.setLineDash(borderOpts.dash);\n    ctx.lineDashOffset = borderOpts.dashOffset;\n    ctx.beginPath();\n    pathRadiusLine(scale, radius, circular, labelCount);\n    ctx.closePath();\n    ctx.stroke();\n    ctx.restore();\n}\nfunction createPointLabelContext(parent, index, label) {\n    return createContext(parent, {\n        label,\n        index,\n        type: 'pointLabel'\n    });\n}\nclass RadialLinearScale extends LinearScaleBase {\n    static id = 'radialLinear';\n static defaults = {\n        display: true,\n        animate: true,\n        position: 'chartArea',\n        angleLines: {\n            display: true,\n            lineWidth: 1,\n            borderDash: [],\n            borderDashOffset: 0.0\n        },\n        grid: {\n            circular: false\n        },\n        startAngle: 0,\n        ticks: {\n            showLabelBackdrop: true,\n            callback: Ticks.formatters.numeric\n        },\n        pointLabels: {\n            backdropColor: undefined,\n            backdropPadding: 2,\n            display: true,\n            font: {\n                size: 10\n            },\n            callback (label) {\n                return label;\n            },\n            padding: 5,\n            centerPointLabels: false\n        }\n    };\n    static defaultRoutes = {\n        'angleLines.color': 'borderColor',\n        'pointLabels.color': 'color',\n        'ticks.color': 'color'\n    };\n    static descriptors = {\n        angleLines: {\n            _fallback: 'grid'\n        }\n    };\n    constructor(cfg){\n        super(cfg);\n         this.xCenter = undefined;\n         this.yCenter = undefined;\n         this.drawingArea = undefined;\n         this._pointLabels = [];\n        this._pointLabelItems = [];\n    }\n    setDimensions() {\n        const padding = this._padding = toPadding(getTickBackdropHeight(this.options) / 2);\n        const w = this.width = this.maxWidth - padding.width;\n        const h = this.height = this.maxHeight - padding.height;\n        this.xCenter = Math.floor(this.left + w / 2 + padding.left);\n        this.yCenter = Math.floor(this.top + h / 2 + padding.top);\n        this.drawingArea = Math.floor(Math.min(w, h) / 2);\n    }\n    determineDataLimits() {\n        const { min , max  } = this.getMinMax(false);\n        this.min = isNumberFinite(min) && !isNaN(min) ? min : 0;\n        this.max = isNumberFinite(max) && !isNaN(max) ? max : 0;\n        this.handleTickRangeOptions();\n    }\n computeTickLimit() {\n        return Math.ceil(this.drawingArea / getTickBackdropHeight(this.options));\n    }\n    generateTickLabels(ticks) {\n        LinearScaleBase.prototype.generateTickLabels.call(this, ticks);\n        this._pointLabels = this.getLabels().map((value, index)=>{\n            const label = callback(this.options.pointLabels.callback, [\n                value,\n                index\n            ], this);\n            return label || label === 0 ? label : '';\n        }).filter((v, i)=>this.chart.getDataVisibility(i));\n    }\n    fit() {\n        const opts = this.options;\n        if (opts.display && opts.pointLabels.display) {\n            fitWithPointLabels(this);\n        } else {\n            this.setCenterPoint(0, 0, 0, 0);\n        }\n    }\n    setCenterPoint(leftMovement, rightMovement, topMovement, bottomMovement) {\n        this.xCenter += Math.floor((leftMovement - rightMovement) / 2);\n        this.yCenter += Math.floor((topMovement - bottomMovement) / 2);\n        this.drawingArea -= Math.min(this.drawingArea / 2, Math.max(leftMovement, rightMovement, topMovement, bottomMovement));\n    }\n    getIndexAngle(index) {\n        const angleMultiplier = TAU / (this._pointLabels.length || 1);\n        const startAngle = this.options.startAngle || 0;\n        return _normalizeAngle(index * angleMultiplier + toRadians(startAngle));\n    }\n    getDistanceFromCenterForValue(value) {\n        if (isNullOrUndef(value)) {\n            return NaN;\n        }\n        const scalingFactor = this.drawingArea / (this.max - this.min);\n        if (this.options.reverse) {\n            return (this.max - value) * scalingFactor;\n        }\n        return (value - this.min) * scalingFactor;\n    }\n    getValueForDistanceFromCenter(distance) {\n        if (isNullOrUndef(distance)) {\n            return NaN;\n        }\n        const scaledDistance = distance / (this.drawingArea / (this.max - this.min));\n        return this.options.reverse ? this.max - scaledDistance : this.min + scaledDistance;\n    }\n    getPointLabelContext(index) {\n        const pointLabels = this._pointLabels || [];\n        if (index >= 0 && index < pointLabels.length) {\n            const pointLabel = pointLabels[index];\n            return createPointLabelContext(this.getContext(), index, pointLabel);\n        }\n    }\n    getPointPosition(index, distanceFromCenter, additionalAngle = 0) {\n        const angle = this.getIndexAngle(index) - HALF_PI + additionalAngle;\n        return {\n            x: Math.cos(angle) * distanceFromCenter + this.xCenter,\n            y: Math.sin(angle) * distanceFromCenter + this.yCenter,\n            angle\n        };\n    }\n    getPointPositionForValue(index, value) {\n        return this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\n    }\n    getBasePosition(index) {\n        return this.getPointPositionForValue(index || 0, this.getBaseValue());\n    }\n    getPointLabelPosition(index) {\n        const { left , top , right , bottom  } = this._pointLabelItems[index];\n        return {\n            left,\n            top,\n            right,\n            bottom\n        };\n    }\n drawBackground() {\n        const { backgroundColor , grid: { circular  }  } = this.options;\n        if (backgroundColor) {\n            const ctx = this.ctx;\n            ctx.save();\n            ctx.beginPath();\n            pathRadiusLine(this, this.getDistanceFromCenterForValue(this._endValue), circular, this._pointLabels.length);\n            ctx.closePath();\n            ctx.fillStyle = backgroundColor;\n            ctx.fill();\n            ctx.restore();\n        }\n    }\n drawGrid() {\n        const ctx = this.ctx;\n        const opts = this.options;\n        const { angleLines , grid , border  } = opts;\n        const labelCount = this._pointLabels.length;\n        let i, offset, position;\n        if (opts.pointLabels.display) {\n            drawPointLabels(this, labelCount);\n        }\n        if (grid.display) {\n            this.ticks.forEach((tick, index)=>{\n                if (index !== 0) {\n                    offset = this.getDistanceFromCenterForValue(tick.value);\n                    const context = this.getContext(index);\n                    const optsAtIndex = grid.setContext(context);\n                    const optsAtIndexBorder = border.setContext(context);\n                    drawRadiusLine(this, optsAtIndex, offset, labelCount, optsAtIndexBorder);\n                }\n            });\n        }\n        if (angleLines.display) {\n            ctx.save();\n            for(i = labelCount - 1; i >= 0; i--){\n                const optsAtIndex = angleLines.setContext(this.getPointLabelContext(i));\n                const { color , lineWidth  } = optsAtIndex;\n                if (!lineWidth || !color) {\n                    continue;\n                }\n                ctx.lineWidth = lineWidth;\n                ctx.strokeStyle = color;\n                ctx.setLineDash(optsAtIndex.borderDash);\n                ctx.lineDashOffset = optsAtIndex.borderDashOffset;\n                offset = this.getDistanceFromCenterForValue(opts.ticks.reverse ? this.min : this.max);\n                position = this.getPointPosition(i, offset);\n                ctx.beginPath();\n                ctx.moveTo(this.xCenter, this.yCenter);\n                ctx.lineTo(position.x, position.y);\n                ctx.stroke();\n            }\n            ctx.restore();\n        }\n    }\n drawBorder() {}\n drawLabels() {\n        const ctx = this.ctx;\n        const opts = this.options;\n        const tickOpts = opts.ticks;\n        if (!tickOpts.display) {\n            return;\n        }\n        const startAngle = this.getIndexAngle(0);\n        let offset, width;\n        ctx.save();\n        ctx.translate(this.xCenter, this.yCenter);\n        ctx.rotate(startAngle);\n        ctx.textAlign = 'center';\n        ctx.textBaseline = 'middle';\n        this.ticks.forEach((tick, index)=>{\n            if (index === 0 && !opts.reverse) {\n                return;\n            }\n            const optsAtIndex = tickOpts.setContext(this.getContext(index));\n            const tickFont = toFont(optsAtIndex.font);\n            offset = this.getDistanceFromCenterForValue(this.ticks[index].value);\n            if (optsAtIndex.showLabelBackdrop) {\n                ctx.font = tickFont.string;\n                width = ctx.measureText(tick.label).width;\n                ctx.fillStyle = optsAtIndex.backdropColor;\n                const padding = toPadding(optsAtIndex.backdropPadding);\n                ctx.fillRect(-width / 2 - padding.left, -offset - tickFont.size / 2 - padding.top, width + padding.width, tickFont.size + padding.height);\n            }\n            renderText(ctx, tick.label, 0, -offset, tickFont, {\n                color: optsAtIndex.color\n            });\n        });\n        ctx.restore();\n    }\n drawTitle() {}\n}\n\nconst INTERVALS = {\n    millisecond: {\n        common: true,\n        size: 1,\n        steps: 1000\n    },\n    second: {\n        common: true,\n        size: 1000,\n        steps: 60\n    },\n    minute: {\n        common: true,\n        size: 60000,\n        steps: 60\n    },\n    hour: {\n        common: true,\n        size: 3600000,\n        steps: 24\n    },\n    day: {\n        common: true,\n        size: 86400000,\n        steps: 30\n    },\n    week: {\n        common: false,\n        size: 604800000,\n        steps: 4\n    },\n    month: {\n        common: true,\n        size: 2.628e9,\n        steps: 12\n    },\n    quarter: {\n        common: false,\n        size: 7.884e9,\n        steps: 4\n    },\n    year: {\n        common: true,\n        size: 3.154e10\n    }\n};\n const UNITS =  /* #__PURE__ */ Object.keys(INTERVALS);\n function sorter(a, b) {\n    return a - b;\n}\n function parse(scale, input) {\n    if (isNullOrUndef(input)) {\n        return null;\n    }\n    const adapter = scale._adapter;\n    const { parser , round , isoWeekday  } = scale._parseOpts;\n    let value = input;\n    if (typeof parser === 'function') {\n        value = parser(value);\n    }\n    if (!isNumberFinite(value)) {\n        value = typeof parser === 'string' ? adapter.parse(value,  parser) : adapter.parse(value);\n    }\n    if (value === null) {\n        return null;\n    }\n    if (round) {\n        value = round === 'week' && (isNumber(isoWeekday) || isoWeekday === true) ? adapter.startOf(value, 'isoWeek', isoWeekday) : adapter.startOf(value, round);\n    }\n    return +value;\n}\n function determineUnitForAutoTicks(minUnit, min, max, capacity) {\n    const ilen = UNITS.length;\n    for(let i = UNITS.indexOf(minUnit); i < ilen - 1; ++i){\n        const interval = INTERVALS[UNITS[i]];\n        const factor = interval.steps ? interval.steps : Number.MAX_SAFE_INTEGER;\n        if (interval.common && Math.ceil((max - min) / (factor * interval.size)) <= capacity) {\n            return UNITS[i];\n        }\n    }\n    return UNITS[ilen - 1];\n}\n function determineUnitForFormatting(scale, numTicks, minUnit, min, max) {\n    for(let i = UNITS.length - 1; i >= UNITS.indexOf(minUnit); i--){\n        const unit = UNITS[i];\n        if (INTERVALS[unit].common && scale._adapter.diff(max, min, unit) >= numTicks - 1) {\n            return unit;\n        }\n    }\n    return UNITS[minUnit ? UNITS.indexOf(minUnit) : 0];\n}\n function determineMajorUnit(unit) {\n    for(let i = UNITS.indexOf(unit) + 1, ilen = UNITS.length; i < ilen; ++i){\n        if (INTERVALS[UNITS[i]].common) {\n            return UNITS[i];\n        }\n    }\n}\n function addTick(ticks, time, timestamps) {\n    if (!timestamps) {\n        ticks[time] = true;\n    } else if (timestamps.length) {\n        const { lo , hi  } = _lookup(timestamps, time);\n        const timestamp = timestamps[lo] >= time ? timestamps[lo] : timestamps[hi];\n        ticks[timestamp] = true;\n    }\n}\n function setMajorTicks(scale, ticks, map, majorUnit) {\n    const adapter = scale._adapter;\n    const first = +adapter.startOf(ticks[0].value, majorUnit);\n    const last = ticks[ticks.length - 1].value;\n    let major, index;\n    for(major = first; major <= last; major = +adapter.add(major, 1, majorUnit)){\n        index = map[major];\n        if (index >= 0) {\n            ticks[index].major = true;\n        }\n    }\n    return ticks;\n}\n function ticksFromTimestamps(scale, values, majorUnit) {\n    const ticks = [];\n     const map = {};\n    const ilen = values.length;\n    let i, value;\n    for(i = 0; i < ilen; ++i){\n        value = values[i];\n        map[value] = i;\n        ticks.push({\n            value,\n            major: false\n        });\n    }\n    return ilen === 0 || !majorUnit ? ticks : setMajorTicks(scale, ticks, map, majorUnit);\n}\nclass TimeScale extends Scale {\n    static id = 'time';\n static defaults = {\n bounds: 'data',\n        adapters: {},\n        time: {\n            parser: false,\n            unit: false,\n            round: false,\n            isoWeekday: false,\n            minUnit: 'millisecond',\n            displayFormats: {}\n        },\n        ticks: {\n source: 'auto',\n            callback: false,\n            major: {\n                enabled: false\n            }\n        }\n    };\n constructor(props){\n        super(props);\n         this._cache = {\n            data: [],\n            labels: [],\n            all: []\n        };\n         this._unit = 'day';\n         this._majorUnit = undefined;\n        this._offsets = {};\n        this._normalized = false;\n        this._parseOpts = undefined;\n    }\n    init(scaleOpts, opts = {}) {\n        const time = scaleOpts.time || (scaleOpts.time = {});\n         const adapter = this._adapter = new adapters._date(scaleOpts.adapters.date);\n        adapter.init(opts);\n        mergeIf(time.displayFormats, adapter.formats());\n        this._parseOpts = {\n            parser: time.parser,\n            round: time.round,\n            isoWeekday: time.isoWeekday\n        };\n        super.init(scaleOpts);\n        this._normalized = opts.normalized;\n    }\n parse(raw, index) {\n        if (raw === undefined) {\n            return null;\n        }\n        return parse(this, raw);\n    }\n    beforeLayout() {\n        super.beforeLayout();\n        this._cache = {\n            data: [],\n            labels: [],\n            all: []\n        };\n    }\n    determineDataLimits() {\n        const options = this.options;\n        const adapter = this._adapter;\n        const unit = options.time.unit || 'day';\n        let { min , max , minDefined , maxDefined  } = this.getUserBounds();\n function _applyBounds(bounds) {\n            if (!minDefined && !isNaN(bounds.min)) {\n                min = Math.min(min, bounds.min);\n            }\n            if (!maxDefined && !isNaN(bounds.max)) {\n                max = Math.max(max, bounds.max);\n            }\n        }\n        if (!minDefined || !maxDefined) {\n            _applyBounds(this._getLabelBounds());\n            if (options.bounds !== 'ticks' || options.ticks.source !== 'labels') {\n                _applyBounds(this.getMinMax(false));\n            }\n        }\n        min = isNumberFinite(min) && !isNaN(min) ? min : +adapter.startOf(Date.now(), unit);\n        max = isNumberFinite(max) && !isNaN(max) ? max : +adapter.endOf(Date.now(), unit) + 1;\n        this.min = Math.min(min, max - 1);\n        this.max = Math.max(min + 1, max);\n    }\n _getLabelBounds() {\n        const arr = this.getLabelTimestamps();\n        let min = Number.POSITIVE_INFINITY;\n        let max = Number.NEGATIVE_INFINITY;\n        if (arr.length) {\n            min = arr[0];\n            max = arr[arr.length - 1];\n        }\n        return {\n            min,\n            max\n        };\n    }\n buildTicks() {\n        const options = this.options;\n        const timeOpts = options.time;\n        const tickOpts = options.ticks;\n        const timestamps = tickOpts.source === 'labels' ? this.getLabelTimestamps() : this._generate();\n        if (options.bounds === 'ticks' && timestamps.length) {\n            this.min = this._userMin || timestamps[0];\n            this.max = this._userMax || timestamps[timestamps.length - 1];\n        }\n        const min = this.min;\n        const max = this.max;\n        const ticks = _filterBetween(timestamps, min, max);\n        this._unit = timeOpts.unit || (tickOpts.autoSkip ? determineUnitForAutoTicks(timeOpts.minUnit, this.min, this.max, this._getLabelCapacity(min)) : determineUnitForFormatting(this, ticks.length, timeOpts.minUnit, this.min, this.max));\n        this._majorUnit = !tickOpts.major.enabled || this._unit === 'year' ? undefined : determineMajorUnit(this._unit);\n        this.initOffsets(timestamps);\n        if (options.reverse) {\n            ticks.reverse();\n        }\n        return ticksFromTimestamps(this, ticks, this._majorUnit);\n    }\n    afterAutoSkip() {\n        if (this.options.offsetAfterAutoskip) {\n            this.initOffsets(this.ticks.map((tick)=>+tick.value));\n        }\n    }\n initOffsets(timestamps = []) {\n        let start = 0;\n        let end = 0;\n        let first, last;\n        if (this.options.offset && timestamps.length) {\n            first = this.getDecimalForValue(timestamps[0]);\n            if (timestamps.length === 1) {\n                start = 1 - first;\n            } else {\n                start = (this.getDecimalForValue(timestamps[1]) - first) / 2;\n            }\n            last = this.getDecimalForValue(timestamps[timestamps.length - 1]);\n            if (timestamps.length === 1) {\n                end = last;\n            } else {\n                end = (last - this.getDecimalForValue(timestamps[timestamps.length - 2])) / 2;\n            }\n        }\n        const limit = timestamps.length < 3 ? 0.5 : 0.25;\n        start = _limitValue(start, 0, limit);\n        end = _limitValue(end, 0, limit);\n        this._offsets = {\n            start,\n            end,\n            factor: 1 / (start + 1 + end)\n        };\n    }\n _generate() {\n        const adapter = this._adapter;\n        const min = this.min;\n        const max = this.max;\n        const options = this.options;\n        const timeOpts = options.time;\n        const minor = timeOpts.unit || determineUnitForAutoTicks(timeOpts.minUnit, min, max, this._getLabelCapacity(min));\n        const stepSize = valueOrDefault(options.ticks.stepSize, 1);\n        const weekday = minor === 'week' ? timeOpts.isoWeekday : false;\n        const hasWeekday = isNumber(weekday) || weekday === true;\n        const ticks = {};\n        let first = min;\n        let time, count;\n        if (hasWeekday) {\n            first = +adapter.startOf(first, 'isoWeek', weekday);\n        }\n        first = +adapter.startOf(first, hasWeekday ? 'day' : minor);\n        if (adapter.diff(max, min, minor) > 100000 * stepSize) {\n            throw new Error(min + ' and ' + max + ' are too far apart with stepSize of ' + stepSize + ' ' + minor);\n        }\n        const timestamps = options.ticks.source === 'data' && this.getDataTimestamps();\n        for(time = first, count = 0; time < max; time = +adapter.add(time, stepSize, minor), count++){\n            addTick(ticks, time, timestamps);\n        }\n        if (time === max || options.bounds === 'ticks' || count === 1) {\n            addTick(ticks, time, timestamps);\n        }\n        return Object.keys(ticks).sort((a, b)=>a - b).map((x)=>+x);\n    }\n getLabelForValue(value) {\n        const adapter = this._adapter;\n        const timeOpts = this.options.time;\n        if (timeOpts.tooltipFormat) {\n            return adapter.format(value, timeOpts.tooltipFormat);\n        }\n        return adapter.format(value, timeOpts.displayFormats.datetime);\n    }\n format(value, format) {\n        const options = this.options;\n        const formats = options.time.displayFormats;\n        const unit = this._unit;\n        const fmt = format || formats[unit];\n        return this._adapter.format(value, fmt);\n    }\n _tickFormatFunction(time, index, ticks, format) {\n        const options = this.options;\n        const formatter = options.ticks.callback;\n        if (formatter) {\n            return callback(formatter, [\n                time,\n                index,\n                ticks\n            ], this);\n        }\n        const formats = options.time.displayFormats;\n        const unit = this._unit;\n        const majorUnit = this._majorUnit;\n        const minorFormat = unit && formats[unit];\n        const majorFormat = majorUnit && formats[majorUnit];\n        const tick = ticks[index];\n        const major = majorUnit && majorFormat && tick && tick.major;\n        return this._adapter.format(time, format || (major ? majorFormat : minorFormat));\n    }\n generateTickLabels(ticks) {\n        let i, ilen, tick;\n        for(i = 0, ilen = ticks.length; i < ilen; ++i){\n            tick = ticks[i];\n            tick.label = this._tickFormatFunction(tick.value, i, ticks);\n        }\n    }\n getDecimalForValue(value) {\n        return value === null ? NaN : (value - this.min) / (this.max - this.min);\n    }\n getPixelForValue(value) {\n        const offsets = this._offsets;\n        const pos = this.getDecimalForValue(value);\n        return this.getPixelForDecimal((offsets.start + pos) * offsets.factor);\n    }\n getValueForPixel(pixel) {\n        const offsets = this._offsets;\n        const pos = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n        return this.min + pos * (this.max - this.min);\n    }\n _getLabelSize(label) {\n        const ticksOpts = this.options.ticks;\n        const tickLabelWidth = this.ctx.measureText(label).width;\n        const angle = toRadians(this.isHorizontal() ? ticksOpts.maxRotation : ticksOpts.minRotation);\n        const cosRotation = Math.cos(angle);\n        const sinRotation = Math.sin(angle);\n        const tickFontSize = this._resolveTickFontOptions(0).size;\n        return {\n            w: tickLabelWidth * cosRotation + tickFontSize * sinRotation,\n            h: tickLabelWidth * sinRotation + tickFontSize * cosRotation\n        };\n    }\n _getLabelCapacity(exampleTime) {\n        const timeOpts = this.options.time;\n        const displayFormats = timeOpts.displayFormats;\n        const format = displayFormats[timeOpts.unit] || displayFormats.millisecond;\n        const exampleLabel = this._tickFormatFunction(exampleTime, 0, ticksFromTimestamps(this, [\n            exampleTime\n        ], this._majorUnit), format);\n        const size = this._getLabelSize(exampleLabel);\n        const capacity = Math.floor(this.isHorizontal() ? this.width / size.w : this.height / size.h) - 1;\n        return capacity > 0 ? capacity : 1;\n    }\n getDataTimestamps() {\n        let timestamps = this._cache.data || [];\n        let i, ilen;\n        if (timestamps.length) {\n            return timestamps;\n        }\n        const metas = this.getMatchingVisibleMetas();\n        if (this._normalized && metas.length) {\n            return this._cache.data = metas[0].controller.getAllParsedValues(this);\n        }\n        for(i = 0, ilen = metas.length; i < ilen; ++i){\n            timestamps = timestamps.concat(metas[i].controller.getAllParsedValues(this));\n        }\n        return this._cache.data = this.normalize(timestamps);\n    }\n getLabelTimestamps() {\n        const timestamps = this._cache.labels || [];\n        let i, ilen;\n        if (timestamps.length) {\n            return timestamps;\n        }\n        const labels = this.getLabels();\n        for(i = 0, ilen = labels.length; i < ilen; ++i){\n            timestamps.push(parse(this, labels[i]));\n        }\n        return this._cache.labels = this._normalized ? timestamps : this.normalize(timestamps);\n    }\n normalize(values) {\n        return _arrayUnique(values.sort(sorter));\n    }\n}\n\nfunction interpolate(table, val, reverse) {\n    let lo = 0;\n    let hi = table.length - 1;\n    let prevSource, nextSource, prevTarget, nextTarget;\n    if (reverse) {\n        if (val >= table[lo].pos && val <= table[hi].pos) {\n            ({ lo , hi  } = _lookupByKey(table, 'pos', val));\n        }\n        ({ pos: prevSource , time: prevTarget  } = table[lo]);\n        ({ pos: nextSource , time: nextTarget  } = table[hi]);\n    } else {\n        if (val >= table[lo].time && val <= table[hi].time) {\n            ({ lo , hi  } = _lookupByKey(table, 'time', val));\n        }\n        ({ time: prevSource , pos: prevTarget  } = table[lo]);\n        ({ time: nextSource , pos: nextTarget  } = table[hi]);\n    }\n    const span = nextSource - prevSource;\n    return span ? prevTarget + (nextTarget - prevTarget) * (val - prevSource) / span : prevTarget;\n}\nclass TimeSeriesScale extends TimeScale {\n    static id = 'timeseries';\n static defaults = TimeScale.defaults;\n constructor(props){\n        super(props);\n         this._table = [];\n         this._minPos = undefined;\n         this._tableRange = undefined;\n    }\n initOffsets() {\n        const timestamps = this._getTimestampsForTable();\n        const table = this._table = this.buildLookupTable(timestamps);\n        this._minPos = interpolate(table, this.min);\n        this._tableRange = interpolate(table, this.max) - this._minPos;\n        super.initOffsets(timestamps);\n    }\n buildLookupTable(timestamps) {\n        const { min , max  } = this;\n        const items = [];\n        const table = [];\n        let i, ilen, prev, curr, next;\n        for(i = 0, ilen = timestamps.length; i < ilen; ++i){\n            curr = timestamps[i];\n            if (curr >= min && curr <= max) {\n                items.push(curr);\n            }\n        }\n        if (items.length < 2) {\n            return [\n                {\n                    time: min,\n                    pos: 0\n                },\n                {\n                    time: max,\n                    pos: 1\n                }\n            ];\n        }\n        for(i = 0, ilen = items.length; i < ilen; ++i){\n            next = items[i + 1];\n            prev = items[i - 1];\n            curr = items[i];\n            if (Math.round((next + prev) / 2) !== curr) {\n                table.push({\n                    time: curr,\n                    pos: i / (ilen - 1)\n                });\n            }\n        }\n        return table;\n    }\n _getTimestampsForTable() {\n        let timestamps = this._cache.all || [];\n        if (timestamps.length) {\n            return timestamps;\n        }\n        const data = this.getDataTimestamps();\n        const label = this.getLabelTimestamps();\n        if (data.length && label.length) {\n            timestamps = this.normalize(data.concat(label));\n        } else {\n            timestamps = data.length ? data : label;\n        }\n        timestamps = this._cache.all = timestamps;\n        return timestamps;\n    }\n getDecimalForValue(value) {\n        return (interpolate(this._table, value) - this._minPos) / this._tableRange;\n    }\n getValueForPixel(pixel) {\n        const offsets = this._offsets;\n        const decimal = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n        return interpolate(this._table, decimal * this._tableRange + this._minPos, true);\n    }\n}\n\nvar scales = /*#__PURE__*/Object.freeze({\n__proto__: null,\nCategoryScale: CategoryScale,\nLinearScale: LinearScale,\nLogarithmicScale: LogarithmicScale,\nRadialLinearScale: RadialLinearScale,\nTimeScale: TimeScale,\nTimeSeriesScale: TimeSeriesScale\n});\n\nconst registerables = [\n    controllers,\n    elements,\n    plugins,\n    scales\n];\n\nexport { Animation, Animations, ArcElement, BarController, BarElement, BasePlatform, BasicPlatform, BubbleController, CategoryScale, Chart, plugin_colors as Colors, DatasetController, plugin_decimation as Decimation, DomPlatform, DoughnutController, Element, index as Filler, Interaction, plugin_legend as Legend, LineController, LineElement, LinearScale, LogarithmicScale, PieController, PointElement, PolarAreaController, RadarController, RadialLinearScale, Scale, ScatterController, plugin_subtitle as SubTitle, Ticks, TimeScale, TimeSeriesScale, plugin_title as Title, plugin_tooltip as Tooltip, adapters as _adapters, _detectPlatform, animator, controllers, defaults, elements, layouts, plugins, registerables, registry, scales };\n//# sourceMappingURL=chart.js.map\n","import {Fragment} from \"../../abstract/Fragment\"\r\nimport {createCanvasElement} from \"../../../utils/DOMWizard\"\r\nimport {Chart as ChartJS, ChartDataset, ChartOptions, registerables} from 'chart.js'\r\nimport {transposeMatrix} from \"../../../utils/misc\"\r\nChartJS.register(...registerables)\r\n\r\nconst defaultColors = [\"#fd7f6f\", \"#7eb0d5\", \"#b2e061\", \"#bd7ebe\", \"#ffb55a\", \"#ffee65\", \"#beb9db\", \"#fdcce5\", \"#8bd3c7\"]\r\n\r\nexport class Chart extends Fragment{\r\n\r\n    constructor(location: FragmentLocation, model: ChartModel) {\r\n        super(location)\r\n        const canvas = createCanvasElement()\r\n        this.core = canvas\r\n        createChartJS(canvas, model)\r\n    }\r\n}\r\n\r\nfunction createChartJS(chartCanvas: HTMLCanvasElement, model: ChartModel): ChartJS{\r\n    const labels = Object.keys(model.data)\r\n    const dataMatrix: number[][] = transposeMatrix(Object.values(model.data).map(data => {\r\n        if (typeof data === \"number\") data = [data]\r\n        return data\r\n    }))\r\n\r\n    const datasets: any[] = dataMatrix.map((dataRow, i) =>\r\n        getChartJsDataset(model.diagram[i], dataRow))\r\n\r\n    const data = Object.values(model.data)\r\n    return new ChartJS(chartCanvas.getContext('2d'), {\r\n        data: {labels, datasets},\r\n        type: model.diagram[0].type,\r\n        options: getChartJsOptions(model.title)\r\n    })\r\n}\r\n\r\nfunction getChartJsDataset(config: DiagramConfig, data: number[]): ChartDataset{\r\n    const common = {\r\n        label: config.name,\r\n        backgroundColor: config.color ? config.color : defaultColors,\r\n        // borderWidth: 3,\r\n        data\r\n    }\r\n    switch (config?.type){\r\n        case \"line\": return {\r\n            ...common,\r\n            type: \"line\",\r\n            borderColor: config.color ? config.color : defaultColors,\r\n            tension: 0.4\r\n        }\r\n        case \"dottedLine\": return {\r\n            ...common,\r\n            // type: \"line\",\r\n            borderDash: [3],\r\n            tension: 0.4\r\n        }\r\n        case \"bar\": return {\r\n            ...common,\r\n            type: \"bar\"\r\n        }\r\n        case \"pie\": return {\r\n            ...common,\r\n            // type: \"pie\"\r\n        }\r\n        default: throw new Error(\"Unresolved DiagramType: \"+ config)\r\n    }\r\n}\r\n\r\nfunction getChartJsOptions(title: string): ChartOptions{\r\n    return {\r\n        // aspectRatio: 2|1,\r\n        interaction: {\r\n            intersect: false,\r\n            mode: \"index\"\r\n        },\r\n        plugins: {\r\n            tooltip:{\r\n                position: \"nearest\"\r\n            },\r\n            title: {\r\n                display: true,\r\n                text: title\r\n            },\r\n            legend: {\r\n                position: 'bottom'\r\n            }\r\n        }\r\n    }\r\n}\r\n","import {ExistedFragment} from \"../abstract/ExistedFragment\"\r\nimport {createDivElement, emptyElement} from \"../../utils/DOMWizard\";\r\nimport {Table} from \"./content/Table\";\r\nimport {Chart} from \"./content/Chart\";\r\nimport {Button} from \"../inputs/Button\";\r\nimport {popupTimeoutAction} from \"../../utils/modal\"\r\nimport domtoimage from \"dom-to-image\";\r\nimport ReportSlot from \"./ReportSlot\";\r\nimport {stringify} from \"../../utils/misc\";\r\nimport {downloadXlsx} from \"../../utils/api/reportsAPI\";\r\n\r\nexport class Body extends ExistedFragment{\r\n\r\n    private _collapsed: boolean = false\r\n    private tableModelCache: TableModel\r\n    private xlsxTableModelCache: XlsxTableModel\r\n    private chartsModelCache: ChartModel[]\r\n\r\n    private table: Table\r\n    private charts: Chart[]\r\n\r\n    private exportChartsButton: Button\r\n    private chartsWrapper: HTMLDivElement\r\n\r\n    private exportTableButton: Button\r\n    private tableWrapper: HTMLDivElement\r\n\r\n\r\n    constructor(core: HTMLDivElement, private readonly parentReportSlot: ReportSlot) {\r\n        super(core)\r\n    }\r\n\r\n    createTable(model: TableModel = this.tableModelCache): Table{\r\n        this.tableModelCache = model\r\n        this.tableWrapper = createDivElement({class: \"table\"})\r\n        this.core.insertAdjacentElement(\"beforeend\", this.tableWrapper)\r\n        this.table = new Table({target: this.tableWrapper, position: \"beforeend\"}, model)\r\n        if(model.xlsxExport) {\r\n            this.xlsxTableModelCache = this.getXlsxTableModel()\r\n            this.exportTableButton = this.createExportButton(this.tableWrapper, \"–≠–∫—Å–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å —Ç–∞–±–ª–∏—Ü—É –≤ .xlsx?\", () => this.exportTable())\r\n        }\r\n        return this.table\r\n    }\r\n\r\n    createCharts(models: ChartModel[] = this.chartsModelCache): Chart[]{\r\n        this.chartsModelCache = models\r\n        this.chartsWrapper = createDivElement({class: \"charts\"})\r\n        this.exportChartsButton = this.createExportButton(this.chartsWrapper, \"–≠–∫—Å–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å –¥–∏–∞–≥—Ä–∞–º–º—ã –≤ .jpeg?\",\r\n            () => this.exportCharts())\r\n        this.core.insertAdjacentElement(\"afterbegin\", this.chartsWrapper)\r\n        this.charts = models.map(model => new Chart({target: this.chartsWrapper, position: \"beforeend\"}, model))\r\n        return this.charts\r\n    }\r\n\r\n    toggleCharts(){\r\n        if(!!this.chartsWrapper) {\r\n            this.chartsWrapper.remove()\r\n            this.chartsWrapper = undefined\r\n        } else\r\n            this.createCharts()\r\n    }\r\n\r\n    get collapsed(): typeof this._collapsed{\r\n        return this._collapsed\r\n    }\r\n\r\n    set collapsed(collapsed: typeof this._collapsed){\r\n        this._collapsed = collapsed\r\n        if(this.collapsed) emptyElement(this.core)\r\n        else {\r\n            if(this.tableModelCache) this.createTable()\r\n            if(this.chartsModelCache) this.createCharts()\r\n        }\r\n    }\r\n    collapse=() => this.collapsed = true\r\n    expand=() => this.collapsed = false\r\n\r\n\r\n    reset(){\r\n        this.tableModelCache = undefined\r\n        this.chartsModelCache = undefined\r\n        emptyElement(this.core)\r\n    }\r\n\r\n    private createExportButton(target: HTMLElement, actionText: string, action: () => void): Button {\r\n        const button = new Button({target, position: \"afterbegin\"})\r\n        button.subscribe(() => popupTimeoutAction(actionText, \"–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å\", action))\r\n        button.image = \"img/download.svg\"\r\n        button.hint = \"–≠–∫—Å–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å\"\r\n        return button\r\n    }\r\n\r\n    exportTable(){\r\n        downloadXlsx(this.xlsxTableModelCache)\r\n    }\r\n\r\n    private getXlsxTableModel(): XlsxTableModel{\r\n        const xlsxConfig = this.tableModelCache.xlsxExport\r\n        const exportContext: string[] = []\r\n        for (const key in xlsxConfig.context){\r\n            const value = xlsxConfig.context[key]\r\n            const contextValue = this.parentReportSlot.jsonFieldValues[value]\r\n            exportContext.push(`${key}: ${contextValue ? stringify(contextValue) : value}`)\r\n        }\r\n        return {\r\n            name: xlsxConfig.name,\r\n            context: exportContext,\r\n            title: this.parentReportSlot.reportModel.title,\r\n            header: getCompleteRowsFromElement(this.table.thead),\r\n            body: getCompleteRowsFromElement(this.table.tbody),\r\n            total: getCompleteRowsFromElement(this.table.tfoot)[0]\r\n        }\r\n    }\r\n\r\n    private exportCharts(){\r\n        this.exportChartsButton.hide()\r\n        domtoimage.toJpeg(this.chartsWrapper)\r\n            .then((dataUrl) => {\r\n                const link = document.createElement(\"a\")\r\n                link.download = \"charts.jpeg\"\r\n                link.href = dataUrl\r\n                link.click()\r\n                link.remove()\r\n            })\r\n            .finally(() => {\r\n                this.exportChartsButton.show()\r\n            })\r\n    }\r\n}\r\n\r\nfunction getCompleteRowsFromElement(element: Element): CompleteRow[]{\r\n    let rows: CompleteRow[] = []\r\n    element.querySelectorAll(\"tr\").forEach(tr => {\r\n        let row: CompleteRow = []\r\n        tr.querySelectorAll<HTMLTableCellElement>(\"td, th\").forEach(tc => {\r\n            if(!tc.hidden) {\r\n                row.push({\r\n                    text: tc.innerText.trim(),\r\n                    colspan: tc.colSpan,\r\n                    rowspan: tc.rowSpan\r\n                })\r\n            }\r\n        })\r\n        rows.push(row)\r\n    })\r\n    return rows\r\n}","import wretch from \"wretch\"\r\nimport {setCursorToDefault, setCursorToLoading} from \"../misc\"\r\nimport {popupHttpDataError} from \"../modal\"\r\nimport domtoimage from \"dom-to-image\";\r\n\r\nexport const fetchReport = (path: string, values: JsonFieldValues): Promise<ReportModel> => {\r\n    setCursorToLoading()\r\n    return wretch(path)\r\n        .post(values)\r\n        .json(json => json)\r\n        .catch(error => popupHttpDataError(error, \"–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –æ—Ç—á—ë—Ç\"))\r\n        .finally(setCursorToDefault)\r\n}\r\n\r\nexport function downloadXlsx(model: XlsxTableModel) {\r\n    setCursorToLoading()\r\n    wretch(\"appforge/converter/xlsx\")\r\n        .post(model)\r\n        .blob(blob => {\r\n            const aElement = document.createElement('a')\r\n            aElement.setAttribute('download', model.name + \".xlsx\")\r\n            const href = URL.createObjectURL(blob)\r\n            aElement.href = href\r\n            aElement.setAttribute('target', '_blank')\r\n            aElement.click()\r\n            URL.revokeObjectURL(href)\r\n        })\r\n        .catch(error => popupHttpDataError(error, \"–û—à–∏–±–∫–∞ —ç–∫—Å–ø–æ—Ä—Ç–∞\"))\r\n        .finally(setCursorToDefault)\r\n}","import {Fragment} from \"../abstract/Fragment\"\r\nimport {fetchReport} from \"../../utils/api/reportsAPI\"\r\nimport {Head} from \"./Head\"\r\nimport {Body} from \"./Body\"\r\nimport {resolveCSS} from \"../../utils/resolver\"\r\nimport {popupMessage} from \"../../utils/modal\"\r\nimport {scrollIntoElement} from \"../../utils/misc\"\r\n\r\nresolveCSS(\"report\")\r\n\r\nexport default class ReportSlot extends Fragment{\r\n\r\n    readonly isModal: boolean\r\n    readonly head: Head\r\n    readonly body: Body\r\n    protected readonly path: string\r\n\r\n    jsonFieldValues: JsonFieldValues\r\n    reportModel: ReportModel\r\n\r\n    constructor(public location: FragmentLocation) {\r\n        super(location)\r\n        this.core = location.target\r\n        this.path = this.core.getAttribute(\"path\")\r\n        this.head = new Head(this.core.querySelector(\".head\"), this)\r\n        this.body = new Body(this.core.querySelector(\".body\"), this)\r\n        this.isModal = this.core.getAttribute(\"modal\") === \"true\"\r\n    }\r\n\r\n    applyNewReport(model: ReportModel){\r\n        if(model.table.data === null || model.table.data.length === 0)\r\n            popupMessage(\"–û—Ç—á—ë—Ç –ø—É—Å—Ç\", \"–û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –ø–æ–¥—Ö–æ–¥—è—â–∏–µ –¥–∞–Ω–Ω—ã–µ\")\r\n\r\n        if(!model.title)\r\n            model.title = this.head.title\r\n\r\n        this.report = model\r\n    }\r\n\r\n    applyNewReportByFieldValues(values: JsonFieldValues, onLoad?: () => {}){\r\n        this.head.loading.show()\r\n        fetchReport(this.path, values).then(model => {\r\n            this.head.loading.hide()\r\n            onLoad()\r\n            this.reset()\r\n            this.jsonFieldValues = values\r\n            this.applyNewReport(model)\r\n            scrollIntoElement(this.core)\r\n        })\r\n    }\r\n\r\n    private set report(model: ReportModel){\r\n        this.reset()\r\n        this.reportModel = model\r\n        if(model.title)\r\n            this.head.title = model.title\r\n        if(model.table)\r\n            this.body.createTable(model.table)\r\n        if(model.charts) {\r\n            this.body.createCharts(model.charts)\r\n            // Hide by default\r\n            // this.body.toggleCharts()\r\n        }\r\n\r\n        this.applyButtons(!!model.charts)\r\n    }\r\n\r\n    private applyButtons(hasCharts: boolean){\r\n        if(hasCharts)\r\n            this.head.addChartsButton()\r\n        if(!this.isModal)\r\n            this.head.addToTopButton()\r\n        this.head.addCollapseButton()\r\n        this.head.addFullscreenButton()\r\n    }\r\n\r\n    private reset(){\r\n        this.head.reset()\r\n        this.body.reset()\r\n    }\r\n}","import {Fragment} from \"./abstract/Fragment\"\r\nimport Header from \"./header/Header\"\r\nimport MainForm from \"./mainForm/MainForm\"\r\nimport ReportSlot from \"./report/ReportSlot\"\r\nimport {fetchReport} from \"../utils/api/reportsAPI\"\r\nimport {jsonify, jsonifyFields} from \"../utils/misc\";\r\n\r\nexport class Application extends Fragment{\r\n\r\n    readonly header: Header\r\n    readonly mainForm: MainForm\r\n    readonly reportSlots: Map<string, ReportSlot>\r\n\r\n    constructor(location: FragmentLocation) {\r\n        super(location)\r\n        this.core = location.target\r\n        this.header = this.createHeader()\r\n        this.mainForm = this.createMainForm()\r\n        this.reportSlots = this.createReportSlots()\r\n    }\r\n\r\n    private createHeader = (): Header => new Header({target: document.getElementById(\"header\")})\r\n\r\n    private createMainForm(): MainForm {\r\n        const mainForm = new MainForm({target: document.getElementById(\"main-form\") as HTMLFormElement})\r\n        mainForm.confirmButton.subscribe(() => {\r\n            mainForm.confirmButton.disable()\r\n            // The main form apply the \"main\" report only\r\n            this.reportSlots.get(\"main\").applyNewReportByFieldValues(jsonifyFields(mainForm.fields), mainForm.confirmButton.enable)\r\n        }, false)\r\n        return mainForm\r\n    }\r\n\r\n    private createReportSlots=(): typeof this.reportSlots => new Map(\r\n        [...this.core.querySelectorAll<HTMLDivElement>(\"div.report\")].map(reportSlotElement =>\r\n            [reportSlotElement.getAttribute(\"key\"), new ReportSlot({target: reportSlotElement})])\r\n    )\r\n}","import {resolveCSS} from \"./utils/resolver\"\r\nimport {Application} from \"./fragments/Application\"\r\n\r\nresolveCSS(\"global\")\r\nresolveCSS(\"inputs\")\r\nresolveCSS(\"states\")\r\nresolveCSS(\"third-party/animate\")\r\nresolveCSS(\"misc\")\r\n\r\ndocument.onreadystatechange = () => {\r\n    if (document.readyState === \"complete\")\r\n        new Application({target: document.body})\r\n            .show()\r\n}\r\n"],"names":["resolveCSS","name","source","headElement","document","querySelector","styleEl","createElement","setAttribute","appendChild","Fragment","core","element","this","coreElement","Error","insertCallback","constructor","location","addClass","className","classList","add","removeClass","remove","toggleClass","toggle","position","target","insertAdjacentElement","replaceWith","class","hide","style","display","show","mouseEvent","popupTimeoutAction","text","confirmButtonText","onConfirm","radioOptions","popupSweetModal","input","undefined","inputOptions","showConfirmButton","timer","timerProgressBar","backdrop","then","result","isConfirmed","popupHttpDataError","html","footer","title","icon","options","clientX","clientY","screenWidth","window","innerWidth","documentElement","clientWidth","body","screenHeight","innerHeight","clientHeight","getSweetMousePosition","swal","fire","Object","assign","confirmButtonColor","showClass","popup","getAnimationShowClass","hideClass","showCloseButton","allowEnterKey","addEventListener","event","Header","super","activateResetButton","activateInfoButton","activateHelpButton","activateButton","reload","button","list","console","log","getAttribute","map","item","join","href","link","click","removeChild","downloadUserManual","buttonClassName","onClick","buttonElement","tagName","textContent","attributes","forEach","attribute","keys","String","values","createDivElement","createButtonElement","createInputElement","type","createLabelElement","emptyElement","withText","firstElementChild","generateUniqueId","startName","serialNumber","getElementById","InputFragment","value","_value","valueEventCallbacks","callback","subscribe","onValueEvent","runOnInit","push","debounce","delay","timeoutId","clearTimeout","setTimeout","Button","enable","isAvailable","disable","available","contains","hint","image","src","_a","imageElement","alt","createImageElement","numberOf","word","isNaN","Number","concatMaps","maps","buffer","entries","Map","stringify","Set","Array","from","key","Date","stringifyDate","json","set","jsonToMap","jsonifyFields","fields","field","jsonValue","date","year","getFullYear","month","getMonth","day","getDate","setCursorToLoading","cursor","setCursorToDefault","scrollIntoElement","scrollIntoView","behavior","block","getFullscreenElement","DateInput","config","defaultRange","onSelect","easepick","create","format","calendars","grid","zIndex","plugins","AmpPlugin","RangePlugin","LockPlugin","lang","darkMode","resetButton","dropdown","minYear","maxYear","months","years","startDate","DateTime","endDate","locale","one","few","many","delimiter","minDays","maxDays","css","setup","picker","on","e","detail","start","end","applyPicker","dateRange","Field","InputClass","inputConfig","setToArray","obj","mapToJson","jsonify","warningLabel","makeValid","makeInvalid","message","DateField","configElement","Checkbox","checkBoxElement","id","labelElement","for","append","label","updateValue","checked","CheckboxField","Select","optionsRetrievalCallbacks","optionKeysToOptions","get","VirtualSelect","init","ele","additionalClasses","disabled","autofocus","markSearchResults","optionsCount","multiple","search","hasOptionDescription","showCodes","disableSelectAll","maxValues","placeholder","noOptionsText","noSearchResultsText","selectAllText","searchPlaceholderText","optionsSelectedText","optionSelectedText","allOptionsSelectedText","clearButtonText","moreText","applyVirtualSelect","currentTarget","selectedOptions","length","map1","map2","size","has","compareMaps","setOptions","selectedKeysCache","defaultKeys","split","delete","entry","alias","description","mapToVirtualSelectOptions","setSelected","reset","blur","setValue","fetchEndpointOptions","url","subscribedFields","wretch","post","catch","error","finally","SelectField","getBoolAttr","attributeName","optionsRetrieving","endpointConfigElement","endpointPath","_b","endpointSubscribedFields","querySelectorAll","fieldElement","optionsBuffer","resolveSubscribedFields","getFieldFn","_","listenSubscribedFields","retrieveOptionsPromise","optionsGroupName","promise","BankField","bankConfigElement","dateFieldKey","dateFieldSubscription","resolveBankSubscribing","fetchBankOptionsFn","subscriptionFields","subscription","serviceBankURL","origin","fetchCarriersByDate","fetchOptions","fetchCountriesByDate","postSovietOnly","g_prsng","fetchRoadsByDateAndCountries","async","countries","mergeOptionPromises","fetchRoads","countryKey","gos","fetchStationsByDateAndRoads","roads","extraProperty","mapRoadsByCountryCodeAndRoadCodes","countryValue","roadValues","dor","pr_bo","listName","parseItemFn","extraProperties","filter","errorFooter","data","firstChildKey","parsed","trim","promises","Promise","all","results","mergedResult","codesMap","roadValueEntries","roadValue","parseRoadKey","CarriersField","CountriesField","postSovietKey","postSovietSubscription","RoadsField","countriesKey","countriesSubscription","StationsField","roadsKey","roadsSubscription","MainForm","confirmButton","resolveFields","resolveFieldsSubscriptions","validationPath","sectionElement","sectionKey","fieldKey","containsClass","resolveSelectField","resolveField","validateFields","path","forbidden","ExistedFragment","Loader","insertAdjacentHTML","Head","parentReportSlot","titleElement","originTitleText","buttonsElement","loading","fullscreenButton","addFullscreenButton","addChartsButton","chartsButton","createButton","toggleCharts","addCollapseButton","collapseButton","createToggleableButton","collapse","expand","fullscreenMode","toggleFullscreen","exitFullscreen","requestFullscreen","addToTopButton","toTopButton","actionA","actionB","imageA","hintA","imageB","hintB","toggled","action","Text","textInputElement","resetButtonElement","marginLeft","Table","model","thead","tbody","tfoot","_tableMap","filtersMap","head","tableMap","rowData","slice","primaryColumnsNumber","cellData","total","calculateTotal","headRow","createHTMLRow","headCell","htmlHeadCell","createHTMLHeadCell","rowspan","colspan","addFilter","setFilter","addTableMap","groupPrimaryCells","contentMap","filtrateTableMap","sort","a","b","valueCells","primaryCells","cell","primaryCellElement","createHTMLCell","concat","createHTMLTotalRow","i","htmlCells","primaryTotalCell","totalRow","colSpan","tr","cellContent","rowSpan","getCellIndexWithSpans","filterMap","cellTexts","v","filterText","toLowerCase","includes","groupedColumnsNumber","startHtmlRow","endHtmlRow","lastElementChild","nesting","primaryHtmlCell","cells","nextHtmlRow","nextElementSibling","nextPrimaryHtmlCell","hidden","targetCell","rows","parentElement","matrix","rowIndex","colIndex","row","j","l","k","round","lim","h","Math","max","min","p2b","n2b","b2n","n2p","map$1","A","B","C","D","E","F","c","d","f","hex","h1","h2","eq","hexString","r","g","isShort","alpha","HUE_RE","hsl2rgbn","s","n","hsv2rgbn","hwb2rgbn","w","rgb","rgb2hsl","hueValue","calln","isArray","hsl2rgb","hue","hueParse","str","m","exec","p1","p2","hwb2rgb","hsv2rgb","x","Z","Y","X","W","V","U","T","S","R","Q","P","O","N","M","L","K","G","H","I","J","names$1","OiceXe","antiquewEte","aqua","aquamarRe","azuY","beige","bisque","black","blanKedOmond","Xe","XeviTet","bPwn","burlywood","caMtXe","KartYuse","KocTate","cSO","cSnflowerXe","cSnsilk","crimson","cyan","xXe","xcyan","xgTMnPd","xWay","xgYF","xgYy","xkhaki","xmagFta","xTivegYF","xSange","xScEd","xYd","xsOmon","xsHgYF","xUXe","xUWay","xUgYy","xQe","xviTet","dAppRk","dApskyXe","dimWay","dimgYy","dodgerXe","fiYbrick","flSOwEte","foYstWAn","fuKsia","gaRsbSo","ghostwEte","gTd","gTMnPd","Way","gYF","gYFLw","gYy","honeyMw","hotpRk","RdianYd","Rdigo","ivSy","khaki","lavFMr","lavFMrXsh","lawngYF","NmoncEffon","ZXe","ZcSO","Zcyan","ZgTMnPdLw","ZWay","ZgYF","ZgYy","ZpRk","ZsOmon","ZsHgYF","ZskyXe","ZUWay","ZUgYy","ZstAlXe","ZLw","lime","limegYF","lRF","magFta","maPon","VaquamarRe","VXe","VScEd","VpurpN","VsHgYF","VUXe","VsprRggYF","VQe","VviTetYd","midnightXe","mRtcYam","mistyPse","moccasR","navajowEte","navy","Tdlace","Tive","TivedBb","Sange","SangeYd","ScEd","pOegTMnPd","pOegYF","pOeQe","pOeviTetYd","papayawEp","pHKpuff","peru","pRk","plum","powMrXe","purpN","YbeccapurpN","Yd","Psybrown","PyOXe","saddNbPwn","sOmon","sandybPwn","sHgYF","sHshell","siFna","silver","skyXe","UXe","UWay","UgYy","snow","sprRggYF","stAlXe","tan","teO","tEstN","tomato","Qe","viTet","JHt","wEte","wEtesmoke","Lw","LwgYF","names","nameParse","unpacked","tkeys","ok","nk","replace","parseInt","unpack","transparent","RGB_RE","to","pow","modHSL","ratio","tmp","clone","proto","fromObject","functionParse","charAt","rgbParse","Color","ret","len","_rgb","_valid","valid","rgbString","hslString","mix","color","weight","c1","c2","w2","p","w1","interpolate","t","rgb1","rgb2","clearer","greyscale","val","opaquer","negate","lighten","darken","saturate","desaturate","rotate","deg","noop","uid","isNullOrUndef","prototype","toString","call","isObject","isNumberFinite","isFinite","finiteOrDefault","defaultValue","valueOrDefault","toDimension","dimension","endsWith","parseFloat","fn","args","thisArg","apply","each","loopable","reverse","_elementsEqual","a0","a1","ilen","v0","v1","datasetIndex","index","klen","isValidKey","indexOf","_merger","tval","sval","merge","sources","merger","current","mergeIf","_mergerIf","hasOwnProperty","keyResolvers","o","y","resolveObjectKey","resolver","parts","part","_splitKey","_getKeyResolver","_capitalize","toUpperCase","defined","isFunction","setsEqual","PI","TAU","PITAU","INFINITY","POSITIVE_INFINITY","RAD_PER_DEG","HALF_PI","QUARTER_PI","TWO_THIRDS_PI","log10","sign","almostEquals","epsilon","abs","niceNum","range","roundedRange","niceRange","floor","fraction","isNumber","_setMinAndMaxByKey","array","property","toRadians","degrees","toDegrees","radians","_decimalPlaces","getAngleFromPoint","centrePoint","anglePoint","distanceFromXCenter","distanceFromYCenter","radialDistanceFromCenter","sqrt","angle","atan2","distance","distanceBetweenPoints","pt1","pt2","_angleDiff","_normalizeAngle","_angleBetween","sameAngleIsFullCircle","angleToStart","angleToEnd","startToAngle","endToAngle","_limitValue","_isBetween","_lookup","table","cmp","mid","hi","lo","_lookupByKey","last","ti","_rlookupByKey","arrayEvents","unlistenArrayEvents","listener","stub","_chartjs","listeners","splice","_arrayUnique","items","requestAnimFrame","requestAnimationFrame","throttled","argsToUse","ticking","_toLeftRightCenter","align","_alignStartEnd","_getStartAndCountOfVisiblePoints","meta","points","animationsDisabled","pointCount","count","_sorted","iScale","_parsed","axis","minDefined","maxDefined","getUserBounds","getPixelForValue","_scaleRangesChanged","xScale","yScale","_scaleRanges","newRanges","xmin","xmax","ymin","ymax","changed","atEdge","elasticIn","sin","elasticOut","effects","linear","easeInQuad","easeOutQuad","easeInOutQuad","easeInCubic","easeOutCubic","easeInOutCubic","easeInQuart","easeOutQuart","easeInOutQuart","easeInQuint","easeOutQuint","easeInOutQuint","easeInSine","cos","easeOutSine","easeInOutSine","easeInExpo","easeOutExpo","easeInOutExpo","easeInCirc","easeOutCirc","easeInOutCirc","easeInElastic","easeOutElastic","easeInOutElastic","easeInBack","easeOutBack","easeInOutBack","easeInBounce","easeOutBounce","easeInOutBounce","isPatternOrGradient","getHoverColor","numbers","colors","intlCache","formatNumber","num","cacheKey","JSON","formatter","Intl","NumberFormat","getNumberFormat","formatters","numeric","tickValue","ticks","chart","notation","delta","maxTick","calculateDelta","logDelta","numDecimal","minimumFractionDigits","maximumFractionDigits","logarithmic","remain","significand","Ticks","overrides","descriptors","getScope$1","node","root","scope","Defaults","_descriptors","_appliers","animation","backgroundColor","borderColor","datasets","devicePixelRatio","context","platform","getDevicePixelRatio","elements","events","font","family","lineHeight","hover","hoverBackgroundColor","ctx","hoverBorderColor","hoverColor","indexAxis","interaction","mode","intersect","includeInvisible","maintainAspectRatio","onHover","parsing","responsive","scale","scales","showLine","drawActiveElementsOnTop","describe","override","route","targetScope","targetName","scopeObject","targetScopeObject","privateName","defineProperties","writable","enumerable","local","appliers","defaults","_scriptable","startsWith","_indexable","_fallback","duration","easing","loop","properties","active","resize","animations","visible","autoPadding","padding","top","right","bottom","left","offset","beginAtZero","bounds","grace","lineWidth","drawOnChartArea","drawTicks","tickLength","tickWidth","_ctx","tickColor","border","dash","dashOffset","width","minRotation","maxRotation","mirror","textStrokeWidth","textStrokeColor","autoSkip","autoSkipPadding","labelOffset","minor","major","crossAlign","showLabelBackdrop","backdropColor","backdropPadding","_measureText","gc","longest","string","textWidth","measureText","_longestText","arrayOfThings","cache","garbageCollect","save","jlen","thing","nestedThing","restore","gcLen","_alignPixel","pixel","currentDevicePixelRatio","halfWidth","clearCanvas","canvas","getContext","resetTransform","clearRect","height","drawPoint","drawPointLegend","xOffset","yOffset","cornerRadius","xOffsetW","yOffsetW","pointStyle","rotation","radius","rad","translate","drawImage","beginPath","ellipse","arc","closePath","moveTo","lineTo","SQRT1_2","rect","fill","borderWidth","stroke","_isPointInArea","point","area","margin","clipArea","clip","unclipArea","_steppedLineTo","previous","flip","midpoint","_bezierCurveTo","bezierCurveTo","cp1x","cp2x","cp1y","cp2y","decorateText","line","opts","strikethrough","underline","metrics","actualBoundingBoxLeft","actualBoundingBoxRight","actualBoundingBoxAscent","actualBoundingBoxDescent","yDecoration","strokeStyle","fillStyle","decorationWidth","drawBackdrop","oldColor","fillRect","renderText","lines","strokeWidth","strokeColor","translation","textAlign","textBaseline","setRenderOpts","strokeText","maxWidth","fillText","addRoundedRectPath","topLeft","bottomLeft","bottomRight","topRight","LINE_HEIGHT","FONT_STYLE","toLineHeight","matches","match","numberOrZero","_readValueToProps","props","objProps","read","prop","toTRBL","toTRBLCorners","toPadding","toFont","fallback","warn","toFontString","resolve","inputs","info","cacheable","createContext","parentContext","_createResolver","scopes","prefixes","rootScopes","getTarget","finalRootScopes","_resolve","Symbol","toStringTag","_cacheable","_scopes","_rootScopes","_getTarget","Proxy","deleteProperty","_keys","_cached","proxy","prefix","readKey","needsSubResolver","createSubResolver","_resolveWithPrefixes","getOwnPropertyDescriptor","Reflect","getPrototypeOf","getKeysFromAllScopes","ownKeys","storage","_storage","_attachContext","subProxy","descriptorDefaults","_proxy","_context","_subProxy","_stack","setContext","receiver","isScriptable","getValue","_resolveScriptable","isIndexable","arr","_resolveArray","_resolveWithContext","allKeys","configurable","scriptable","indexable","_allKeys","resolveFallback","getScope","parent","addScopes","parentScopes","parentFallback","allScopes","addScopesFromKey","subGetTarget","resolveKeysFromAllScopes","_parseObjectDataRadialScale","_parsing","parse","EPSILON","getPoint","skip","getValueAxis","splineCurve","firstPoint","middlePoint","afterPoint","next","d01","d12","s01","s12","fa","fb","splineCurveMonotone","valueAxis","pointsLen","deltaK","mK","pointBefore","pointCurrent","pointAfter","slopeDelta","alphaK","betaK","tauK","squaredMagnitude","monotoneAdjust","iPixel","vPixel","monotoneCompute","capControlPoint","pt","_updateBezierControlPoints","controlPoints","spanGaps","cubicInterpolationMode","prev","tension","capBezierPoints","inArea","inAreaPrev","inAreaNext","_isDomSupported","_getParentNode","domNode","parentNode","host","parseMaxStyle","styleValue","parentProperty","valueInPixels","getComputedStyle","ownerDocument","defaultView","positions","getPositionedStyle","styles","suffix","pos","useOffsetPos","shadowRoot","getRelativePosition","borderBox","boxSizing","paddings","borders","box","touches","offsetX","offsetY","getBoundingClientRect","getCanvasPosition","round1","getMaximumSize","bbWidth","bbHeight","aspectRatio","margins","maxHeight","containerSize","container","containerStyle","containerBorder","containerPadding","getContainerSize","retinaScale","forceRatio","forceStyle","pixelRatio","deviceHeight","deviceWidth","setTransform","supportsEventListenerOptions","passiveSupported","passive","removeEventListener","readUsedSize","el","getPropertyValue","getStyle","_pointInLine","_steppedInterpolation","_bezierInterpolation","cp1","cp2","getRtlAdapter","rtl","rectX","setWidth","xPlus","leftForLtr","itemWidth","getRightToLeftAdapter","_itemWidth","overrideTextDirection","direction","original","getPropertyPriority","setProperty","prevTextDirection","restoreTextDirection","propertyFn","between","compare","normalize","normalizeSegment","_boundSegment","segment","startBound","endBound","getSegment","prevValue","inside","subStart","shouldStart","shouldStop","_boundSegments","segments","sub","splitByStyles","segmentOptions","chartContext","_chart","baseStyle","readStyle","_datasetIndex","prevStyle","addStyle","st","dir","p0","p0DataIndex","p1DataIndex","styleChanged","doSplitByStyles","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","replacer","Animator","_request","_charts","_running","_lastDate","_notify","anims","callbacks","numSteps","initial","currentStep","_refresh","_update","now","remaining","running","draw","_active","_total","tick","pop","_getAnims","charts","complete","progress","listen","cb","reduce","acc","cur","_duration","stop","cancel","animator","interpolators","boolean","factor","c0","number","Animation","cfg","currentValue","_fn","_easing","_start","_loop","_target","_prop","_from","_to","_promises","update","elapsed","wait","res","rej","resolved","method","Animations","_properties","configure","animationOptions","animatedProps","getOwnPropertyNames","option","_animateOptions","newOptions","$shared","$animations","resolveTargetOptions","_createAnimations","anim","awaitAll","scaleClip","allowedOverflow","getSortedDatasetIndices","filterVisible","metasets","_getSortedDatasetMetas","applyStack","stack","dsIndex","singleMode","otherValue","isStacked","stacked","getOrCreateStack","stacks","stackKey","indexValue","subStack","getLastIndexInStack","vScale","positive","getMatchingVisibleMetas","updateStacks","controller","_cachedMeta","_stacks","iAxis","vAxis","indexScale","valueScale","getStackKey","_top","_bottom","_visualValues","getFirstScaleId","shift","clearStacks","isDirectUpdateMode","cloneIfNotShared","cached","shared","DatasetController","static","_cachedDataOpts","getMeta","_type","_data","_objectData","_sharedOptions","_drawStart","_drawCount","enableOptionSharing","supportsDecimation","$context","_syncList","datasetElementType","dataElementType","initialize","linkScales","_stacked","addElements","isPluginEnabled","updateIndex","dataset","getDataset","chooseId","xid","xAxisID","yid","yAxisID","rid","rAxisID","iid","iAxisID","vid","vAxisID","getScaleForId","rScale","getDatasetMeta","scaleID","_getOtherScale","_destroy","_dataCheck","adata","convertObjectDataToArray","isExtensible","defineProperty","base","object","buildOrUpdateElements","resetNewElements","stackChanged","oldStacked","_resyncElements","scopeKeys","datasetScopeKeys","getOptionScopes","createResolver","sorted","parseArrayData","parseObjectData","parsePrimitiveData","isNotInOrderComparedToPrev","labels","getLabels","singleScale","xAxisKey","yAxisKey","getParsed","getDataElement","updateRangeFromParsed","parsedValue","NaN","getMinMax","canStack","otherScale","createStack","NEGATIVE_INFINITY","otherMin","otherMax","_skip","getAllParsedValues","getMaxOverflow","getLabelAndValue","getLabelForValue","_clip","toClip","defaultClip","chartArea","resolveDatasetElementOptions","resolveDataElementOptions","dataIndex","raw","createDataContext","createDatasetContext","_resolveElementOptions","elementType","sharing","datasetElementScopeKeys","resolveNamedOptions","freeze","_resolveAnimations","transition","datasetAnimationScopeKeys","getSharedOptions","includeOptions","sharedOptions","_animationsDisabled","_getSharedOptions","firstOpts","previouslySharedOptions","updateSharedOptions","updateElement","_setStyle","removeHoverStyle","setHoverStyle","_removeDatasetHoverStyle","_setDatasetHoverStyle","arg1","arg2","numMeta","numData","_insertElements","_removeElements","move","updateElements","removed","_sync","_dataChanges","_onDataPush","arguments","_onDataPop","_onDataShift","_onDataSplice","newCount","_onDataUnshift","computeMinSampleSize","_cache","$bar","visibleMetas","getAllScaleValues","curr","_length","updateMinAndPrev","getPixelForTick","parseValue","startValue","endValue","barStart","barEnd","_custom","parseFloatBar","parseArrayOrPrimitive","isFloatBar","custom","setBorderSkipped","edge","borderSkipped","horizontal","borderProps","enableBorderRadius","parseEdge","orig","v2","startEnd","setInflateAmount","inflateAmount","DoughnutController","animateRotate","animateScale","cutout","circumference","spacing","legend","generateLabels","fontColor","getDataVisibility","legendItem","toggleDataVisibility","innerRadius","outerRadius","getter","_getRotation","_getCircumference","_getRotationExtents","isDatasetVisible","arcs","getMaxBorderWidth","getMaxOffset","maxSize","chartWeight","_getRingWeight","ratioX","ratioY","startAngle","endAngle","startX","startY","endX","endY","calcMax","calcMin","maxX","maxY","minX","minY","getRatioAndOffset","maxRadius","radiusLength","_getVisibleDatasetWeightTotal","_getRingWeightOffset","_circumference","calculateCircumference","animationOpts","centerX","centerY","metaData","borderAlign","hoverBorderWidth","hoverOffset","ringWeightOffset","PolarAreaController","angleLines","circular","pointLabels","bind","_updateRadius","minSize","cutoutPercentage","getVisibleDatasetCount","xCenter","yCenter","datasetStartAngle","getIndexAngle","defaultAngle","countVisibleElements","_computeAngle","getDistanceFromCenterForValue","controllers","__proto__","BarController","categoryPercentage","barPercentage","grouped","_index_","_value_","iAxisKey","vAxisKey","bars","getBasePixel","isHorizontal","ruler","_getRuler","vpixels","_calculateBarValuePixels","ipixels","_calculateBarIndexPixels","center","_getStacks","skipNull","_getStackCount","_getStackIndex","pixels","barThickness","_startPixel","_endPixel","stackCount","baseValue","minBarLength","actualBase","floating","barSign","startPixel","getPixelForDecimal","endPixel","getValueForPixel","halfGrid","getLineWidthForValue","maxBarThickness","Infinity","percent","chunk","computeFlexCategoryTraits","thickness","computeFitCategoryTraits","stackIndex","rects","BubbleController","LineController","_dataset","_decimated","animated","maxGapLength","directUpdate","pointsCount","prevParsed","nullData","lastPoint","updateControlPoints","PieController","RadarController","_fullLoop","pointPosition","getPointPositionForValue","ScatterController","registry","getElement","abstract","DateAdapterBase","members","formats","diff","startOf","endOf","adapters","binarySearch","metaset","lookupMethod","_reversePixels","getRange","evaluateInteractionItems","handler","getSortedVisibleDatasetMetas","getIntersectItems","useFinalPosition","isPointInArea","inRange","getNearestCartesianItems","distanceMetric","useX","useY","deltaX","deltaY","getDistanceMetricForAxis","minDistance","getCenterPoint","getNearestItems","getProps","getNearestRadialItems","getAxisItems","rangeMethod","intersectsItem","Interaction","modes","nearest","STATIC_POSITIONS","filterByPosition","filterDynamicPositionByAxis","sortByWeight","setLayoutDims","layouts","params","wrap","stackWeight","placed","buildStacks","vBoxMaxWidth","hBoxMaxHeight","layout","fullSize","availableWidth","availableHeight","getCombinedMax","maxPadding","updateMaxPadding","boxPadding","updateDims","getPadding","newWidth","outerWidth","newHeight","outerHeight","widthChanged","heightChanged","same","other","getMargins","marginForPositions","fitBoxes","boxes","refitBoxes","refit","setBoxDims","placeBoxes","userPadding","addBox","_layers","z","removeBox","layoutItem","minPadding","layoutBoxes","wrapBoxes","centerHorizontal","centerVertical","leftAndTop","rightAndBottom","vertical","buildLayoutBoxes","verticalBoxes","horizontalBoxes","beforeLayout","visibleVerticalBoxCount","updatePos","change","handleMaxPadding","BasePlatform","acquireContext","releaseContext","isAttached","updateConfig","BasicPlatform","EXPANDO_KEY","EVENT_TYPES","touchstart","touchmove","touchend","pointerenter","pointerdown","pointermove","pointerup","pointerleave","pointerout","isNullOrEmpty","eventListenerOptions","removeListener","nodeListContains","nodeList","createAttachObserver","observer","MutationObserver","trigger","addedNodes","removedNodes","observe","childList","subtree","createDetachObserver","drpListeningCharts","oldDevicePixelRatio","onWindowResize","dpr","createResizeObserver","ResizeObserver","contentRect","listenDevicePixelRatioChanges","releaseObserver","disconnect","unlistenDevicePixelRatioChanges","createProxyAndListen","native","fromNativeEvent","addListener","DomPlatform","renderHeight","renderWidth","displayWidth","displayHeight","initCanvas","removeAttribute","proxies","$proxies","attach","detach","isConnected","Element","tooltipPosition","hasValue","final","tickOpts","determinedMaxTicks","_tickSize","maxScale","maxChart","_maxLength","determineMaxTicks","ticksLimit","maxTicksLimit","majorIndices","enabled","getMajorIndices","numMajorIndices","first","newTicks","ceil","skipMajors","evenMajorSpacing","getEvenSpacing","factors","_factorize","calculateSpacing","avgMajorSpacing","majorStart","majorEnd","offsetFromEdge","getTicksLimit","ticksLength","sample","numItems","increment","getPixelForGridLine","offsetGridLines","validIndex","lineValue","getTickMarkLength","getTitleHeight","titleAlign","reverseAlign","Scale","_margins","paddingTop","paddingBottom","paddingLeft","paddingRight","labelRotation","_range","_gridLineItems","_labelItems","_labelSizes","_longestTextCache","_userMax","_userMin","_suggestedMax","_suggestedMin","_ticksLength","_borderValue","_dataLimitsCached","suggestedMin","suggestedMax","metas","getTicks","xLabels","yLabels","getLabelItems","_computeLabelItems","beforeUpdate","sampleSize","beforeSetDimensions","setDimensions","afterSetDimensions","beforeDataLimits","determineDataLimits","afterDataLimits","minmax","keepZero","_addGrace","beforeBuildTicks","buildTicks","afterBuildTicks","samplingEnabled","_convertTicksToLabels","beforeCalculateLabelRotation","calculateLabelRotation","afterCalculateLabelRotation","afterAutoSkip","beforeFit","fit","afterFit","afterUpdate","reversePixels","_alignToPixels","alignToPixels","_callHooks","notifyPlugins","beforeTickToLabelConversion","generateTickLabels","afterTickToLabelConversion","numTicks","maxLabelDiagonal","_isVisible","labelSizes","_getLabelSizes","maxLabelWidth","widest","maxLabelHeight","highest","asin","titleOpts","gridOpts","titleHeight","tickPadding","angleRadians","labelHeight","labelWidth","_calculatePadding","_handleMargins","isRotated","labelsBelowTicks","offsetLeft","offsetRight","isFullSize","_computeLabelSizes","caches","widths","heights","tickFont","fontString","nestedLabel","widestLabelSize","highestLabelSize","_resolveTickFontOptions","valueAt","idx","decimal","getDecimalForPixel","getBaseValue","createTickContext","optionTicks","rot","_computeGridLineItems","tl","borderOpts","axisWidth","axisHalfWidth","alignBorderValue","borderValue","alignedLineValue","tx1","ty1","tx2","ty2","x1","y1","x2","y2","positionAxisID","limit","step","optsAtIndex","optsAtIndexBorder","lineColor","tickBorderDash","tickBorderDashOffset","tickAndPadding","hTickAndPadding","lineCount","textOffset","_getXAxisLabelAlignment","_getYAxisLabelAlignment","halfCount","tickTextAlign","labelPadding","_computeLabelArea","drawBackground","findIndex","drawGrid","drawLine","setLineDash","lineDashOffset","drawBorder","lastLineWidth","drawLabels","renderTextOptions","drawTitle","titleX","titleY","titleArgs","tz","gz","bz","axisID","_maxDigits","fontSize","TypedRegistry","isForType","isPrototypeOf","register","parentScope","isIChartComponent","itemDefaults","defaultRoutes","routes","propertyParts","sourceName","sourceScope","routeDefaults","registerDefaults","unregister","Registry","_typedRegistries","_each","addControllers","addPlugins","addScales","getController","_get","getPlugin","getScale","removeControllers","removeElements","removePlugins","removeScales","typedRegistry","arg","reg","_getRegistryForType","_exec","itemReg","component","camelMethod","PluginService","_init","notify","hook","_createDescriptors","descriptor","plugin","cancelable","invalidate","_oldCache","_notifyStateChanges","localIds","allPlugins","getOpts","pluginOpts","createDescriptors","previousDescriptors","some","pluginScopeKeys","getIndexAxis","datasetDefaults","idMatchesAxis","determineAxis","scaleOptions","getAxisFromDataset","mergeScaleConfig","chartDefaults","configScales","chartIndexAxis","scaleConf","boundDs","retrieveAxisFromDatasets","defaultId","getDefaultScaleIDFromAxis","defaultScaleOptions","defaultID","getAxisFromDefaultScaleID","initOptions","initData","keyCache","keysCached","cachedKeys","generate","addIfFound","Config","_config","initConfig","_scopeCache","_resolverCache","clearCache","clear","datasetType","additionalOptionScopes","_cachedScopes","mainScope","resetCache","keyLists","chartOptionScopes","subPrefixes","getResolver","hasFunction","needContext","resolverCache","KNOWN_POSITIONS","positionIsHorizontal","compare2Level","l1","l2","onAnimationsComplete","onComplete","onAnimationProgress","onProgress","getCanvas","instances","getChart","moveNumericKeys","intKey","Chart$1","invalidatePlugins","userConfig","initialCanvas","existingChart","OffscreenCanvas","_detectPlatform","_options","_aspectRatio","_metasets","_lastEvent","_listeners","_responsiveListeners","_sortedMetasets","_plugins","_hiddenIndices","attached","_doResize","timeout","resizeDelay","_initialize","bindEvents","_resizeBeforeDraw","_resize","newSize","newRatio","onResize","render","ensureScalesHaveIDs","axisOptions","buildOrUpdateScales","scaleOpts","updated","isRadial","dposition","dtype","scaleType","hasUpdated","_updateMetasets","_destroyDatasetMeta","_removeUnreferencedMetasets","buildOrUpdateControllers","newControllers","order","ControllerClass","_resetElements","animsDisabled","_updateScales","_checkEventBindings","_updateHiddenIndices","_minPadding","_updateLayout","_updateDatasets","_eventHandler","_updateHoverStyles","existingEvents","newEvents","unbindEvents","changes","_getUniformDataChanges","datasetCount","makeSet","changeSet","noArea","_idx","_updateDataset","layers","_drawDatasets","_drawDataset","useClip","getDatasetArea","getElementsAtEventForMode","setDatasetVisibility","_updateVisibility","_stop","destroy","toBase64Image","toDataURL","bindUserEvents","bindResponsiveEvents","_add","_remove","detached","updateHoverStyle","getActiveElements","setActiveElements","activeElements","lastActive","pluginId","replay","hoverOptions","deactivated","activated","inChartArea","eventFilter","_handleEvent","_getActiveElements","isClick","_isClickEvent","lastEvent","determineLastEvent","Chart","parseBorderRadius$1","angleDelta","borderRadius","halfThickness","innerLimit","computeOuterLimit","outerArcLimit","outerStart","outerEnd","innerStart","innerEnd","rThetaToXY","theta","pathArc","pixelMargin","innerR","spacingOffset","avNogSpacingRadius","angleOffset","outerStartAdjustedRadius","outerEndAdjustedRadius","outerStartAdjustedAngle","outerEndAdjustedAngle","innerStartAdjustedRadius","innerEndAdjustedRadius","innerStartAdjustedAngle","innerEndAdjustedAngle","outerMidAdjustedAngle","pCenter","p4","innerMidAdjustedAngle","p8","outerStartX","outerStartY","outerEndX","outerEndY","fullCircles","inner","lineJoin","angleMargin","clipArc","setStyle","lineCap","pathVars","paramsStart","paramsEnd","segmentStart","segmentEnd","outside","pathSegment","lineMethod","stepped","getLineMethod","fastPathSegment","prevX","lastY","avgX","countX","pointIndex","drawX","truncX","_getSegmentMethod","usePath2D","Path2D","_path","strokePathWithCache","segmentMethod","strokePathDirect","LineElement","_points","_segments","_pointsUpdated","findStartAndEnd","solidSegments","_computeSegments","_interpolate","_getInterpolationMethod","interpolated","inRange$1","hitRadius","getBarBounds","bar","half","skipOrLimit","boundingRects","maxW","maxH","parseBorderWidth","maxR","enableBorder","parseBorderRadius","outer","skipX","skipY","addNormalRectPath","inflateRect","amount","refRect","ArcElement","chartX","chartY","rAdjust","betweenAngles","withinRadius","halfAngle","halfRadius","radiusOffset","drawArc","BarElement","addRectPath","mouseX","mouseY","inXRange","inYRange","PointElement","hoverRadius","BORDER_COLORS","BACKGROUND_COLORS","getBorderColor","getBackgroundColor","getColorizer","colorizeDoughnutDataset","colorizePolarAreaDataset","colorizeDefaultDataset","containsColorsDefinitions","plugin_colors","forceOverride","_args","chartOptions","colorizer","cleanDecimatedDataset","cleanDecimatedData","plugin_decimation","algorithm","beforeElementsUpdate","xAxis","getStartAndCountOfVisiblePointsSimplified","threshold","decimated","samples","bucketWidth","sampledIndex","endIndex","maxAreaPoint","maxArea","nextA","avgY","avgRangeStart","avgRangeEnd","avgRangeLength","rangeOffs","rangeTo","pointAx","pointAy","lttbDecimation","minIndex","maxIndex","startIndex","xMin","dx","lastIndex","intermediateIndex1","intermediateIndex2","minMaxDecimation","_getBounds","_findSegmentEnd","_getEdge","_createBoundaryLine","boundary","linePoints","_pointsFromSegments","_shouldApplyFill","_resolveTarget","propagate","visited","_decodeFill","fillOption","parseFillOption","firstCh","decodeTargetIndex","addPointsBelow","sourcePoint","linesBelow","postponed","findPoint","unshift","pointValue","firstValue","lastValue","simpleArc","getLineByIndex","sourcePoints","below","getLinesBelow","_buildStackLine","_getTargetValue","computeCircularBoundary","_getTargetPixel","computeLinearBoundary","computeBoundary","_drawfill","lineOpts","above","clipVertical","doFill","clipY","lineLoop","tpoints","targetSegments","tgt","subBounds","fillSources","fillSource","notShape","clipBounds","interpolatedLineTo","targetLoop","interpolatedPoint","afterDatasetsUpdate","$filler","beforeDraw","drawTime","beforeDatasetsDraw","beforeDatasetDraw","getBoxSize","labelOpts","boxHeight","boxWidth","usePointStyle","pointStyleWidth","itemHeight","Legend","_added","legendHitBoxes","_hoveredItem","doughnutMode","legendItems","columnSizes","lineWidths","buildLabels","labelFont","_computeTitleHeight","_fitRows","_fitCols","hitboxes","totalHeight","_itemHeight","heightLimit","totalWidth","currentColWidth","currentColHeight","col","legendItemText","calculateItemWidth","fontLineHeight","calculateLegendItemHeight","calculateItemHeight","calculateItemSize","adjustHitBoxes","rtlHelper","hitbox","_draw","defaultColor","halfFontSize","textDirection","lineDash","drawOptions","SQRT2","yBoxTop","xBoxLeft","drawLegendBox","_textX","titleFont","titlePadding","topPaddingPlusHalfFontSize","_getLegendItemAt","hitBox","lh","handleEvent","onLeave","isListened","hoveredItem","sameItem","plugin_legend","_element","afterEvent","ci","useBorderRadius","Title","_padding","textSize","_drawArgs","fontOpts","plugin_title","titleBlock","createTitle","WeakMap","plugin_subtitle","positioners","average","eventPosition","nearestElement","tp","pushOrConcat","toPush","splitNewlines","createTooltipItem","formattedValue","getTooltipSize","tooltip","bodyFont","footerFont","titleLineCount","footerLineCount","bodyLineItemCount","combinedBodyLength","bodyItem","before","after","beforeBody","afterBody","titleSpacing","titleMarginBottom","displayColors","bodySpacing","footerMarginTop","footerSpacing","widthPadding","maxLineWidth","determineXAlign","yAlign","chartWidth","xAlign","caret","caretSize","caretPadding","doesNotFitWithAlign","determineAlignment","determineYAlign","getBackgroundPoint","alignment","paddingAndSize","alignX","alignY","getAlignedX","getBeforeAfterBodyLines","overrideCallbacks","defaultCallbacks","beforeTitle","tooltipItems","labelCount","afterTitle","beforeLabel","tooltipItem","labelColor","labelTextColor","bodyColor","labelPointStyle","afterLabel","beforeFooter","afterFooter","invokeCallbackWithFallback","Tooltip","opacity","_eventPosition","_size","_cachedAnimations","_tooltipItems","dataPoints","caretX","caretY","labelColors","labelPointStyles","labelTextColors","getTitle","getBeforeBody","getBody","bodyItems","scoped","getAfterBody","getFooter","_createItems","itemSort","positionAndSize","backgroundPoint","external","drawCaret","tooltipPoint","caretPosition","getCaretPosition","x3","y3","ptX","ptY","titleColor","_drawColorBox","colorX","rtlColorX","yOffSet","colorY","multiKeyBackground","outerX","innerX","strokeRect","drawBody","bodyAlign","bodyLineHeight","xLinePadding","fillLineOfText","bodyAlignForCalculation","textColor","drawFooter","footerAlign","footerColor","tooltipSize","quadraticCurveTo","_updateAnimationTarget","animX","animY","_willRender","hasTooltipContent","globalAlpha","positionChanged","_positionChanged","_ignoreReplayEvents","plugin_tooltip","afterInit","afterDraw","Colors","Decimation","Filler","SubTitle","findOrAddLabel","addedLabels","addIfString","lastIndexOf","_getLabelForValue","generateTicks$1","generationOptions","dataRange","precision","maxTicks","maxDigits","includeBounds","unit","maxSpaces","rmin","rmax","countDefined","minSpacing","niceMin","niceMax","numSpaces","rounded","almostWhole","decimalPlaces","relativeLabelSize","LinearScaleBase","_startValue","_endValue","_valueRange","handleTickRangeOptions","setMin","setMax","minSign","maxSign","getTickLimit","stepSize","computeTickLimit","LinearScale","log10Floor","changeExponent","isMajor","tickVal","steps","rangeExp","rangeStep","generateTicks","minExp","exp","startExp","lastTick","LogarithmicScale","_zero","getTickBackdropHeight","determineLimits","fitWithPointLabels","limits","valueCount","_pointLabels","pointLabelOpts","additionalAngle","centerPointLabels","getPointLabelContext","getPointPosition","drawingArea","plFont","updateLimits","setCenterPoint","_pointLabelItems","itemOpts","extra","createPointLabelItem","isNotOverlapped","buildPointLabelItems","hLimits","vLimits","outerDistance","pointLabelPosition","yForAngle","getTextAlignForAngle","leftForTextAlign","drawPointLabelBox","backdropLeft","backdropTop","backdropWidth","backdropHeight","pathRadiusLine","RadialLinearScale","animate","leftMovement","rightMovement","topMovement","bottomMovement","scalingFactor","getValueForDistanceFromCenter","scaledDistance","pointLabel","createPointLabelContext","distanceFromCenter","getBasePosition","getPointLabelPosition","drawPointLabels","gridLineOpts","drawRadiusLine","INTERVALS","millisecond","common","second","minute","hour","week","quarter","UNITS","sorter","adapter","_adapter","parser","isoWeekday","_parseOpts","determineUnitForAutoTicks","minUnit","capacity","interval","MAX_SAFE_INTEGER","addTick","time","timestamps","ticksFromTimestamps","majorUnit","setMajorTicks","TimeScale","displayFormats","_unit","_majorUnit","_offsets","_normalized","normalized","_applyBounds","_getLabelBounds","getLabelTimestamps","timeOpts","_generate","_filterBetween","_getLabelCapacity","determineUnitForFormatting","determineMajorUnit","initOffsets","offsetAfterAutoskip","getDecimalForValue","weekday","hasWeekday","getDataTimestamps","tooltipFormat","datetime","fmt","_tickFormatFunction","minorFormat","majorFormat","offsets","_getLabelSize","ticksOpts","tickLabelWidth","cosRotation","sinRotation","tickFontSize","exampleTime","exampleLabel","prevSource","nextSource","prevTarget","nextTarget","span","CategoryScale","_addedLabels","added","TimeSeriesScale","_table","_minPos","_tableRange","_getTimestampsForTable","buildLookupTable","registerables","ChartJS","defaultColors","createCanvasElement","chartCanvas","dataMatrix","dataRow","getChartJsDataset","diagram","getChartJsOptions","createChartJS","Body","_collapsed","collapsed","createTable","tableModelCache","tableWrapper","xlsxExport","xlsxTableModelCache","getXlsxTableModel","exportTableButton","createExportButton","exportTable","createCharts","models","chartsModelCache","chartsWrapper","exportChartsButton","exportCharts","actionText","blob","aElement","URL","createObjectURL","revokeObjectURL","xlsxConfig","exportContext","contextValue","jsonFieldValues","reportModel","header","getCompleteRowsFromElement","domtoimage","toJpeg","dataUrl","download","tc","innerText","ReportSlot","isModal","applyNewReport","report","applyNewReportByFieldValues","onLoad","fetchReport","applyButtons","hasCharts","Application","createHeader","createReportSlots","reportSlotElement","mainForm","createMainForm","reportSlots","onreadystatechange","readyState"],"mappings":"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","x_google_ignoreList":[29,30,31]}