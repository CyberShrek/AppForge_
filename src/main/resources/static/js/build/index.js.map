{"version":3,"file":"index.js","sources":["../../../../../../../typescript/utils/resolver.ts","../../../../../../../typescript/index.ts"],"sourcesContent":["export function resolveCSS(name: string){\n    const source = `./css/${name}.css`\n    const headElement = document.querySelector(\"head\")\n    if(headElement.querySelector(`link[href=\"${source}\"]`) === null) {\n        const styleEl = document.createElement(\"link\")\n        styleEl.setAttribute(\"rel\", \"stylesheet\")\n        styleEl.setAttribute(\"href\", source)\n        headElement.appendChild(styleEl)\n    }\n}","import {resolveCSS} from \"./utils/resolver\"\nimport {popupMessage} from \"./utils/modal\";\n\nresolveCSS(\"global\")\nresolveCSS(\"inputs\")\nresolveCSS(\"states\")\nresolveCSS(\"third-party/animate\")\n\n// Looking for main elements\n\nconst\n    headerElement: HTMLElement = document.getElementById(\"header\"),\n    mainFormElement: HTMLFormElement = document.getElementById(\"main-form\") as HTMLFormElement,\n    reportSlotElements: Set<HTMLElement> = new Set(document.querySelectorAll(\"body > div.report\"))\n\n// Defining main fragments corresponding to main elements\n\nif(headerElement !== null)\n    import(\"./fragments/Header\").then(fragment => new fragment.default(headerElement))\n\nif(mainFormElement !== null)\n    import(\"./fragments/mainForm/MainForm\").then(fragment => {\n        const mainForm = new fragment.default(mainFormElement)\n\n        // mainForm.sections.get(\"period\").fields.get(\"list\").subscribeOnField(\"period\", \"range\",\n        //     value => popupMessage(\"Выбрано\", value))\n    })\n\nif(headerElement !== null)\n    import(\"./fragments/report/ReportSlot\").then(fragment => reportSlotElements\n        .forEach(reportSlotElement => new fragment.default(reportSlotElement)))"],"names":["resolveCSS","name","source","headElement","document","querySelector","styleEl","createElement","setAttribute","appendChild","headerElement","getElementById","mainFormElement","reportSlotElements","Set","querySelectorAll","import","then","fragment","default","forEach","reportSlotElement"],"mappings":"AAAM,SAAUA,EAAWC,GACvB,MAAMC,EAAS,SAASD,QAClBE,EAAcC,SAASC,cAAc,QAC3C,GAA2D,OAAxDF,EAAYE,cAAc,cAAcH,OAAsB,CAC7D,MAAMI,EAAUF,SAASG,cAAc,QACvCD,EAAQE,aAAa,MAAO,cAC5BF,EAAQE,aAAa,OAAQN,GAC7BC,EAAYM,YAAYH,EAC3B,CACL,CCNAN,EAAW,UACXA,EAAW,UACXA,EAAW,UACXA,EAAW,uBAIX,MACIU,EAA6BN,SAASO,eAAe,UACrDC,EAAmCR,SAASO,eAAe,aAC3DE,EAAuC,IAAIC,IAAIV,SAASW,iBAAiB,sBAIxD,OAAlBL,GACCM,OAAO,wBAAsBC,MAAKC,GAAY,IAAIA,EAASC,QAAQT,KAEhD,OAApBE,GACCI,OAAO,0BAAiCC,MAAKC,IACxB,IAAIA,EAASC,QAAQP,EAAgB,IAMzC,OAAlBF,GACCM,OAAO,4BAAiCC,MAAKC,GAAYL,EACpDO,SAAQC,GAAqB,IAAIH,EAASC,QAAQE"}