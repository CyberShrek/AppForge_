{"version":3,"file":"Header-82d2382d.js","sources":["../../../../../../../typescript/fragments/Header.ts","../../../../../../../typescript/utils/api/appMetaData.ts"],"sourcesContent":["import {resolveCSS} from \"../utils/resolver\"\nimport {downloadUserManual, fetchAppMetaData} from \"../utils/api/appMetaData\"\nimport {popupList, popupTimeoutAction} from \"../utils/modal\"\n\nexport default class Header implements Fragment{\n\n    private appMetaData: AppMetaData\n\n    constructor(\n        public core: HTMLElement\n    ) {\n        resolveCSS(\"header\")\n        fetchAppMetaData().then(appInfo => this.appMetaData = appInfo)\n        this.activateResetButton()\n        this.activateInfoButton()\n        this.activateHelpButton()\n    }\n\n    private activateResetButton(){\n        this.activateButton(\"reset\", () => location.reload())\n    }\n\n    private activateInfoButton(){\n        this.activateButton(\"info\", () => {\n            popupList(\n                \"Информация о приложении\",\n                [\n                    \"Версия программы: \"          + this.appMetaData?.version,\n                    \"Дата последнего обновления: \"+ this.appMetaData?.updateDate,\n                    \"Технолог: \"                  + this.appMetaData?.technologistName\n                ])})\n    }\n\n    private activateHelpButton(){\n        this.activateButton(\"help\", () => {\n            popupTimeoutAction(\n                \"Руководство\",\n                \"Скачать инструкцию\",\n                () => downloadUserManual(this.appMetaData.manualPath)\n            )\n        })\n    }\n\n    private activateButton(buttonClassName: string, onClick: () => void){\n        this.core.querySelector(\"button.\"+buttonClassName).addEventListener(\"click\", onClick)\n    }\n}","import wretch from \"wretch\"\nimport {popupHttpResourceError} from \"../modal\"\n\nexport const fetchAppMetaData=(): Promise<AppMetaData|null> =>\n    wretch(\"../info\")\n        .get()\n        .res(response => response.body as AppMetaData)\n        .catch(errorBody => {\n            popupHttpResourceError(errorBody, \"Не удалось загрузить информацию о приложении\")\n            return null\n        })\n\nexport function downloadUserManual(href){\n    const link = document.createElement('a')\n    link.href = href\n    link.target = '_blank'\n    document.body.appendChild(link)\n    link.click()\n    document.body.removeChild(link)\n}"],"names":["Header","constructor","core","this","resolveCSS","wretch","get","res","response","body","catch","errorBody","popupHttpResourceError","then","appInfo","appMetaData","activateResetButton","activateInfoButton","activateHelpButton","activateButton","location","reload","popupList","_a","version","_b","updateDate","_c","technologistName","popupTimeoutAction","href","link","document","createElement","target","appendChild","click","removeChild","downloadUserManual","manualPath","buttonClassName","onClick","querySelector","addEventListener"],"mappings":"gKAIc,MAAOA,EAIjBC,YACWC,GAAAC,KAAID,KAAJA,EAEPE,EAAW,UCPfC,EAAO,WACFC,MACAC,KAAIC,GAAYA,EAASC,OACzBC,OAAMC,IACHC,EAAuBD,EAAW,gDAC3B,QDGQE,MAAKC,GAAWX,KAAKY,YAAcD,IACtDX,KAAKa,sBACLb,KAAKc,qBACLd,KAAKe,oBACR,CAEOF,sBACJb,KAAKgB,eAAe,SAAS,IAAMC,SAASC,UAC/C,CAEOJ,qBACJd,KAAKgB,eAAe,QAAQ,eACxBG,EACI,0BACA,CACI,sBAAgD,QAAhBC,EAAApB,KAAKY,mBAAW,IAAAQ,OAAA,EAAAA,EAAEC,SAClD,gCAAgD,QAAhBC,EAAAtB,KAAKY,mBAAW,IAAAU,OAAA,EAAAA,EAAEC,YAClD,cAAgD,QAAhBC,EAAAxB,KAAKY,mBAAW,IAAAY,OAAA,EAAAA,EAAEC,mBACpD,GACb,CAEOV,qBACJf,KAAKgB,eAAe,QAAQ,KACxBU,EACI,cACA,sBACA,IC1BV,SAA6BC,GAC/B,MAAMC,EAAOC,SAASC,cAAc,KACpCF,EAAKD,KAAOA,EACZC,EAAKG,OAAS,SACdF,SAASvB,KAAK0B,YAAYJ,GAC1BA,EAAKK,QACLJ,SAASvB,KAAK4B,YAAYN,EAC9B,CDmBsBO,CAAmBnC,KAAKY,YAAYwB,aAC7C,GAER,CAEOpB,eAAeqB,EAAyBC,GAC5CtC,KAAKD,KAAKwC,cAAc,UAAUF,GAAiBG,iBAAiB,QAASF,EAChF"}