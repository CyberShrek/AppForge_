{"version":3,"file":"wretch-40d1f204.js","sources":["../../../../typescript/node_modules/wretch/dist/constants.js","../../../../typescript/node_modules/wretch/dist/utils.js","../../../../typescript/node_modules/wretch/dist/config.js","../../../../typescript/node_modules/wretch/dist/resolver.js","../../../../typescript/node_modules/wretch/dist/middleware.js","../../../../typescript/node_modules/wretch/dist/core.js","../../../../typescript/node_modules/wretch/dist/index.js"],"sourcesContent":["export const JSON_MIME = \"application/json\";\nexport const CONTENT_TYPE_HEADER = \"Content-Type\";\nexport const FETCH_ERROR = Symbol();\nexport const CATCHER_FALLBACK = Symbol();\n//# sourceMappingURL=constants.js.map","import { CONTENT_TYPE_HEADER } from \"./constants.js\";\nexport function extractContentType(headers = {}) {\n    var _a;\n    return (_a = Object.entries(headers).find(([k]) => k.toLowerCase() === CONTENT_TYPE_HEADER.toLowerCase())) === null || _a === void 0 ? void 0 : _a[1];\n}\nexport function isLikelyJsonMime(value) {\n    return /^application\\/.*json.*/.test(value);\n}\nexport const mix = function (one, two, mergeArrays = false) {\n    return Object.entries(two).reduce((acc, [key, newValue]) => {\n        const value = one[key];\n        if (Array.isArray(value) && Array.isArray(newValue)) {\n            acc[key] = mergeArrays ? [...value, ...newValue] : newValue;\n        }\n        else if (typeof value === \"object\" && typeof newValue === \"object\") {\n            acc[key] = mix(value, newValue, mergeArrays);\n        }\n        else {\n            acc[key] = newValue;\n        }\n        return acc;\n    }, { ...one });\n};\n//# sourceMappingURL=utils.js.map","import { mix } from \"./utils.js\";\nconst config = {\n    // Default options\n    options: {},\n    // Error type\n    errorType: \"text\",\n    // Polyfills\n    polyfills: {\n    // fetch: null,\n    // FormData: null,\n    // URLSearchParams: null,\n    // performance: null,\n    // PerformanceObserver: null,\n    // AbortController: null\n    },\n    polyfill(p, doThrow = true, instance = false, ...args) {\n        const res = this.polyfills[p] ||\n            (typeof self !== \"undefined\" ? self[p] : null) ||\n            (typeof global !== \"undefined\" ? global[p] : null);\n        if (doThrow && !res)\n            throw new Error(p + \" is not defined\");\n        return instance && res ? new res(...args) : res;\n    }\n};\n/**\n * Sets the default fetch options that will be stored internally when instantiating wretch objects.\n *\n * ```js\n * import wretch from \"wretch\"\n *\n * wretch.options({ headers: { \"Accept\": \"application/json\" } });\n *\n * // The fetch request is sent with both headers.\n * wretch(\"...\", { headers: { \"X-Custom\": \"Header\" } }).get().res();\n * ```\n *\n * @param options Default options\n * @param replace If true, completely replaces the existing options instead of mixing in\n */\nexport function setOptions(options, replace = false) {\n    config.options = replace ? options : mix(config.options, options);\n}\n/**\n * Sets the default polyfills that will be stored internally when instantiating wretch objects.\n * Useful for browserless environments like `node.js`.\n *\n * Needed for libraries like [fetch-ponyfill](https://github.com/qubyte/fetch-ponyfill).\n *\n * ```js\n * import wretch from \"wretch\"\n *\n * wretch.polyfills({\n *   fetch: require(\"node-fetch\"),\n *   FormData: require(\"form-data\"),\n *   URLSearchParams: require(\"url\").URLSearchParams,\n * });\n *\n * // Uses the above polyfills.\n * wretch(\"...\").get().res();\n * ```\n *\n * @param polyfills An object containing the polyfills\n * @param replace If true, replaces the current polyfills instead of mixing in\n */\nexport function setPolyfills(polyfills, replace = false) {\n    config.polyfills = replace ? polyfills : mix(config.polyfills, polyfills);\n}\n/**\n * Sets the default method (text, json, â€¦) used to parse the data contained in the response body in case of an HTTP error.\n * As with other static methods, it will affect wretch instances created after calling this function.\n *\n * _Note: if the response Content-Type header is set to \"application/json\", the body will be parsed as json regardless of the errorType._\n *\n * ```js\n * import wretch from \"wretch\"\n *\n * wretch.errorType(\"json\")\n *\n * wretch(\"http://server/which/returns/an/error/with/a/json/body\")\n *   .get()\n *   .res()\n *   .catch(error => {\n *     // error[errorType] (here, json) contains the parsed body\n *     console.log(error.json)\n *   })\n * ```\n *\n * If null, defaults to \"text\".\n */\nexport function setErrorType(errorType) {\n    config.errorType = errorType;\n}\nexport default config;\n//# sourceMappingURL=config.js.map","import { middlewareHelper } from \"./middleware.js\";\nimport { mix } from \"./utils.js\";\nimport { FETCH_ERROR, CATCHER_FALLBACK } from \"./constants.js\";\n/**\n * This class inheriting from Error is thrown when the fetch response is not \"ok\".\n * It extends Error and adds status, text and body fields.\n */\nexport class WretchError extends Error {\n}\nexport const resolver = (wretch) => {\n    const sharedState = Object.create(null);\n    wretch = wretch._addons.reduce((w, addon) => addon.beforeRequest &&\n        addon.beforeRequest(w, wretch._options, sharedState)\n        || w, wretch);\n    const { _url: url, _options: opts, _config: config, _catchers: _catchers, _resolvers: resolvers, _middlewares: middlewares, _addons: addons } = wretch;\n    const catchers = new Map(_catchers);\n    const finalOptions = mix(config.options, opts);\n    // The generated fetch request\n    let finalUrl = url;\n    const _fetchReq = middlewareHelper(middlewares)((url, options) => {\n        finalUrl = url;\n        return config.polyfill(\"fetch\")(url, options);\n    })(url, finalOptions);\n    // Throws on an http error\n    const referenceError = new Error();\n    const throwingPromise = _fetchReq\n        .catch(error => {\n        throw { [FETCH_ERROR]: error };\n    })\n        .then(response => {\n        if (!response.ok) {\n            const err = new WretchError();\n            // Enhance the error object\n            err[\"cause\"] = referenceError;\n            err.stack = err.stack + \"\\nCAUSE: \" + referenceError.stack;\n            err.response = response;\n            err.url = finalUrl;\n            if (response.type === \"opaque\") {\n                throw err;\n            }\n            return response.text().then((body) => {\n                var _a;\n                err.message = body;\n                if (config.errorType === \"json\" || ((_a = response.headers.get(\"Content-Type\")) === null || _a === void 0 ? void 0 : _a.split(\";\")[0]) === \"application/json\") {\n                    try {\n                        err.json = JSON.parse(body);\n                    }\n                    catch (e) { /* ignore */ }\n                }\n                err.text = body;\n                err[\"status\"] = response.status;\n                throw err;\n            });\n        }\n        return response;\n    });\n    // Wraps the Promise in order to dispatch the error to a matching catcher\n    const catchersWrapper = (promise) => {\n        return promise.catch(err => {\n            const fetchErrorFlag = err.hasOwnProperty(FETCH_ERROR);\n            const error = fetchErrorFlag ? err[FETCH_ERROR] : err;\n            const catcher = ((error === null || error === void 0 ? void 0 : error.status) && catchers.get(error.status)) ||\n                catchers.get(error === null || error === void 0 ? void 0 : error.name) || (fetchErrorFlag && catchers.has(FETCH_ERROR) && catchers.get(FETCH_ERROR));\n            if (catcher)\n                return catcher(error, wretch);\n            const catcherFallback = catchers.get(CATCHER_FALLBACK);\n            if (catcherFallback)\n                return catcherFallback(error, wretch);\n            throw error;\n        });\n    };\n    const bodyParser = funName => cb => funName ?\n        // If a callback is provided, then callback with the body result otherwise return the parsed body itself.\n        catchersWrapper(throwingPromise.then(_ => _ && _[funName]()).then(_ => cb ? cb(_) : _)) :\n        // No body parsing method - return the response\n        catchersWrapper(throwingPromise.then(_ => cb ? cb(_) : _));\n    const responseChain = {\n        _wretchReq: wretch,\n        _fetchReq,\n        _sharedState: sharedState,\n        res: bodyParser(null),\n        json: bodyParser(\"json\"),\n        blob: bodyParser(\"blob\"),\n        formData: bodyParser(\"formData\"),\n        arrayBuffer: bodyParser(\"arrayBuffer\"),\n        text: bodyParser(\"text\"),\n        error(errorId, cb) {\n            catchers.set(errorId, cb);\n            return this;\n        },\n        badRequest(cb) { return this.error(400, cb); },\n        unauthorized(cb) { return this.error(401, cb); },\n        forbidden(cb) { return this.error(403, cb); },\n        notFound(cb) { return this.error(404, cb); },\n        timeout(cb) { return this.error(408, cb); },\n        internalError(cb) { return this.error(500, cb); },\n        fetchError(cb) { return this.error(FETCH_ERROR, cb); },\n    };\n    const enhancedResponseChain = addons.reduce((chain, addon) => ({\n        ...chain,\n        ...addon.resolver\n    }), responseChain);\n    return resolvers.reduce((chain, r) => r(chain, wretch), enhancedResponseChain);\n};\n//# sourceMappingURL=resolver.js.map","/**\n * @private @internal\n */\nexport const middlewareHelper = (middlewares) => (fetchFunction) => {\n    return middlewares.reduceRight((acc, curr) => curr(acc), fetchFunction) || fetchFunction;\n};\n//# sourceMappingURL=middleware.js.map","import { mix, extractContentType, isLikelyJsonMime } from \"./utils.js\";\nimport { JSON_MIME, CONTENT_TYPE_HEADER, CATCHER_FALLBACK } from \"./constants.js\";\nimport { resolver } from \"./resolver.js\";\nimport config from \"./config.js\";\nexport const core = {\n    _url: \"\",\n    _options: {},\n    _config: config,\n    _catchers: new Map(),\n    _resolvers: [],\n    _deferred: [],\n    _middlewares: [],\n    _addons: [],\n    addon(addon) {\n        return { ...this, _addons: [...this._addons, addon], ...addon.wretch };\n    },\n    errorType(errorType) {\n        return {\n            ...this,\n            _config: {\n                ...this._config,\n                errorType\n            }\n        };\n    },\n    polyfills(polyfills, replace = false) {\n        return {\n            ...this,\n            _config: {\n                ...this._config,\n                polyfills: replace ? polyfills : mix(this._config.polyfills, polyfills)\n            }\n        };\n    },\n    url(_url, replace = false) {\n        if (replace)\n            return { ...this, _url };\n        const split = this._url.split(\"?\");\n        return {\n            ...this,\n            _url: split.length > 1 ?\n                split[0] + _url + \"?\" + split[1] :\n                this._url + _url\n        };\n    },\n    options(options, replace = false) {\n        return { ...this, _options: replace ? options : mix(this._options, options) };\n    },\n    headers(headerValues) {\n        return { ...this, _options: mix(this._options, { headers: headerValues || {} }) };\n    },\n    accept(headerValue) {\n        return this.headers({ Accept: headerValue });\n    },\n    content(headerValue) {\n        return this.headers({ [CONTENT_TYPE_HEADER]: headerValue });\n    },\n    auth(headerValue) {\n        return this.headers({ Authorization: headerValue });\n    },\n    catcher(errorId, catcher) {\n        const newMap = new Map(this._catchers);\n        newMap.set(errorId, catcher);\n        return { ...this, _catchers: newMap };\n    },\n    catcherFallback(catcher) {\n        return this.catcher(CATCHER_FALLBACK, catcher);\n    },\n    resolve(resolver, clear = false) {\n        return { ...this, _resolvers: clear ? [resolver] : [...this._resolvers, resolver] };\n    },\n    defer(callback, clear = false) {\n        return {\n            ...this,\n            _deferred: clear ? [callback] : [...this._deferred, callback]\n        };\n    },\n    middlewares(middlewares, clear = false) {\n        return {\n            ...this,\n            _middlewares: clear ? middlewares : [...this._middlewares, ...middlewares]\n        };\n    },\n    fetch(method = this._options.method, url = \"\", body = null) {\n        let base = this.url(url).options({ method });\n        // \"Jsonify\" the body if it is an object and if it is likely that the content type targets json.\n        const contentType = extractContentType(base._options.headers);\n        const jsonify = typeof body === \"object\" && (!base._options.headers || !contentType || isLikelyJsonMime(contentType));\n        base =\n            !body ? base :\n                jsonify ? base.json(body, contentType) :\n                    base.body(body);\n        return resolver(base\n            ._deferred\n            .reduce((acc, curr) => curr(acc, acc._url, acc._options), base));\n    },\n    get(url = \"\") {\n        return this.fetch(\"GET\", url);\n    },\n    delete(url = \"\") {\n        return this.fetch(\"DELETE\", url);\n    },\n    put(body, url = \"\") {\n        return this.fetch(\"PUT\", url, body);\n    },\n    post(body, url = \"\") {\n        return this.fetch(\"POST\", url, body);\n    },\n    patch(body, url = \"\") {\n        return this.fetch(\"PATCH\", url, body);\n    },\n    head(url = \"\") {\n        return this.fetch(\"HEAD\", url);\n    },\n    opts(url = \"\") {\n        return this.fetch(\"OPTIONS\", url);\n    },\n    body(contents) {\n        return { ...this, _options: { ...this._options, body: contents } };\n    },\n    json(jsObject, contentType) {\n        const currentContentType = extractContentType(this._options.headers);\n        return this.content(contentType ||\n            isLikelyJsonMime(currentContentType) && currentContentType ||\n            JSON_MIME).body(JSON.stringify(jsObject));\n    }\n};\n//# sourceMappingURL=core.js.map","import { setOptions, setErrorType, setPolyfills } from \"./config.js\";\nimport { core } from \"./core.js\";\nimport { WretchError } from \"./resolver.js\";\n/**\n * Creates a new wretch instance with a base url and base\n * [fetch options](https://developer.mozilla.org/en-US/docs/Web/API/WindowOrWorkerGlobalScope/fetch).\n *\n * ```ts\n * import wretch from \"wretch\"\n *\n * // Reusable instance\n * const w = wretch(\"https://domain.com\", { mode: \"cors\" })\n * ```\n *\n * @param _url The base url\n * @param _options The base fetch options\n * @returns A fresh wretch instance\n */\nfunction factory(_url = \"\", _options = {}) {\n    return { ...core, _url, _options };\n}\nfactory[\"default\"] = factory;\n/** {@inheritDoc setOptions} */\nfactory.options = setOptions;\n/** {@inheritDoc setErrorType} */\nfactory.errorType = setErrorType;\n/** {@inheritDoc setPolyfills} */\nfactory.polyfills = setPolyfills;\nfactory.WretchError = WretchError;\nexport default factory;\n//# sourceMappingURL=index.js.map"],"names":["CONTENT_TYPE_HEADER","FETCH_ERROR","Symbol","CATCHER_FALLBACK","extractContentType","headers","_a","Object","entries","find","k","toLowerCase","isLikelyJsonMime","value","test","mix","one","two","mergeArrays","reduce","acc","key","newValue","Array","isArray","config","options","errorType","polyfills","polyfill","p","doThrow","instance","args","res","this","self","global","Error","WretchError","resolver","wretch","sharedState","create","_addons","w","addon","beforeRequest","_options","_url","url","opts","_config","_catchers","_resolvers","resolvers","_middlewares","middlewares","addons","catchers","Map","finalOptions","finalUrl","_fetchReq","fetchFunction","reduceRight","curr","middlewareHelper","referenceError","throwingPromise","catch","error","then","response","ok","err","stack","type","text","body","message","get","split","json","JSON","parse","e","status","catchersWrapper","promise","fetchErrorFlag","hasOwnProperty","catcher","name","has","catcherFallback","bodyParser","funName","cb","_","responseChain","_wretchReq","_sharedState","blob","formData","arrayBuffer","errorId","set","badRequest","unauthorized","forbidden","notFound","timeout","internalError","fetchError","enhancedResponseChain","chain","r","core","_deferred","replace","length","headerValues","accept","headerValue","Accept","content","auth","Authorization","newMap","resolve","clear","defer","callback","fetch","method","base","contentType","jsonify","delete","put","post","patch","head","contents","jsObject","currentContentType","stringify","factory"],"mappings":"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","x_google_ignoreList":[0,1,2,3,4,5,6]}