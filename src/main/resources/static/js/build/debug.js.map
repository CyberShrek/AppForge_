{"version":3,"file":"debug.js","sources":["../../../../../../../typescript/util/resolver.ts","../../../../../../../typescript/util/modal.ts","../../../../../../../typescript/store/appConfig.ts","../../../../../../../typescript/util/domWizard.ts","../../../../../../../typescript/fragments/Fragment.ts","../../../../../../../typescript/fragments/inputs/Button.ts","../../../../../../../typescript/fragments/header/Header.ts","../../../../../../../typescript/store/appInfo.ts","../../../../../../../typescript/util/api/appInfo.ts","../../../../../../../typescript/applicaton/ForgedApplication.ts","../../../../../../../typescript/debug.ts"],"sourcesContent":["export function resolveCSS(name: string){\n    const source = `/appforge/css/${name}.css`\n    const headElement = document.querySelector(\"head\")\n    if(headElement.querySelector(`link[href=\"${source}\"]`) === null) {\n        const styleEl = document.createElement(\"link\")\n        styleEl.setAttribute(\"rel\", \"stylesheet\")\n        styleEl.setAttribute(\"href\", source)\n        headElement.appendChild(styleEl)\n    }\n}","import swal, {SweetAlertResult} from \"sweetalert2\"\nimport {type SweetAlertOptions, type SweetAlertPosition} from \"sweetalert2\"\nimport {resolveCSS} from \"./resolver\"\n\nresolveCSS(\"third-party/sweetalert2\")\n\nlet mouseEvent: MouseEvent\ndocument.addEventListener(\"mousemove\", event => mouseEvent = event)\n\nexport function popupMessage(title?: string, text?: string){\n    popupSweetModal({title, text})\n}\n\nexport function popupList(title?: string, list?: { icon: string, text: string }[], footer?: string){\n    popupSweetModal({\n        title,\n        html:`<ul>${list.map(item => `<li style='list-style-type: \"${item.icon}\\t\"'>${item.text}</li>`).join(\"\")}</ul>`,\n        footer\n    })\n}\n\nexport function popupTimeoutAction(text?: string, confirmButtonText?: string, onConfirm?: () => void, radioOptions?: {[key: string]: string}){\n    popupSweetModal({\n        text, confirmButtonText,\n        input: radioOptions ? \"radio\" : undefined,\n        inputOptions: radioOptions ? radioOptions : undefined,\n        showConfirmButton: true,\n        timer: 3000,\n        timerProgressBar: true,\n        backdrop: false\n    }).then(result => {\n        if(result.isConfirmed)\n            onConfirm()\n    })\n}\n\nexport function popupError(title?: string, text?: string){\n    popupSweetModal({title, text, icon: \"error\"})\n}\n\nexport function popupHttpDataError(html?: string, footer?: string){\n    popupSweetModal({\n        title: \"Ошибка получения данных\",\n        icon: \"error\", html, footer\n    })\n}\n\nfunction popupSweetModal(options: SweetAlertOptions): Promise<SweetAlertResult>{\n    const position = getSweetMousePosition()\n    return swal.fire({\n        confirmButtonColor: \"var(--primary-color)\",\n        position,\n        showClass: {popup: 'animate__animated '+getAnimationShowClass(position)},\n        hideClass: {popup: 'animate__animated animate__zoomOut'},\n        showCloseButton: true,\n        allowEnterKey: false,\n        showConfirmButton: false,\n        ...options\n    })\n}\n\nfunction getSweetMousePosition(): SweetAlertPosition{\n    if(!mouseEvent) return \"center\"\n\n    const { clientX, clientY } = mouseEvent,\n        screenWidth = window.innerWidth || document.documentElement.clientWidth || document.body.clientWidth,\n        screenHeight = window.innerHeight || document.documentElement.clientHeight || document.body.clientHeight,\n        horizontalPosition = clientX <= screenWidth / 3 ? 'left' : clientX >= (screenWidth / 3) * 2 ? 'right' : 'center',\n        verticalPosition = clientY <= screenHeight / 3 ? 'top' : clientY >= (screenHeight / 3) * 2 ? 'bottom' : 'center',\n        position = `${verticalPosition}-${horizontalPosition}`\n\n    return position === \"top-center\" ? \"top\" : position === \"bottom-center\" ? \"bottom\" : position as SweetAlertPosition\n}\n\nfunction getAnimationShowClass(position: SweetAlertPosition): string{\n    switch (position) {\n        case \"top-left\"     : return \"animate__fadeInTopLeft\"\n        case \"top\"          : return \"animate__fadeInDown\"\n        case \"top-right\"    : return \"animate__fadeInTopRight\"\n        case \"center-left\"  : return \"animate__fadeInLeft\"\n        case \"center\"       : return \"animate__fadeIn\"\n        case \"center-right\" : return \"animate__fadeInRight\"\n        case \"bottom-left\"  : return \"animate__fadeInBottomLeft\"\n        case \"bottom\"       : return \"animate__fadeInUp\"\n        case \"bottom-right\" : return \"animate__fadeInBottomRight\"\n        default             : return \"\"\n    }\n}","// @ts-ignore config variable is placed in the html file\nexport const appConfig: ForgedAppConfig = config","// Used to create inner html and return them as elements\nconst factoryElement = document.createElement(\"factory\")\ndocument.body.appendChild(factoryElement)\nfactoryElement.hidden = true\n\nexport function create<T extends HTMLElement>(html: string): T{\n    factoryElement.innerHTML = html\n    return factoryElement.firstElementChild as T\n}\n\n// Returns created element with specific tag name and attributes\n// export function createElement<T extends HTMLElement>(tagName: string, textContent: string = \"\", ...attributes: Attribute[]): T{\n//     const element = document.createElement(tagName) as T\n//     if(textContent) element.textContent = textContent\n//     attributes?.forEach(attribute =>\n//         element.setAttribute(\n//             Object.keys(attribute)[0],\n//             String(Object.values(attribute)[0])\n//         )\n//     )\n//     return element\n// }\n//\n// export function createDivElement(...attributes: Attribute[]): HTMLDivElement{\n//     return createElement(\"div\", \"\", ...attributes)\n// }\n//\n// export function createButtonElement(textContent: string = \"\", ...attributes: Attribute[]): HTMLButtonElement{\n//     return createElement(\"button\", textContent, ...attributes)\n// }\n//\n// export function createInputElement(type: string, ...attributes: Attribute[]): HTMLInputElement{\n//     return createElement(\"input\", \"\", {type}, ...attributes)\n// }\n//\n// export function createLinkElement(textContent: string = \"\", href: string, ...attributes: Attribute[]): HTMLLabelElement{\n//     return createElement(\"a\", textContent, {href}, ...attributes)\n// }\n//\n// export function createLabelElement(textContent: string = \"\", ...attributes: Attribute[]): HTMLLabelElement{\n//     return createElement(\"label\", textContent, ...attributes)\n// }\n//\n// export function createImageElement(src: string = \"\", alt: string = \"not found\", ...attributes: Attribute[]): HTMLImageElement{\n//     return createElement(\"img\", \"\", {src}, ...attributes)\n// }\n//\n// export function createCanvasElement(...attributes: Attribute[]): HTMLCanvasElement{\n//     return createElement(\"canvas\", \"\", ...attributes)\n// }\n\n// Removes all child elements\nexport function emptyElement(element: Element, withText: boolean = true){\n    const text = element.textContent\n    while(element.firstElementChild !== null)\n        element.firstElementChild.remove()\n\n    if(!withText) element.textContent = text\n}\n\n// Returns startName with serial number\nexport function generateUniqueId(startName: string = \"element\"){\n    let serialNumber = -1,\n        name: string\n\n    do name = startName +\"-\"+ serialNumber++\n    while (document.getElementById(name) !== null)\n\n    return name\n}\n\nexport function scrollIntoElement(element: HTMLElement) {\n    element.scrollIntoView({behavior: \"smooth\", block: \"start\"})\n}\n\nexport function toggleFullscreen(element: HTMLElement){\n    if(!!getFullscreenElement())\n        document.exitFullscreen()\n    else\n        element.requestFullscreen()\n}\n\nexport function getFullscreenElement(): Element{\n    return document.querySelector(\":fullscreen\")\n}\n\nexport function setCursorToLoading() {\n    document.documentElement.style.cursor = 'wait'\n}\n\nexport function setCursorToDefault() {\n    document.documentElement.style.cursor = 'default'\n}","import {create} from \"../util/domWizard\"\n\nexport abstract class Fragment<T extends HTMLElement> {\n\n    protected root: T\n\n    protected constructor(root: string|T) {\n        this.root = root instanceof HTMLElement ? root : create(root)\n    }\n\n    append(...items: (Fragment<HTMLElement> | Element | string)[]){\n        items.forEach(item =>\n            this.root.append((item instanceof Fragment) ? item.root : item)\n        )\n    }\n\n    select<T extends HTMLElement>(selectors: string){\n        return this.root.querySelector<T>(selectors)\n    }\n    selectAll<T extends HTMLElement>(selectors: string){\n        return this.root.querySelectorAll<T>(selectors)\n    }\n\n    hide(){\n        this.root.style.display = \"none\"\n    }\n\n    show(){\n        this.root.style.display = \"\"\n    }\n\n    remove(){\n        this.root.remove()\n    }\n\n    addClass(tokens: string){\n        this.root.classList.add(tokens)\n    }\n    removeClass(tokens: string){\n        this.root.classList.remove(tokens)\n    }\n    toggleClass(tokens: string){\n        this.root.classList.toggle(tokens)\n    }\n    hasClass(token: string): boolean{\n        return this.root.classList.contains(token)\n    }\n    set className(className: string){\n        this.root.className = className\n    }\n    get className(){\n        return this.root.className\n    }\n}\n\nexport interface Trigger {\n    subscribe(callback: (value?: any) => void)\n}","import {Fragment, Trigger} from \"../Fragment\"\nimport {create} from \"../../util/domWizard\"\n\nexport interface Config{\n    className?: string\n    text?: string\n    image?: string\n    hint?: string\n}\n\nexport class Button extends Fragment<HTMLButtonElement> implements Trigger{\n\n    private imageElement: HTMLImageElement\n\n    constructor(config: Config, onClick?: () => void) {\n        super(`<button></button>`)\n\n        this.className = config.className\n        this.text = config.text\n        this.image = config.image\n        this.hint = config.hint\n\n        if(onClick) this.subscribe(onClick)\n    }\n\n    subscribe(callback: () => void) {\n        this.root.addEventListener(\"click\", () => callback())\n    }\n\n    set isAvailable(available: boolean){\n        if(available)\n            this.removeClass(\"unavailable\")\n        else this.addClass(\"unavailable\")\n    }\n    get isAvailable(): boolean{\n        return !this.hasClass(\"unavailable\")\n    }\n    enable=() => this.isAvailable = true\n    disable=() => this.isAvailable = false\n\n    get hint(): string{\n        return this.root.getAttribute(\"title\")\n    }\n\n    set hint(hint: string){\n        this.root.setAttribute(\"title\", hint)\n    }\n\n    set text(text: string){\n        this.root.textContent = text\n    }\n    get text(): string{\n        return this.root.textContent\n    }\n\n    set image(src: string|null){\n        this.imageElement?.remove()\n        if(!!src) {\n            this.imageElement = create(`<img src=\"/appforge/img/${src}\" alt=\"\"/>`)\n            this.append(this.imageElement)\n        }\n    }\n    get image(): string{\n        return this.imageElement?.src\n    }\n}","import {resolveCSS} from \"../../util/resolver\"\nimport {popupList, popupTimeoutAction} from \"../../util/modal\"\nimport {appConfig} from \"../../store/appConfig\"\nimport {Fragment} from \"../Fragment\"\nimport {Button} from \"../inputs/Button\"\nimport {create} from \"../../util/domWizard\"\nresolveCSS(\"header\")\n\nexport default class Header extends Fragment<HTMLHeadingElement>{\n\n    groupLink = create<HTMLLinkElement>(`<a></a>`)\n    appName = create<HTMLParagraphElement>(`<p></p>`)\n    resetButton = new Button({className: \"frameless reset\", image: \"reset.svg\", hint: \"Сброс\"}, location.reload)\n    infoButton  = new Button({className: \"frameless info\",  image: \"info.svg\",  hint: \"Информация о приложении\"})\n    helpButton  = new Button({className: \"frameless help\",  image: \"help.svg\",  hint: \"Руководство пользователя\"})\n\n    constructor() {\n        super(`<header id=\"header\"></header>`)\n\n        this.append(this.groupLink, \"|\", this.appName, this.resetButton, this.infoButton, this.helpButton)\n    }\n\n    setAppInfo(appInfo: AppInfo){\n        this.groupLink.href        = appInfo.groupPath\n        this.groupLink.textContent = appInfo.groupName\n        this.appName.textContent   = appInfo.name\n\n        this.infoButton.subscribe(() => this.showAppInfo(appInfo))\n        this.helpButton.subscribe(() => this.showHelpDownloader(appInfo.instructionPath))\n    }\n\n    private showAppInfo(appInfo: AppInfo){\n        popupList(\n            \"Информация\",\n            [\n                {icon: \"🛈\", text: \"Версия программы: \" + appInfo.version},\n                {icon: \"🗓\", text: \"Дата обновления: \"  + appInfo.updateDate},\n                {icon: \"👤\", text: \"Технолог: \"        + appInfo.technologistName}\n            ],\n            appConfig.additionalInfo\n        )\n    }\n\n    private showHelpDownloader(helpPath: string){\n        popupTimeoutAction(\n            \"Руководство\",\n            \"Скачать инструкцию\",\n            () => downloadUserManual(helpPath)\n        )\n    }\n}\n\nfunction downloadUserManual(href){\n    const link = document.createElement('a')\n    link.href = href\n    link.target = '_blank'\n    document.body.appendChild(link)\n    link.click()\n    document.body.removeChild(link)\n}","import {fetchAppInfo} from \"../util/api/appInfo\"\n\nexport const appInfoPromise: Promise<AppInfo> = fetchAppInfo()","import wretch from \"wretch\"\nimport {appConfig} from \"../../store/appConfig\"\n\nexport function fetchAppInfo(): Promise<AppInfo>{\n    return wretch(\"info\")\n        .headers({\"Code\": appConfig.code})\n        .get()\n        .json((appInfo: AppInfo) => appInfo)\n}","import Header from \"../fragments/header/Header\"\nimport {resolveCSS} from \"../util/resolver\"\nimport {Fragment} from \"../fragments/Fragment\"\nimport {appInfoPromise} from \"../store/appInfo\";\n\nresolveCSS(\"global\")\nresolveCSS(\"inputs\")\nresolveCSS(\"states\")\nresolveCSS(\"third-party/animate\")\nresolveCSS(\"misc\")\n\nexport class ForgedApplication extends Fragment<HTMLBodyElement>{\n\n    readonly header: Header = new Header()\n    // readonly mainForm: MainForm = new MainForm()\n    // readonly reportSlots: Map<string, ReportSlot> = new Map()\n\n    constructor() {\n        super(document.body as HTMLBodyElement)\n        this.append(\n            this.header\n            // this.mainForm\n        )\n\n        appInfoPromise.then(appInfo => {\n            document.title = appInfo.name\n            this.header.setAppInfo(appInfo)\n        })\n    }\n\n    // private createMainForm(): MainForm {\n    //     const mainForm = new MainForm({target: document.getElementById(\"main-form\") as HTMLFormElement})\n    //     mainForm.confirmButton.subscribe(() => {\n    //         mainForm.confirmButton.disable()\n    //         // The main form apply the \"main\" report only\n    //         this.reportSlots.get(\"main\").applyNewReportByFieldValues(jsonifyFields(mainForm.fields), mainForm.confirmButton.enable)\n    //     }, false)\n    //     return mainForm\n    // }\n\n    // private createReportSlots=(): typeof this.reportSlots => new Map(\n    //     [...document.body.querySelectorAll<HTMLDivElement>(\"div.report\")].map(reportSlotElement =>\n    //         [reportSlotElement.getAttribute(\"key\"), new ReportSlot({target: reportSlotElement})])\n    // )\n}","import {ForgedApplication} from \"./applicaton/ForgedApplication\"\nimport {create} from \"./util/domWizard\"\n\nnew ForgedApplication()\n\n\n\n// reportSlot.applyNewReport({\n//     charts: [\n//     //     {\n//     //     data: {a: 123, b: 444, c: 3334},\n//     //     config: {\n//     //         title: \"Debug\",\n//     //         graphs: [\n//     //             {\n//     //                 type: \"bar\",\n//     //                 color: \"red\",\n//     //                 name: \"debug\"\n//     //             }\n//     //         ]\n//     //     }\n//     // },{\n//     //     data: {a: 344, b: 4244, c: 23, d: 4, e: 1233},\n//     //     config: {\n//     //         title: \"Debug\",\n//     //         graphs: [\n//     //             {\n//     //                 type: \"bar\",\n//     //                 color: \"blue\",\n//     //                 name: \"debug\"\n//     //             }\n//     //         ]\n//     //     }\n//     // },\n//         {\n//         title: \"Debug\",\n//         diagram: [\n//             {\n//                 type: \"line\",\n//                 name: \"debug\"\n//             },\n//             {\n//                 type: \"pie\",\n//                 name: \"debug2\"\n//             }\n//         ],\n//         data: {a: [344, 44], b: [244, 51], c: [23, 134], d: [4, 100], e: [233, 10]}\n//     }],\n//     table: {\n//         data: createTableData(2, 5, 100),\n//         total: [],\n//         head: [\n//             [{text: \"Primary\", colspan: 2}, {text: \"Values\", colspan: 5}],\n//             [{text: \"1\", addFilter: true},{text: \"2\", addFilter: true},\n//                 {text: \"1\"}, {text: \"2\"}, {text: \"3\"}, {text: \"4\"}, {text: \"5\"}]\n//         ],\n//         primaryColumnsNumber: 2,\n//         groupedColumnsNumber: 1,\n//         xlsxExport: null\n//     }\n// })\n\nfunction createTableData(primaryCellsSize: number, valueCellsSize: number, tableHeight: number): TableData {\n    const tableData: TableData = []\n    for(let i : number = 0; i < tableHeight; i++){\n        const primaryCells: string[] = [];\n        for(let j : number = 0; j < primaryCellsSize; j++) {\n            primaryCells[j] = randomWord()\n        }\n        const valueCells: number[] = []\n        for(let j : number = 0; j < valueCellsSize; j++)\n            valueCells[j] = Math.floor(Math.random()*1000);\n        tableData[i] = [...primaryCells, ...valueCells]\n    }\n    return tableData\n}\n\nfunction randomWord():string {\n    const words :string [] = ['Вахта','Вакцина','Отечество','Владения','Овца','Решительность',\n        'Рана','Опасность','Производство','Коммерция','Звание','Начало','Институт',\n        'Происшествие','Икона','Полнота','Консерва','Доставка','Адмирал','Ассамблея',\n        'Избыток','Муниципалитет','Руководство','Мышцы','Заболевание','Отзыв','Натура',\n        'Дискотека','Монахиня'];\n    return words[Math.floor(Math.random()*(words.length-1))];\n}"],"names":["resolveCSS","name","source","headElement","document","querySelector","styleEl","createElement","setAttribute","appendChild","mouseEvent","popupSweetModal","options","position","clientX","clientY","screenWidth","window","innerWidth","documentElement","clientWidth","body","screenHeight","innerHeight","clientHeight","getSweetMousePosition","swal","fire","Object","assign","confirmButtonColor","showClass","popup","getAnimationShowClass","hideClass","showCloseButton","allowEnterKey","showConfirmButton","addEventListener","event","appConfig","config","factoryElement","create","html","innerHTML","firstElementChild","hidden","Fragment","constructor","root","this","HTMLElement","append","items","forEach","item","select","selectors","selectAll","querySelectorAll","hide","style","display","show","remove","addClass","tokens","classList","add","removeClass","toggleClass","toggle","hasClass","token","contains","className","Button","onClick","super","enable","isAvailable","disable","text","image","hint","subscribe","callback","available","getAttribute","textContent","src","_a","imageElement","Header","groupLink","appName","resetButton","location","reload","infoButton","helpButton","setAppInfo","appInfo","href","groupPath","groupName","showAppInfo","showHelpDownloader","instructionPath","title","list","footer","icon","version","updateDate","technologistName","additionalInfo","map","join","helpPath","onConfirm","radioOptions","link","target","click","removeChild","downloadUserManual","confirmButtonText","input","undefined","inputOptions","timer","timerProgressBar","backdrop","then","result","isConfirmed","appInfoPromise","wretch","headers","Code","code","get","json","header"],"mappings":"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"}