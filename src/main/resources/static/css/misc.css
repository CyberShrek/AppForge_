label-panel{
    display: grid;
    grid-template-columns: repeat(4, 1fr);
    padding: calc(var(--indent) * 2);
    gap: calc(var(--indent) * 2);
}

label-wrapper > p{
    font-weight: normal;
    margin: 0 0 5px 0; 
}

square-label, .labeled {
    display: grid;
    grid-template: 
        "img  .   "   0fr
        "img  main"   1fr
        "img  extra"  0fr
        /0fr  1fr;

    justify-items: center;
    align-items: center;
    
    padding: 0 var(--indent);
 
    color: black;
    background: var(--secondary-color);
    border-radius: var(--border-radius);
    border: 0;
}

:is(square-label, .labeled) img {
    width: 80px;
    height: 80px;
    margin: calc(var(--indent) * 2) var(--indent);
    
    grid-area: img;
}

:is(square-label, .labeled) name {
    display: flex;
    text-align: center;
    
    grid-area: main;
}

:is(square-label, .labeled) value {
    font-size:xx-large;
    font-weight: bold;
    color: var(--primary-color);
    filter: saturate(10) brightness(0.5);
}

:is(square-label, .labeled) type {
    font-size: medium;
    text-align: center;
}

:is(square-label, .labeled) change {
    background: aliceblue;
    padding: calc(var(--indent)/2);
    margin: 0 var(--indent);
    border-radius: var(--border-radius);
}

:is(square-label, .labeled) count {
    text-align: end;
    white-space: nowrap;
    
    grid-area: main;
}

:is(square-label, .labeled) proportion {
    display: flex;
    flex-direction: column;
    justify-items: center;
    align-items: center;
    
    grid-area: extra;
}
:is(square-label, .labeled) proportion value {
    font-size:medium;
}
:is(square-label, .labeled) proportion type {
    font-size: smaller;
    max-width: 80%;
}

:is(square-label, .labeled) > button{
    margin: 0;
    height: 0;
    width: 0;
    transform: translateY(calc(-2*var(--indent)));
    
    grid-area: extra;
}

loading{
    display: flex;
    justify-content: center;
    align-items: center;
}

loading svg {
    animation: rotate 2s linear infinite;
    width: 50px;
    height: 50px;
}
loading svg circle {
    stroke: var(--primary-color);
    stroke-linecap: round;
    animation: dash 1.5s ease-in-out infinite;
}

@keyframes rotate {
    100% {
        transform: rotate(360deg);
    }
}

@keyframes dash {
    0% {
        stroke-dasharray: 1, 150;
        stroke-dashoffset: 0;
    }
    50% {
        stroke-dasharray: 90, 150;
        stroke-dashoffset: -35;
    }
    100% {
        stroke-dasharray: 90, 150;
        stroke-dashoffset: -124;
    }
}