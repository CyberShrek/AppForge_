import {resolveCSS} from "../../util/resolver"
import {popupList, popupTimeoutAction} from "../../util/modal"
import {appConfig} from "../../store/appConfig"
import {Fragment} from "../Fragment"
import {Button} from "../inputs/Button"
import {create} from "../../util/domWizard"
import {valueOrDefault} from "../../util/data";
resolveCSS("header")

export default class Header extends Fragment<HTMLHeadingElement>{

    groupLink = create<HTMLLinkElement>(`<a></a>`)
    appName = create<HTMLParagraphElement>(`<p></p>`)
    resetButton = new Button({className: "frameless reset", image: "reset.svg", hint: "–°–±—Ä–æ—Å"}, location.reload)
    infoButton  = new Button({className: "frameless info",  image: "info.svg",  hint: "–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏"})
    helpButton  = new Button({className: "frameless help",  image: "help.svg",  hint: "–†—É–∫–æ–≤–æ–¥—Å—Ç–≤–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"})

    constructor() {
        super(`<header id="header"></header>`)

        this.append(this.groupLink, "|", this.appName, this.resetButton, this.infoButton, this.helpButton)
    }

    setAppInfo(appInfo: AppInfo){
        this.groupLink.href        = appInfo.groupPath
        this.groupLink.textContent = appInfo.groupName
        this.appName.textContent   = appInfo.name

        this.infoButton.subscribe(() => this.showAppInfo(appInfo))
        this.helpButton.subscribe(() => this.showHelpDownloader(appInfo.instructionPath))
    }

    private showAppInfo(appInfo: AppInfo){
        popupList(
            "–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è",
            [
                {icon: "üõà", text: "–í–µ—Ä—Å–∏—è –ø—Ä–æ–≥—Ä–∞–º–º—ã: " + appInfo.version},
                {icon: "üóì", text: "–î–∞—Ç–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è: "  + valueOrDefault(appConfig.info.updateDate, appInfo.updateDate)},
                {icon: "üë§", text: "–¢–µ—Ö–Ω–æ–ª–æ–≥: "        + appInfo.technologistName}
            ],
            appConfig.info.additional
        )
    }

    private showHelpDownloader(helpPath: string){
        popupTimeoutAction(
            "–†—É–∫–æ–≤–æ–¥—Å—Ç–≤–æ",
            "–°–∫–∞—á–∞—Ç—å –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—é",
            () => downloadUserManual(helpPath)
        )
    }
}

function downloadUserManual(href){
    const link = document.createElement('a')
    link.href = href
    link.target = '_blank'
    document.body.appendChild(link)
    link.click()
    document.body.removeChild(link)
}